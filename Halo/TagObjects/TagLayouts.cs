using System.Collections.Generic;
using System.Xml.Linq;
using System.Xml.Schema;
using System.Xml;
using System.Xml.Serialization;

namespace InfiniteRuntimeTagViewer.Halo.TagObjects
{
	// ###### for anyone interested, check out https://github.com/Lord-Zedd/H5Tags/tree/master/tags // thank you lord zedd
	// ###### its quite useful for mapping out descriptions and stuff
	public class TagLayouts
	{
		public class C
		{
			public string? T { get; set; } // T = type
			public Dictionary<long, C>? B { get; set; } = null; // B = blocks? i forgot what B stands for

			/// <summary>
			/// Length of the tagblock
			/// </summary>
			public long S { get; set; } // S = size // length of tagblock

			public string? N { get; set; } // N = name // our name for the block 


			/// <summary>
			/// Set during load, will be used when I add netcode 
			/// </summary>
			public long MemoryAddress { get; set; }

			/// <summary>
			/// The absolute offset from the base address of the tag
			/// eg C2 will resolve to assault_rifle_mp.weapon + C2 
			/// 
			/// This will be recursive so the actual value might be 
			///		assault_rifle_mp.weapon + C2 + (nested block) 12 + (nested block) 4
			///		
			/// This will allow us to sync up changes across the server and client without
			/// the need to re-resolve memory addresses.
			/// </summary>
			public string AbsoluteTagOffset { get; set; } // as a string we can append offsets rather than mathmatically adding them
		}

		public class FlagGroup : C
		{
			public FlagGroup()
			{
				T = "FlagGroup";
			}

			/// <summary>
			/// Amount of bytes for flags
			/// </summary>
			public int A { get; set; }

			/// <summary>
			/// The max bit, if 0 then defaults to A * 8
			/// </summary>
			public int MB { get; set; }

			public string N;
			/// <summary>
			/// String description of the flags
			/// </summary>
			public Dictionary<int, string> STR { get; set; } = new Dictionary<int, string>();
		}
		public class EnumGroup : C
		{
			public EnumGroup()
			{
				T = "EnumGroup";
			}

			/// <summary>
			/// Amount of bytes for enum
			/// </summary>
			public int A { get; set; }

			public string N;
			/// <summary>
			/// String description of the flags
			/// </summary>
			public Dictionary<int, string> STR { get; set; } = new Dictionary<int, string>();
		}

		public static Dictionary<string, Dictionary<long, C>> Tags = new Dictionary<string, Dictionary<long, C>>()
		{

			
			
			{
				"proj",
				new()
				{
					{ 40, new C { T = "Float" } },
					{ 44, new C { T = "Float" } },
					{ 48, new C { T = "Float" } },
					{ 52, new C { T = "Float" } },
					{ 56, new C { T = "Float" } },
					{ 60, new C { T = "Float" } },
					{ 64, new C { T = "Float" } },
					{ 76, new C { T = "Float" } },
					{ 80, new C { T = "Float" } },
					{ 84, new C { T = "Float" } },

					{ 92, new C { T = "Tagblock", N = "Source Sidecar" } }, // SidecarPathDefinition

					{ 112, new C { T = "Float" } },
					{ 116, new C { T = "Float" } },

					{ 120, new C { T = "TagRef", N = "Model" } }, // vehicle model
					{ 148, new C { T = "TagRef", N = "Asset" } }, // aset tag ref
					{ 176, new C { T = "TagRef" } },
					{ 204, new C { T = "TagRef" } },

					{ 232, new C { T = "4Byte" } },

					{ 240, new C { T = "TagRef" } },

					{ 276, new C { T = "Float" } },

					{ 288, new C { T = "TagRef" } },
					{ 316, new C { T = "TagRef" } }, // foot tag ref
					{ 344, new C { T = "TagRef" } }, // vemd tag ref
					{ 372, new C { T = "TagRef" } }, // smed tag ref
					{ 400, new C { T = "TagRef" } },

					{ 432, new C { T = "Float" } },

					{ 448, new C { T = "Tagblock", N = "AI Properties" } }, // object_ai_properties
					{ 468, new C { T = "Tagblock", N = "Functions" } }, // s_object_function_definition
					{ 488, new C { T = "4Byte" } },
					{ 492, new C { T = "Tagblock" } }, // ObjectRuntimeInterpolatorFunctionsBlock
					{ 512, new C { T = "Tagblock" } }, // ObjectFunctionSwitchDefinition
					{ 532, new C { T = "Tagblock" } }, // i343::Objects::ObjectFunctionForwarding
					{ 552, new C { T = "4Byte" } },
					{ 556, new C { T = "Tagblock" } }, // i343::Objects::AmmoRefillVariant
					{ 576, new C { T = "4Byte" } },
					{
						0x248,
						new C
						{
							T = "Tagblock",
							B = new Dictionary<long, C> // object_attachment_definition
							{
								{ 4, new C{ T="TagRef"}}, // effe
							    { 32, new C{ T="TagRef"}}, // effe
							    { 64, new C{ T="Tagblock"}},
								{ 84, new C{ T="TagRef"}}, //
							    { 112, new C{ T="Tagblock"}}
							},
							S = 148
						}
					},
					{ 604, new C { T = "Tagblock" } }, // object_indirect_lighting_settings_definition
					{ 624, new C { T = "Tagblock" } }, // s_water_physics_hull_surface_definition
					{ 644, new C { T = "Tagblock" } }, // s_jetwash_definition
					{ 664, new C { T = "Tagblock" } }, // object_definition_widget
					{ 684, new C { T = "Tagblock" } }, // object_change_color_definition
					{ 704, new C { T = "Tagblock" } }, // s_multiplayer_object_properties_definition
					{ 724, new C { T = "Tagblock" } }, // i343::Objects::ForgeObjectEntryDefinition

					{ 744, new C { T = "TagRef" } },
					{ 772, new C { T = "TagRef" } },

					{ 800, new C { T = "Tagblock" } }, // s_object_spawn_effects
					{ 820, new C { T = "Tagblock" } }, // ModelDissolveDataBlock

					{ 0x448, new C { T = "Tagblock" } },
					{ 0x45C, new C { T = "TagRef" } },
					{ 0x484, new C { T = "Tagblock" } },
					{ 0x4C8, new C { T = "Tagblock" } },
					{ 0x4E4, new C { T = "TagRef" } },
					{ 0x500, new C { T = "Tagblock" } },
					{ 0x514, new C { T = "TagRef" } },
					{ 0x530, new C { T = "Tagblock" } },
					{ 0x548, new C { T = "Tagblock" } },
					{ 0x55C, new C { T = "TagRef" } },

					{ 0x578, new C { T = "Tagblock" } },
					{ 0x58C, new C { T = "Tagblock" } },

					{ 0x5A0, new C { T = "Float" } },
					{ 0x5A4, new C { T = "Float" } },
					{ 0x5A8, new C { T = "Float" } },
					{ 0x5AC, new C { T = "Float" } },
					{ 0x5B0, new C { T = "Float" } },
					{ 0x5B4, new C { T = "Float" } },
					{ 0x5B8, new C { T = "Float" } },
					{ 0x5BC, new C { T = "Float" } },
					{ 0x5C0, new C { T = "Float" } },
					{ 0x5E0, new C { T = "Float" } },

					{ 0x5E8, new C { T = "Tagblock" } },
					{ 0x60C, new C { T = "Tagblock" } },
					{ 0x620, new C { T = "Tagblock" } },
					{ 0x638, new C { T = "Tagblock" } },
					{ 0x64C, new C { T = "Float" } },
					{ 0x650, new C { T = "Tagblock" } },
					{ 0x664, new C { T = "Tagblock" } },
					{ 0x678, new C { T = "Tagblock" } },
					{ 0x68C, new C { T = "Tagblock" } }, // hm, that address was off by +0x4
					{ 0x6A0, new C { T = "Tagblock" } },

					{ 0x6B8, new C { T = "TagRef" } }, //PROJ

					{ 0x6D4, new C { T = "Float" } },
					{ 0x6F8, new C { T = "Float" } },
					{ 0x704, new C { T = "Float" } },
					{ 0x708, new C { T = "Float" } },
					{ 0x710, new C { T = "Float", N = "Max Range" } },
					{ 0x720, new C { T = "Float" } },
					{ 0x72C, new C { T = "Float" } },

					{ 0x738, new C { T = "TagRef" } }, // EFFE
					{ 0x754, new C { T = "TagRef" } }, // EEFFE
					{ 0x770, new C { T = "TagRef" } },
					{ 0x78C, new C { T = "TagRef" } }, // JPT
					{ 0x7A8, new C { T = "TagRef" } }, // JPT
					{ 0x7C4, new C { T = "TagRef" } },
					{ 0x7E0, new C { T = "TagRef" } },
					{ 0x800, new C { T = "TagRef" } },
					{ 0x81C, new C { T = "TagRef" } },

					{ 0x83C, new C { T = "Tagblock" } },

					{ 0x850, new C { T = "TagRef", N = "Super Detonation" } },
					{ 0x86C, new C { T = "TagRef", N = "Super Detonation Damage" } },
					{ 0x888, new C { T = "TagRef", N = "Detonation Sound" } }, // SND
					{ 0x8A4, new C { T = "TagRef", N = "Super Detonation Sound" } },
					{ 0x8C0, new C { T = "TagRef", N = "Submerged Detonation Sound" } }, // SND
					{ 0x8DC, new C { T = "TagRef", N = "Super Detonation Object Types" } },

					{ 0x8FC, new C { T = "Float" } },

					{ 0x908, new C { T = "TagRef" } },
					{ 0x924, new C { T = "TagRef" } },
					{ 0x944, new C { T = "TagRef" } },
					{ 0x984, new C { T = "TagRef" } },
					{ 0x9A0, new C { T = "TagRef" } }, // JPT
					{ 0x9BC, new C { T = "TagRef" } }, // JPT

					{ 0x9DC, new C { T = "Tagblock", N = "Boarding Fields" } },

					{ 0x9F0, new C { T = "Float", N = "Boarding Detonation Time" } },

					{ 0x9F4, new C { T = "TagRef", N = "Boarding Detonation Damage" } }, //JPT
					{ 0xA10, new C { T = "TagRef", N = "Boarding Attached Detonation Damage" } }, // JPT

					{ 0xA2C, new C { T = "Float", N = "Air Gravity Scale" } },
					{ 0xA34, new C { T = "Float", N = "Air Damage Range" } },
					{ 0xA38, new C { T = "Float", N = "Water Gravity Scale" } },
					{ 0xA40, new C { T = "Float", N = "Water Damage Range" } },
					{ 0xA44, new C { T = "Float", N = "Initial Velocity" } },
					{ 0xA80, new C { T = "Float", N = "Final Velocity" } },

					{ 0xAA0, new C { T = "TagRef", N = "Material Response Reference" } },

					{ 0xABC, new C { T = "Tagblock", N = "Old Material Response Reference" } },
					{ 0xAD0, new C { T = "Tagblock", N = "Material Response" } },
					{ 0xAE4, new C { T = "Tagblock", N = "Brute Grenade" } },
					{ 0xAF8, new C { T = "Tagblock", N = "Fire Bomb Grenade" } },
					{ 0xB0C, new C { T = "Tagblock", N = "Conical Spread" } },

					{ 0xB20, new C { T = "TagRef" } },

					{ 0xB3C, new C { T = "Float" } },
					{ 0xB40, new C { T = "Float" } },
					{ 0xB44, new C { T = "Float" } },

					{ 0xB48, new C { T = "Tagblock", N = "Sound RTPCs" } },
					{ 0xB60, new C { T = "Tagblock", N = "Submunition Events" } },

					{ 0xB8C, new C { T = "Float" } },
					{ 0xB90, new C { T = "Float" } },

					{ 0xBA0, new C { T = "TagRef", N = "Charged Detonation Damage" } }, // JPT
					{ 0xBBC, new C { T = "TagRef", N = "Charged Impact Damage" } },
					{ 0xBD8, new C { T = "TagRef", N = "Charged Visual Effect" } }, // EFFE
					{ 0xBF4, new C { T = "TagRef", N = "Charged Detonation Effect" } }, // EFFE
				}
			}
			,
			{
				"sddt",
				new()
				{
					{ 0x40, new C { T = "4Byte" } },

					{ 0x44, new C { T = "Tagblock" } },
					{ 0x58, new C { T = "Tagblock" } },
					{ 0x6C, new C { T = "Tagblock" } },
					{ 0x80, new C { T = "Tagblock" } },
					{ 0x94, new C { T = "Tagblock" } },
					{ 0xA8, new C { T = "Tagblock" } },

					{ 0xC0, new C { T = "4Byte" } },

					{ 0xC4, new C { T = "Tagblock" } },
					{ 0xD8, new C { T = "Tagblock" } },
					{ 0xEC, new C { T = "Tagblock" } },
					{ 0x100, new C { T = "Tagblock" } },
					{ 0x114, new C { T = "Tagblock" } },
					{ 0x128, new C { T = "Tagblock" } },
					{ 0x13C, new C { T = "Tagblock" } },
					{ 0x158, new C { T = "Tagblock" } },
					{ 0x16C, new C { T = "Tagblock" } },
					{ 0x180, new C { T = "Tagblock" } },
					{ 0x194, new C { T = "Tagblock" } },
					{ 0x1A8, new C { T = "Tagblock" } },
					{ 0x1BC, new C { T = "Tagblock" } },
					{ 0x1D0, new C { T = "Tagblock" } },
					{ 0x1F0, new C { T = "Tagblock" } },
					{ 0x204, new C { T = "Tagblock" } },
				}
			}
			,
			{
				"levl",
				new()
				{
					{ 0x10, new C { T = "Tagblock" } },
					{ 0x24, new C { T = "Tagblock" } },
					{ 0x38, new C { T = "Tagblock" } },
					{ 0x4C, new C { T = "Tagblock" } },

					{ 0x5C, new C { T = "4Byte" } },

					{ 0x60, new C { T = "Tagblock" } },
					{ 0x74, new C { T = "Tagblock" } },
					{ 0x88, new C { T = "Tagblock" } },
					{ 0x9C, new C { T = "Tagblock" } },
					{ 0xB0, new C { T = "Tagblock" } },
					{ 0xC4, new C { T = "Tagblock" } },
					{ 0xD8, new C { T = "Tagblock" } },
					{ 0xEC, new C { T = "Tagblock" } },
					{ 0x100, new C { T = "Tagblock" } },
					{ 0x114, new C { T = "Tagblock" } },
					{ 0x128, new C { T = "Tagblock" } },
					{ 0x13C, new C { T = "Tagblock" } },
					{ 0x150, new C { T = "Tagblock" } },
					{ 0x164, new C { T = "Tagblock" } },
					{ 0x178, new C { T = "Tagblock" } },
					{ 0x18C, new C { T = "Tagblock" } },
					{ 0x1A0, new C { T = "Tagblock" } },
					{ 0x1B4, new C { T = "Tagblock" } },
					{ 0x1C8, new C { T = "Tagblock" } },
					{ 0x1DC, new C { T = "Tagblock" } },
					{ 0x1F0, new C { T = "Tagblock" } },
					{ 0x204, new C { T = "Tagblock" } },
					{ 0x218, new C { T = "Tagblock" } },
					{ 0x22C, new C { T = "Tagblock" } },
					{ 0x240, new C { T = "Tagblock" } },
					{ 0x254, new C { T = "Tagblock" } },
					{ 0x268, new C { T = "Tagblock" } },
					{ 0x27C, new C { T = "Tagblock" } },
					{ 0x290, new C { T = "Tagblock" } },
					{ 0x2A4, new C { T = "Tagblock" } },
					{ 0x2B8, new C { T = "Tagblock" } },
					{ 0x2CC, new C { T = "Tagblock" } },
					{ 0x2E0, new C { T = "Tagblock" } },
					{ 0x2F4, new C { T = "Tagblock" } },
					{ 0x308, new C { T = "Tagblock" } },
					{ 0x31C, new C { T = "Tagblock" } },
					{ 0x330, new C { T = "Tagblock" } },
					{ 0x344, new C { T = "Tagblock" } },
					{ 0x358, new C { T = "Tagblock" } },
					{ 0x36C, new C { T = "Tagblock" } },
					{ 0x380, new C { T = "Tagblock" } },
					{ 0x394, new C { T = "Tagblock" } },
					{ 0x3A8, new C { T = "Tagblock" } },
					{ 0x3BC, new C { T = "Tagblock" } },
					{ 0x3D0, new C { T = "Tagblock" } },
					{ 0x3E4, new C { T = "Tagblock" } },
					{ 0x3F8, new C { T = "Tagblock" } },
					{ 0x40C, new C { T = "Tagblock" } },
					{ 0x420, new C { T = "Tagblock" } },
					{ 0x434, new C { T = "Tagblock" } },
					{ 0x448, new C { T = "Tagblock" } },
					{ 0x45C, new C { T = "Tagblock" } },
					{ 0x470, new C { T = "Tagblock" } },
					{ 0x484, new C { T = "Tagblock" } },
					{ 0x498, new C { T = "Tagblock" } },
					{ 0x4AC, new C { T = "Tagblock" } },
					{ 0x4C0, new C { T = "Tagblock" } },
					{ 0x4D4, new C { T = "Tagblock" } },
					{ 0x4E8, new C { T = "Tagblock" } },
					{ 0x4FC, new C { T = "Tagblock" } },
					{ 0x510, new C { T = "Tagblock" } },
					{ 0x524, new C { T = "Tagblock" } },
					{ 0x54C, new C { T = "Tagblock" } },
					{ 0x560, new C { T = "Tagblock" } },
					{ 0x574, new C { T = "Tagblock" } },
					{ 0x588, new C { T = "Tagblock" } },
					{ 0x59C, new C { T = "Tagblock" } },
					{ 0x5B0, new C { T = "Tagblock" } },
					{ 0x5C4, new C { T = "Tagblock" } },
					{ 0x5D8, new C { T = "Tagblock" } },
					{ 0x5EC, new C { T = "Tagblock" } },
					{ 0x600, new C { T = "Tagblock" } },
					{ 0x614, new C { T = "Tagblock" } },
					{ 0x628, new C { T = "Tagblock" } },
					{ 0x63C, new C { T = "Tagblock" } },
					{ 0x650, new C { T = "Tagblock" } },
					{ 0x664, new C { T = "Tagblock" } },
					{ 0x678, new C { T = "Tagblock" } },
					{ 0x68C, new C { T = "Tagblock" } },
					{ 0x6A0, new C { T = "Tagblock" } },
					{ 0x6B4, new C { T = "Tagblock" } },
					{ 0x6C8, new C { T = "Tagblock" } },
					{ 0x6DC, new C { T = "Tagblock" } },
					{ 0x6F0, new C { T = "Tagblock" } },
					{ 0x71C, new C { T = "Tagblock" } },

					{ 0x730, new C { T = "TagRef" } },
					{ 0x74C, new C { T = "TagRef" } },

					{ 0x788, new C { T = "Tagblock" } },

					{ 0x79C, new C { T = "TagRef" } },
					{ 0x7B8, new C { T = "TagRef" } },
					{ 0x7D4, new C { T = "TagRef" } },
					{ 0x7F0, new C { T = "TagRef" } },

					{ 0x80C, new C { T = "Tagblock" } },
					{ 0x820, new C { T = "Tagblock" } },

					{ 0x834, new C { T = "TagRef" } },

					{ 0x850, new C { T = "Tagblock" } },
					{ 0x864, new C { T = "Tagblock" } },
					{ 0x878, new C { T = "Tagblock" } },
					{ 0x88C, new C { T = "Tagblock" } },
					{ 0x8A0, new C { T = "Tagblock" } },
					{ 0x8B4, new C { T = "Tagblock" } },

					{ 0x8C8, new C { T = "TagRef" } },
					{ 0x8E4, new C { T = "TagRef" } },
					{ 0x900, new C { T = "TagRef" } },
					{ 0x91C, new C { T = "TagRef" } },
					{ 0x938, new C { T = "TagRef" } },

					{ 0x954, new C { T = "Tagblock" } },
					{ 0x968, new C { T = "Tagblock" } },
					{ 0x97C, new C { T = "Tagblock" } },
					{ 0x990, new C { T = "Tagblock" } },
					{ 0x9A4, new C { T = "Tagblock" } },
					{ 0x9B8, new C { T = "Tagblock" } },

					{ 0x9CC, new C { T = "TagRef" } },
					{ 0x9E8, new C { T = "TagRef" } },
					{ 0xA04, new C { T = "TagRef" } },
					{ 0xA20, new C { T = "TagRef" } },
					{ 0xA3C, new C { T = "TagRef" } },
					{ 0xA58, new C { T = "TagRef" } },
					{ 0xA74, new C { T = "TagRef" } },
					{ 0xA90, new C { T = "TagRef" } },
					{ 0xAAC, new C { T = "TagRef" } },

					{ 0xAE8, new C { T = "Tagblock" } },
					{ 0xAFC, new C { T = "Tagblock" } },
					{ 0xB10, new C { T = "Tagblock" } },
					{ 0xB24, new C { T = "Tagblock" } },

					{ 0xB38, new C { T = "TagRef" } },
					{ 0xB54, new C { T = "Tagblock" } },
					{ 0xB68, new C { T = "Tagblock" } },
					{ 0xB7C, new C { T = "TagRef" } },
					{ 0xB98, new C { T = "TagRef" } },

					{ 0xBB8, new C { T = "Tagblock" } },

					{ 0xBD4, new C { T = "TagRef" } },
					{ 0xBF0, new C { T = "TagRef" } },
					{ 0xC0C, new C { T = "TagRef" } },
					{ 0xC48, new C { T = "TagRef" } },
					{ 0xC64, new C { T = "TagRef" } },

					{ 0xC9C, new C { T = "Float", N="Bounds X+" } },
					{ 0xCA0, new C { T = "Float", N="Bounds Y+"  } },
					{ 0xCA4, new C { T = "Float", N="Bounds Z+"  } },
					{ 0xCA8, new C { T = "Float", N="Bounds X-"  } },
					{ 0xCAC, new C { T = "Float", N="Bounds Y-"  } },
					{ 0xCB0, new C { T = "Float", N="Bounds Z-"  } },


					{ 0xC84, new C { T = "Tagblock" } },
					{ 0xCB4, new C { T = "Tagblock" } },
					{ 0xCC8, new C { T = "Tagblock" } },
					{ 0xCDC, new C { T = "Tagblock" } }
				}
			},
			{ "effe", new()
			{
				{ 0x10, new C{ T="Tagblock"}},
				{ 0x5C, new C{ T="Tagblock", B = new Dictionary<long, C> // 
				{
					{ 0x2A, new C{ T="TagRef"}},

					{ 0x50, new C{ T="Tagblock"}},
					{ 0x64, new C{ T="Tagblock", B=new Dictionary<long, C> // 
					{
						{ 0x14, new C { T = "Float" } },
						{ 0x18, new C { T = "Float" } },

						{ 0x20, new C{ T="Tagblock", B=new Dictionary<long, C> // 
						{
							{ -8, new C{ T="TagRef", N = "Tag Group"}}, // we should probably create a special class for this but whatev
							{ 0x30, new C{ T="TagRef", N = "Spawned Tag"}},

						}, S=140}},
						{ 0x34, new C{ T="Tagblock"}},
						{ 0x48, new C{ T="Tagblock"}},

					}, S=92}},

					{ 0x78, new C{ T="Tagblock"}},
				}, S=140}},
			}},

			{
				"matg",
				new()
				{
					{ 0x10, new C { T = "TagRef" } },
					{ 0x2C, new C { T = "TagRef" } },
					{ 0x48, new C { T = "TagRef" } },
					{ 0x64, new C { T = "TagRef" } },
					{ 0x80, new C { T = "TagRef" } },
					{ 0x9C, new C { T = "TagRef" } },
					{ 0xB8, new C { T = "TagRef" } },
					{ 0xD4, new C { T = "TagRef" } },
					{ 0xF0, new C { T = "TagRef" } },
					{ 0x10C, new C { T = "TagRef" } },
					{ 0x128, new C { T = "TagRef" } },
					{ 0x144, new C { T = "TagRef" } },
					{ 0x160, new C { T = "TagRef" } },
					{ 0x17C, new C { T = "TagRef" } },
					{ 0x198, new C { T = "TagRef" } },
					{ 0x1B4, new C { T = "TagRef" } },
					{ 0x1D0, new C { T = "TagRef" } },
					{ 0x1EC, new C { T = "TagRef" } },
					{ 0x208, new C { T = "TagRef" } },
					{ 0x224, new C { T = "TagRef" } },
					{ 0x240, new C { T = "TagRef" } },
					{ 0x25C, new C { T = "TagRef" } },
					{ 0x278, new C { T = "TagRef" } },
					{ 0x294, new C { T = "TagRef" } },
					{ 0x2B0, new C { T = "TagRef" } },
					{ 0x2CC, new C { T = "TagRef" } },
					{ 0x2E8, new C { T = "TagRef" } },
					{ 0x304, new C { T = "TagRef" } },
					{ 0x320, new C { T = "TagRef" } },
					{ 0x33C, new C { T = "TagRef" } },
					{ 0x358, new C { T = "TagRef" } },
					{ 0x374, new C { T = "TagRef" } },
					{ 0x390, new C { T = "TagRef" } },
					{ 0x3AC, new C { T = "TagRef" } },
					{ 0x3C8, new C { T = "TagRef" } },
					{ 0x3E4, new C { T = "TagRef" } },
					{ 0x400, new C { T = "TagRef" } },
					{ 0x41C, new C { T = "TagRef" } },
					{ 0x438, new C { T = "TagRef" } },
					{ 0x454, new C { T = "TagRef" } },
					{ 0x470, new C { T = "TagRef" } },
					{ 0x48C, new C { T = "TagRef" } },
					{ 0x4A8, new C { T = "TagRef" } },
					{ 0x4C4, new C { T = "TagRef" } },
					{ 0x4E0, new C { T = "TagRef" } },
					{ 0x4FC, new C { T = "TagRef" } },
					{ 0x518, new C { T = "TagRef" } },
					{ 0x534, new C { T = "TagRef" } },
					{ 0x550, new C { T = "TagRef" } },
					{ 0x56C, new C { T = "TagRef" } },
					{ 0x588, new C { T = "TagRef" } },
					{ 0x5A4, new C { T = "TagRef" } },
					{ 0x5C0, new C { T = "TagRef" } },
					{ 0x5DC, new C { T = "TagRef" } },
					{ 0x5F8, new C { T = "TagRef" } },
					{ 0x614, new C { T = "TagRef" } },
					{ 0x630, new C { T = "TagRef" } },
					{ 0x64C, new C { T = "TagRef" } },
					{ 0x668, new C { T = "TagRef" } },
					{ 0x684, new C { T = "TagRef" } },
					{ 0x6A0, new C { T = "TagRef" } },
					{ 0x6BC, new C { T = "TagRef" } },
					{ 0x6D8, new C { T = "TagRef" } },
					{ 0x6F4, new C { T = "TagRef" } },
					{ 0x710, new C { T = "Tagblock" } },
					{ 0x724, new C { T = "TagRef" } },
					{ 0x740, new C { T = "TagRef" } },
					{ 0x75C, new C { T = "TagRef" } },
					{ 0x778, new C { T = "TagRef" } },
					{ 0x794, new C { T = "TagRef" } },
					{ 0x7B0, new C { T = "TagRef" } },
					{ 0x7CC, new C { T = "TagRef" } },
				}
			}
			,
			{
				"pmcg",
				new()
				{
					{ 0x10, new C{ T="TagRef"}},
					{ 0x2C, new C{ T="TagRef"}},

					{ 0x048, new C{ T="Tagblock"}},
					{ 0x05C, new C{ T="Tagblock"}},
					{ 0x070, new C{ T="Tagblock"}},
					{ 0x084, new C{ T="Tagblock"}},
					{ 0x098, new C{ T="Tagblock"}},
					{ 0x0AC, new C{ T="Tagblock"}},
					{ 0x0C0, new C{ T="Tagblock"}},
					{ 0x0D4, new C{ T="Tagblock"}},
					{ 0x0E8, new C{ T="Tagblock"}},
					{ 0x0FC, new C{ T="Tagblock"}},
					{ 0x110, new C{ T="Tagblock"}},
					{ 0x124, new C{ T="Tagblock"}},

					{ 0x138, new C{ T="Tagblock", B=new Dictionary<long, C> // 
						{
							{ 0x14, new C{ T="TagRef"}},

							{ 0x30, new C{ T="String"}},
							{ 0x130, new C{ T="Tagblock", B=new Dictionary<long, C> // 
						    {
								{ 0x0, new C{ T="4Byte"}},
								{ 0x4, new C{ T="4Byte"}},
								{ 0x8, new C{ T="4Byte"}},

								{ 0x0C, new C{ T="String"}},

								{ 0x10C, new C{ T="Tagblock", B=new Dictionary<long, C> // 
						        {
									{ 0x0, new C{ T="4Byte"}},
									{ 0x4, new C{ T="4Byte"}},

								}, S=8}},
							}, S=288}},
						}, S=324}},

					{ 0x14C, new C{ T="Tagblock"}},
				}
			}
			,
			{
				"glpa",
				new()
				{
					{ 0x014, new C{ T="Tagblock", B=new Dictionary<long, C> // object_attachment_definition
					{
						{ 0x0C, new C{ T="TagRef"}},
						{ 0x2C, new C{ T="TagRef"}},
						{ 0x4C, new C{ T="TagRef"}},
						{ 0x6C, new C{ T="TagRef"}},
						{ 0x8C, new C{ T="TagRef"}},
						{ 0xA8, new C{ T="TagRef"}},
						{ 0xCC, new C{ T="Tagblock", B=new Dictionary<long, C>
						{
							{ 0x0, new C{ T="4Byte"}}, // datnum
						    { 0x4, new C{ T="4Byte"}}, // datnum
						}, S=8}},
						{ 0x0E4, new C{ T="TagRef"}},
						{ 0x100, new C{ T="TagRef"}},
						{ 0x11C, new C{ T="TagRef"}},
						{ 0x138, new C{ T="TagRef"}},
						{ 0x154, new C{ T="TagRef"}},
						{ 0x170, new C{ T="TagRef"}},
						{ 0x18C, new C{ T="TagRef"}},
						{ 0x1A8, new C{ T="TagRef"}},
						{ 0x1C4, new C{ T="TagRef"}},
						{ 0x1E0, new C{ T="TagRef"}},
						{ 0x1FC, new C{ T="TagRef"}},
					}, S=536}},
					{ 0x028, new C{ T="Tagblock"}},
					{ 0x03C, new C{ T="Tagblock"}},
					{ 0x050, new C{ T="Tagblock"}},
					{ 0x064, new C{ T="Tagblock"}},
				}
			},

			{"foot",new()
			{
				{ 0x10, new C{ T="Tagblock", B=new Dictionary<long, C> // 
				{
					{ 0x0, new C{ T="Tagblock", B=new Dictionary<long, C> // 
					{
						{ 0x00, new C{ T="TagRef"}},
						{ 0x1C, new C{ T="TagRef"}}
					}, S=72 } },
					{ 0x14, new C{ T="Tagblock", B=new Dictionary<long, C> // 
					{
						{ 0x00, new C{ T="TagRef"}},
						{ 0x1C, new C{ T="TagRef"}}
					}, S=72 } }
				}, S=40 } }
			}},

			{
				"ocgd", // ocgd* no wonder why i couldn't find it 
				new()
				{
					{ 0x10, new C{ T="Tagblock", B= new Dictionary<long, C>
						{
							{ 0x4, new C{ T="TagRef"}},
							{ 0x20, new C{ T="TagRef"}},
							{ 0x3C, new C{ T="Tagblock", B= new Dictionary<long, C>
							{
								{ 0x0, new C{ T="4Byte"} },
								{ 0x4, new C{ T="4Byte"} },
								{ 0x8, new C{ T="TagRef"}}

							}, S=36 }},
						}, S=80 }},

					{ 0x24, new C{ T="Tagblock", B= new Dictionary<long, C>
						{
							{ 0x0, new C{ T="Tagblock", B= new Dictionary<long, C>
								{ { 0x0, new C{ T="4Byte"} } }, S=4 }},
							{ 0x14, new C{ T="Tagblock", B= new Dictionary<long, C>
								{ { 0x0, new C{ T="4Byte"} } }, S=4 }},
							{ 0x28, new C{ T="Tagblock", B= new Dictionary<long, C>
								{ { 0x0, new C{ T="4Byte"} } }, S=4 }},
						}, S=60 }
					},

					{ 0x38, new C{ T="Tagblock", B= new Dictionary<long, C>
						{ { 0x0, new C{ T="TagRef"} } }, S=28 }},

					{ 0x4C, new C{ T="Tagblock", B= new Dictionary<long, C>
						{ { 0x0, new C{ T="TagRef"} } }, S=28 }},

					{ 0x60, new C{ T="Tagblock", B= new Dictionary<long, C>
						{
							{ 0x0, new C{ T="4Byte"} },
							{ 0x4, new C{ T="TagRef"} },
							{ 0x20, new C{ T="TagRef"} },
							{ 0x3C, new C{ T="Tagblock", B= new Dictionary<long, C>
							{
								{ 0x0, new C{ T="4Byte"} },
								{ 0x4, new C{ T="4Byte"} },
								{ 0x8, new C{ T="TagRef"} },
								{ 0x24, new C{ T="TagRef"} },

							}, S=64 }},
						}, S=80 }},
					{ 0x74, new C{ T="Tagblock"}},
					{ 0x88, new C{ T="Tagblock"}},
					{ 0x9C, new C{ T="Tagblock"}},
					{ 0xB0, new C{ T="Tagblock"}},
					{ 0xC4, new C{ T="Tagblock"}},
					{ 0xD8, new C{ T="Tagblock"}},
					{ 0xEC, new C{ T="Tagblock"}},
					{ 0x100, new C{ T="Tagblock"}},

					{ 0x114, new C{ T="TagRef"}},
					{ 0x130, new C{ T="TagRef"}},


					{ 0x14C, new C{ T="Tagblock"}},
					{ 0x160, new C{ T="Tagblock"}},
					{ 0x174, new C{ T="Tagblock"}},
				}
			},

			{"wgtz",new()
			{
				{ 0x10, new C{ T="Tagblock"}},
				{ 0x24, new C{ T="Tagblock"}},
				{ 0x38, new C{ T="Tagblock", B= new Dictionary<long, C>
				{
					{ 0x0, new C{ T="TagRef"}},
				}, S=28 }},
				{ 0x4C, new C{ T="Tagblock"}},
				{ 0x60, new C{ T="Tagblock"}},
				{ 0x78, new C{ T="Tagblock"}},
				{ 0x8C, new C{ T="Tagblock"}},
				{ 0xA0, new C{ T="Tagblock"}},
				{ 0xB4, new C{ T="Tagblock"}},
				{ 0xC8, new C{ T="Tagblock"}},
				{ 0xDC, new C{ T="Tagblock"}},
				{ 0xF0, new C{ T="Tagblock"}},
				{ 0x104, new C{ T="Tagblock"}},
				{ 0x118, new C{ T="Tagblock"}},
				{ 0x12C, new C{ T="Tagblock"}},
				{ 0x140, new C{ T="Tagblock"}},
				{ 0x154, new C{ T="Tagblock"}},
				{ 0x168, new C{ T="Tagblock"}},
				{ 0x17C, new C{ T="Tagblock"}},

				{ 0x190, new C{ T="TagRef"}},
				{ 0x1A4, new C{ T="TagRef"}},
			}},

			

			

			{"sqds",new()
			{
				{ 0x00, new C{ T="mmr3Hash"}},
				{ 0x14, new C{ T="Tagblock", B= new Dictionary<long, C>
				{
					{ 0x10, new C{ T="TagRef"}},
					{ 0x2C, new C{ T="TagRef"}},
					{ 0x48, new C{ T="TagRef"}},
				}, S=104 }},
				{ 0x28, new C{ T="Tagblock"}},
				{ 0x3C, new C{ T="Tagblock", B= new Dictionary<long, C>
				{
					{ 0x00, new C{ T="mmr3Hash"}},
					{ 0x04, new C{ T="Tagblock", B= new Dictionary<long, C>
					{
						{ 0x10, new C{ T="TagRef"}},
						{ 0x2C, new C{ T="TagRef"}},
						{ 0x48, new C{ T="TagRef"}},
					}, S=104 }},
					{ 0x18, new C{ T="Tagblock", B= new Dictionary<long, C>
					{
						{ 0x00, new C{ T="TagRef"}},
						{ 0x1C, new C{ T="TagRef"}},
						{ 0x38, new C{ T="Tagblock", B= new Dictionary<long, C>
						{
							{ 0x10, new C{ T="TagRef"}},
							{ 0x2C, new C{ T="TagRef"}},
							{ 0x48, new C{ T="TagRef"}},
						}, S=112 }},
					}, S=76 }},
				}, S=44 }},
			}},

			{"jpt!",new()
			{
				{ 0x10, new C{ T="TagRef"}},

				{ 0x2C, new C { T = "Float", N="Min Radius" } },
				{ 0x30, new C { T = "Float", N="Max Radius" } },
				{ 0x34, new C { T = "Float", N="Cutoff Scale" } },
				{ 0x38, new FlagGroup { A = 4, STR = new Dictionary<int, string>()
				{
					{ 0,  "Don't Scale Damage By Distance"  },
					{ 1,  "Area Damage Players Only"  },
					{ 2,  "Affects Model Targets"  },
					{ 3,  "Explosive Area Of Effect"  },
					{ 4,  "these flags probably aren't right lol"  },
				}}},



				{ 0x40, new C { T = "2Byte", N="side effect" } },
				{ 0x42, new C { T = "2Byte", N="category" } },

				{ 0x44, new C { T = "4Byte", N="death vocalization" } },

				{ 0x48, new FlagGroup { A = 4, STR = new Dictionary<int, string>()
				{
					{ 0,  "does not hurt owner"  },
					{ 1,  "can cause headshots"  },
					{ 2,  "ignores headshot obstructions"  },
					{ 3,  "pings resistant units"  },
					{ 4,  "does not hurt friends"  },
					{ 5,  "does not ping units"  },
					{ 6,  "detonates explosives"  },
					{ 7,  "only hurts shields"  },
					{ 8,  "causes flaming death"  },
					{ 9,  "skips shields"  },
					{ 10, "wwwww"  },
					{ 11, "ignore seat scale for dir. dmg"  },
					{ 12, "forces hard ping if body dmg"  },
					{ 13, "forces hard ping always"  },
					{ 14, "does not hurt players"  },
					{ 15, "enables special death"  },
					{ 16, "cannot cause betrayals"  },
					{ 17, "uses old EMP behavior"  },
					{ 18, "ignores damage resistance"  },
					{ 19, "force s_kill on death"  },
					{ 20, "cause magic deceleration"  },
					{ 21, "aoe skip obstruction test"  },
					{ 22, "does not spill over"  },
					{ 23, "does not hurt boarders"  },
					{ 24, "does not cause biped aoe effect"  },
					{ 25, "DEPRECATED apply tree of life"  },
					{ 26, "hurt only friends"  },
					{ 27, "causes incineration dissolve"  },
					{ 28, "causes incineration dissolve on headshot"  },
					{ 29, "does not hurt damage source"  },
					{ 30, "damage vehicles only"  },
					{ 31, "triggers interact logi"  }
				}}},
				{ 0x4C, new FlagGroup { A = 4, STR = new Dictionary<int, string>()
				{
					{ 0,  "causes incineration dissolve to dead units"  },
					{ 1,  "force hard ping as attachment feedback"  },
					{ 2,  "detaches object dispenser items"  },
					{ 3,  "hard pings from this damage stun AI"  },
					{ 4,  "deaths are non revivable"  },
					{ 5,  "forces hard ping when available"  },
				}}},

				{ 0x50, new C{ T="TagRef"}},

				{ 0x6C, new C { T = "Headshot Damage" } },
				{ 0x70, new C { T = "Headshot Shielded Damage" } },

				{ 0x74, new C { T = "Float", N="AOE core radius" } },
				{ 0x78, new C { T = "Float" } },
				{ 0x7C, new C { T = "Float", N="damage lower " } },
				{ 0x80, new C { T = "Float", N="damage upper min" } },
				{ 0x84, new C { T = "Float", N="damage upper max" } },
				{ 0x88, new C { T = "Float"} },
				{ 0x8C, new C { T = "Float"} },
				{ 0x90, new C { T = "Float" } },
				{ 0x94, new C { T = "Float" } },
				{ 0x98, new C { T = "Float" } },
				{ 0x9C, new C { T = "Float" } },
				{ 0xA0, new C { T = "Float" } },
				{ 0xA4, new C { T = "Float" } },
				{ 0xA8, new C { T = "Float" } },
				{ 0xAC, new C { T = "Float" } },
				{ 0xB0, new C { T = "Float" } },
				{ 0xB4, new C { T = "Float" } },
				{ 0xB8, new C { T = "Float" } },
				{ 0xBC, new C { T = "Float" } },
				{ 0xC0, new C { T = "Float" } },
				{ 0xC4, new C { T = "Float" } },
				{ 0xC8, new C { T = "Float" } },
				{ 0xCC, new C { T = "Float", N="Instantaneous Acceleration" } },
				{ 0xD0, new C { T = "Float" } },
				{ 0xD4, new C { T = "Float" } },

				{ 0x114, new C{ T="TagRef"}},

				{ 0x130, new C{ T="Tagblock"}},

				{ 0x150, new C { T = "2Byte" } },

				{ 0x154, new C { T = "Float" } },
				{ 0x158, new C { T = "Float" } },
				{ 0x15C, new C { T = "Float" } },
				{ 0x160, new C { T = "Float" } },
				{ 0x164, new C { T = "Float" } },
				{ 0x168, new C { T = "Float" } },
				{ 0x16C, new C { T = "Float" } },

				{ 0x170, new C{ T="TagRef"}},
				{ 0x18C, new C{ T="Tagblock"}},

				{ 0x1A0, new C { T = "Float" } },
				{ 0x1A4, new C { T = "Float" } },

				{ 0x1A8, new C{ T="TagRef"}},
				{ 0x1C4, new C{ T="TagRef"}},
				{ 0x1E0, new C{ T="TagRef"}},
				{ 0x1FC, new C{ T="TagRef"}},
				{ 0x218, new C{ T="TagRef"}},
				{ 0x234, new C{ T="TagRef"}},
				{ 0x250, new C{ T="TagRef"}},
				{ 0x26C, new C{ T="TagRef"}},
				{ 0x288, new C{ T="TagRef"}},
				{ 0x2A4, new C{ T="TagRef"}},
				{ 0x2C0, new C{ T="TagRef"}},
				{ 0x2DC, new C{ T="TagRef"}},
				{ 0x2F8, new C{ T="TagRef"}},
				{ 0x314, new C{ T="TagRef"}},
				{ 0x330, new C{ T="TagRef"}},
				{ 0x34C, new C{ T="TagRef"}},
				{ 0x368, new C{ T="TagRef"}},

				{ 0x384, new C { T = "Float" } },
				{ 0x388, new C { T = "Float" } },

			}},

			{"sagh",new()
			{
				{ 0x14, new FlagGroup {A = 4, STR = new Dictionary<int, string>()
						{
							{ 0, "Use 3rd Person Camera When Active"  },
							{ 1, "Hide Reticle When Active"  },
							{ 2, "Is Motion Tracked (By Enemies) When Active"  },
							{ 3, "One-Shot Activation Effect"  },
							{ 4, "Can be activated when weapon state is relaxed"  },
							{ 5, "Does Not Appear In Extended Motion Tracker Range"  },
							{ 6, "Energy persists across deaths"  },
							{ 7, "Activation interrupts weapon switching"  },
							{ 8, "Allow activation during weapon throw"  },
							{ 9, "Allow activation while sliding"  }
				} } },

				{ 0x18, new C { T = "Float", N = "Activation Energy Cost" } },
				{ 0x20, new C { T = "Float", N = "Recharge Duration" } },
				{ 0x24, new C { T = "Float", N = "Recharge Delay" } },
				{ 0x28, new C { T = "Float", N = "Cooldown Delay" } },

				{ 0x2C, new C { T="TagRef", N = "Activation Effect"} },
				{ 0x50, new C { T="TagRef", N = "Active Malleable Properties Modifier"} },
				{ 0x6C, new C { T="TagRef", N = "Timed Malleable Properties Modifier"} },

				{ 0x88, new FlagGroup {A = 4, STR = new Dictionary<int, string>()
						{
							{ 0, "allow mount passenger to activate"  },
							{ 1, "allow activation in mount if seat allows it"  },
							{ 2, "suppressed by EMP"  },
							{ 3, "drop support weapon when activated"  },
							{ 4, "drop readied weapon when activated"  },
							{ 5, "disable vehicle entering assist"  },
							{ 6, "disable jump interruptions"  },
							{ 7, "disable automelee"  },
							{ 8, "disable crouch interruptions"  },
							{ 9, "disable line of sight breaking"  },
							{ 10, "enable bash"  },
							{ 11, "show bash in first person"  },
							{ 12, "owner uses crouched pill during pull"  },
							{ 13, "owner uses crouched pill during bash"  },
							{ 14, "suppress activation while holding support weapon"  },
							{ 15, "suppress activation while holding must be readied weapon"  },
							{ 16, "ignore soft ceilings"  }
				} } },

				{ 0x98, new C { T="TagRef", N = "Rope Effect"} },
				{ 0xB8, new C { T="TagRef", N = "Pulling Effect"} },
				{ 0xD4, new C { T="TagRef", N = "Reeling Effect"} },
				{ 0xF0, new C { T="TagRef", N = "Deactivation Effect"} },
				{ 0x10C, new C { T="TagRef", N = "Projectile"} },
				{ 0x12C, new C { T="TagRef", N = "Object"} },

				{ 0x154, new C { T = "Float", N = "Warmup Time" } },
				{ 0x16C, new C { T = "Float", N = "Line of Sight Testing" } },
				{ 0x1D0, new C { T = "Float", N = "Target Velocity" } },
				{ 0x1D4, new C { T = "Float", N = "Max Exit Velocity" } },
				{ 0x20C, new C { T = "Float", N = "Aim Influence" } },
				{ 0x284, new C { T = "Float", N = "Completion Distance (Level Geo)" } },
				{ 0x288, new C { T = "Float", N = "Completion Distance (Ceilings)" } },
				{ 0x28C, new C { T = "Float", N = "Completion Distance (Floors)" } },
				{ 0x290, new C { T = "Float", N = "Completion Distance (Biped)" } },
				{ 0x294, new C { T = "Float", N = "Completion Distance (Vehicles)" } },
				{ 0x298, new C { T = "Float", N = "Vehicle Interaction Distance" } },
				{ 0x29C, new C { T = "Float", N = "Vehicle Interaction Time" } },
				{ 0x2A0, new C { T = "Float", N = "Automelee Max Angle" } },
				{ 0x2A4, new C { T = "Float", N = "Max Allowed Angle Deviation (Ceiling)" } },
				{ 0x2A8, new C { T = "Float", N = "Max Allowed Angle Deviation (Floor)" } },
				{ 0x2AC, new C { T = "Float", N = "Line of Sight Break Time" } },

				{ 0x380, new C { T = "Float", N = "Bash Activation Hold Time" } },
				{ 0x384, new C { T = "Float", N = "Bash Max Aim Angle" } },
				{ 0x388, new C { T = "Float", N = "Bash Aim Lock Rate of Change" } },
				{ 0x38C, new C { T = "Float", N = "Bash Peak Velocity" } },
				{ 0x390, new C { T = "Float", N = "Bash Charge Up Duration" } },
				{ 0x3AC, new C { T = "Float", N = "Bash Acceleration Duration" } },

				{ 0x400, new C { T="TagRef", N = "BashCharge Up Effect"} },
				{ 0x41C, new C { T="TagRef", N = "Bash Launch Effect"} },
				{ 0x438, new C { T="TagRef", N = "Bash Active Effect"} },
				{ 0x454, new C { T="TagRef", N = "Bash Completion Effect"} },

				{ 0x470, new C { T="TagRef", N = "Owner Damage"} },
				{ 0x48C, new C { T="TagRef", N = "AOE Damage"} },

				{ 0x4B4, new C { T = "Float", N = "Miss Cooldown Delay" } },
			}},

			{"eqip",new()
			{
				{ 0x10, new FlagGroup {A = 4, STR = new Dictionary<int, string>()
						{
							{ 0, "Unknown Function"  },
				} } },

				{ 0x14, new C { T = "Float" } },
				{ 0x1C, new C { T = "Float" } },
				{ 0x20, new C { T = "Float" } },
				{ 0x24, new C { T = "Float" } },
				{ 0x28, new C { T = "Float" } },
				{ 0x2C, new C { T = "Float" } },
				{ 0x30, new C { T = "Float" } },
				{ 0x34, new C { T = "Float" } },
				{ 0x38, new C { T = "Float" } },
				{ 0x3C, new C { T = "Float" } },
				{ 0x40, new C { T = "Float" } },

				{ 0x44, new FlagGroup {A = 4, STR = new Dictionary<int, string>()
						{
							{ 0, "Unknown Function"  },
				} } },

				{ 0x48, new C { T = "Float" } },
				{ 0x4C, new C { T = "Float" } },
				{ 0x50, new C { T = "Float" } },
				{ 0x54, new C { T = "Float" } },
				{ 0x58, new C { T = "Float" } },

				{ 0x5C, new C{ T="Tagblock"}}, //SidecarPathDefinition
				
				{ 0x78, new C { T="TagRef", N = "Model" } },
				{ 0x94, new C { T="TagRef" } },
				{ 0xB0, new C { T="TagRef" } },
				{ 0xCC, new C { T="TagRef" } },
				{ 0xF0, new C { T="TagRef", N = "Collision Damage" } },

				{ 0x10C, new C{ T="Tagblock"}}, //s_object_early_mover_obb_definition

				{ 0x120, new C { T="TagRef" } },
				{ 0x13C, new C { T="TagRef", N = "Material Effect" } },
				{ 0x158, new C { T="TagRef" } },
				{ 0x174, new C { T="TagRef" } },
				{ 0x190, new C { T="TagRef", N = "Sound" } },

				{ 0x1B0, new C { T = "Float" } },

				{ 0x1C0, new C { T="Tagblock" } }, //object_ai_properties
				{ 0x1D4, new C { T="Tagblock" } }, //s_object_function_definition

				{ 0x1E4, new FlagGroup {A = 4, STR = new Dictionary<int, string>()
						{
							{ 0, "Unknown Function"  },
				} } },

				{ 0x1EC, new C{ T="Tagblock"}}, //ObjectRuntimeInterpolatorFunctionsBlock
				{ 0x200, new C{ T="Tagblock"}}, //ObjectFunctionSwitchDefinition
				{ 0x214, new C{ T="Tagblock"}}, //i343::Objects::ObjectFunctionForwarding
				{ 0x22C, new C{ T="Tagblock"}}, //i343::Objects::AmmoRefillVariant

				{ 0x240, new FlagGroup {A = 4, STR = new Dictionary<int, string>()
						{
							{ 0, "Unknown Function"  },
				} } },

				{ 0x248, new C{ T="Tagblock", B= new Dictionary<long, C>
				{
					{ 0x4, new C { T="TagRef" } },
					{ 0x20, new C { T="TagRef" } },

					{ 0x40, new C{ T="Tagblock"}}, //TagGraph::TagGraphFloatParam
					
					{ 0x54, new C { T="TagRef" } },

					{ 0x70, new C{ T="Tagblock"}}, //i343::Objects::AttachmentVariantName
					{ 0x94, new C{ T="Tagblock"}}, //i343::Objects::AttachmentVariantName
					{ 0xA8, new C{ T="Tagblock"}}, //object_change_color_function
				} } }, //object_attachment_definition
				
				{ 0x25C, new C{ T="Tagblock"}}, //object_indirect_lighting_settings_definition
				{ 0x270, new C{ T="Tagblock"}}, //s_water_physics_hull_surface_definition
				{ 0x284, new C{ T="Tagblock"}}, //s_jetwash_definition
				{ 0x298, new C{ T="Tagblock"}}, //object_definition_widget
				{ 0x2AC, new C{ T="Tagblock"}}, //object_change_color_definition
				{ 0x2C0, new C{ T="Tagblock"}}, //s_multiplayer_object_properties_definition
				{ 0x2D4, new C{ T="Tagblock"}}, //i343::Objects::ForgeObjectEntryDefinition

				{ 0x2E4, new FlagGroup {A = 4, STR = new Dictionary<int, string>()
						{
							{ 0, "Unknown Function"  },
				} } },

				{ 0x2E8, new C { T="TagRef" } },
				{ 0x304, new C { T="TagRef" } },

				{ 0x320, new C{ T="Tagblock"}}, //s_object_spawn_effects
				{ 0x334, new C{ T="Tagblock"}}, //ModelDissolveDataBlock
				{ 0x448, new C{ T="Tagblock"}}, //HsReferencesBlock

				{ 0x45C, new C { T="TagRef" } },

				{ 0x478, new C { T = "Float" } },
				{ 0x47C, new C { T = "Float" } },
				{ 0x480, new C { T = "Float" } },

				{ 0x484, new C{ T="Tagblock"}}, //s_object_meta_label
				{ 0x498, new C{ T="Tagblock"}}, //SoundRTPCBlockDefinition
				{ 0x4AC, new C{ T="Tagblock"}}, //SoundSweetenerBlockDefinition
				{ 0x4C8, new C{ T="Tagblock"}}, //i343::Objects::ComputeFunctionSmoothingBlockDefinition

				{ 0x4E0, new C { T = "Float" } },

				{ 0x4E4, new C { T="TagRef" } },

				{ 0x500, new C{ T="Tagblock"}}, //i343::SpartanTracking::ObjectDefinition

				{ 0x514, new C { T="TagRef" } },

				{ 0x530, new C{ T="Tagblock"}}, //InteractionOpportunityDefinition
				{ 0x548, new C{ T="Tagblock"}}, //ScriptedSequenceActionDefinition

				{ 0x55C, new C { T="TagRef" } },

				{ 0x578, new C{ T="Tagblock"}}, //AnimChannelEntry
				{ 0x58C, new C{ T="Tagblock"}}, //AnimSetTableEntry

				{ 0x5A0, new C { T = "Float" } },
				{ 0x5A4, new C { T = "Float" } },
				{ 0x5A8, new C { T = "Float" } },
				{ 0x5AC, new C { T = "Float" } },
				{ 0x5B0, new C { T = "Float" } },
				{ 0x5B4, new C { T = "Float" } },
				{ 0x5B8, new C { T = "Float" } },
				{ 0x5BC, new C { T = "Float" } },
				{ 0x5C0, new C { T = "Float" } },

				{ 0x5C4, new C{ T="Tagblock"}}, //AnimationDefinition.Anim Set Nodegraph Metadata

				{ 0x5E4, new C { T = "Float" } },

				{ 0x5E8, new C{ T="Tagblock"}}, //LegGroundingSettings

				{ 0x5FC, new C { T = "Float" } },
				{ 0x600, new C { T = "Float" } },
				{ 0x604, new C { T = "Float" } },
				{ 0x608, new C { T = "Float" } },

				{ 0x60C, new C{ T="Tagblock"}}, //i343::Objects::ObjectNodeGraphDefinition
				{ 0x620, new C{ T="Tagblock"}}, //i343::Objects::AnimationMatchingTableEntry
				{ 0x638, new C{ T="Tagblock"}}, //i343::Objects::ModelVariantSwappingTableEntry
				{ 0x650, new C{ T="Tagblock"}}, //i343::Items::LocationSensorDefinition
				{ 0x664, new C{ T="Tagblock"}}, //i343::Items::ShroudGeneratorDefinition
				{ 0x678, new C{ T="Tagblock"}}, //i343::Objects::PowerComponentDefinition
				{ 0x68C, new C{ T="Tagblock"}}, //i343::Objects::SelfDestructHandlerDefinition
				{ 0x6A0, new C{ T="Tagblock"}}, //i343::Objects::IndirectLightingComponentDefinition

				{ 0x6BC, new FlagGroup {A = 4, STR = new Dictionary<int, string>()
						{
							{ 0, "Unknown Function"  },
				} } },

				{ 0x730, new C{ T="Tagblock"}}, //i343::Items::VariantHUDMessages
				{ 0x744, new C{ T="Tagblock"}}, //PredictedBitmapsBlock

				{ 0x758, new C { T="TagRef", N = "Damage Effect" } },
				{ 0x77C, new C { T="TagRef", N = "Effect" } },
				{ 0x798, new C { T="TagRef" } },

				{ 0x7B4, new C { T = "Float" } },
				{ 0x7B8, new C { T = "Float" } },
				{ 0x7BC, new C { T = "Float" } },
				{ 0x7C0, new C { T = "Float" } },
				{ 0x7C4, new C { T = "Float" } },
				{ 0x7C8, new C { T = "Float" } },
				{ 0x7CC, new C { T = "Float" } },

				{ 0x7D8, new C { T="TagRef", N = "Grounded Friction" } },
				{ 0x7F4, new C { T="TagRef" } },
				{ 0x850, new C { T="TagRef" } },

				{ 0x86C, new FlagGroup {A = 4, STR = new Dictionary<int, string>()
						{
							{ 0, "Unknown Function"  },
				} } },

				{ 0x874, new C { T = "Float" } },
				{ 0x878, new C { T = "Float" } },
				{ 0x87C, new C { T = "Float" } },
				{ 0x880, new C { T = "Float" } },
				{ 0x884, new C { T = "Float" } },
				{ 0x888, new C { T = "Float" } },

				{ 0x88C, new FlagGroup {A = 4, STR = new Dictionary<int, string>()
						{
							{ 0, "Unknown Function"  },
				} } },

				{ 0x894, new C { T = "Float" } },
				{ 0x898, new C { T = "Float" } },
				{ 0x89C, new C { T = "Float" } },
				{ 0x8A0, new C { T = "Float" } },
				{ 0x8A4, new C { T = "Float" } },
				{ 0x8AC, new C { T = "Float" } },

				{ 0x8B0, new C{ T="Tagblock"}}, //OptionalUnitCameraBlock
				{ 0x8C4, new C{ T="Tagblock", B= new Dictionary<long, C>
				{
					{ 0x0, new C { T = "Float" } },
					{ 0x4, new C { T = "Float" } },
					{ 0x8, new C { T = "Float" } },
					{ 0xC, new C { T = "Float" } },
					{ 0x10, new C { T = "Float" } },
					{ 0x14, new C { T = "Float" } },
					{ 0x18, new C { T = "Float" } },
					{ 0x1C, new C { T = "Float", N = "Activation Cost" } },
					{ 0x20, new C { T = "Float" } },
					{ 0x24, new C { T = "Float" } },
					{ 0x28, new C { T = "Float" } },
					{ 0x2C, new C { T = "Float" } },

					{ 0x30, new C{ T="Tagblock"}}, //function_definition_data

					{ 0x44, new FlagGroup {A = 4, STR = new Dictionary<int, string>()
						{
							{ 0, "Unknown Function"  },
					} } },

					{ 0x48, new C { T = "Float" } },

					{ 0x4C, new C{ T="Tagblock"}}, //EquipmentAbilityDeactivationOverrideSettings
					
					{ 0x50, new C { T = "Float" } },
					{ 0x54, new C { T = "Float" } },

					{ 0x58, new FlagGroup {A = 4, STR = new Dictionary<int, string>()
						{
							{ 0, "Unknown Function"  },
					} } },

					{ 0x5C, new C { T = "Float" } },
					{ 0x60, new C { T = "Float" } },
					{ 0x64, new C { T = "Float" } },
					{ 0x68, new C { T = "Float" } },

					{ 0x6C, new C{ T="Tagblock"}}, //ControlStateUIInfo
					
					{ 0x7C, new FlagGroup {A = 4, STR = new Dictionary<int, string>()
						{
							{ 0, "Unknown Function"  },
					} } },

					{ 0x88, new C{ T="Tagblock", B= new Dictionary<long, C>
					{
							{ 0x0, new C { T = "Float", N = "Spawn X" } },
							{ 0x4, new C { T = "Float", N = "Spawn Y" } },
							{ 0x8, new C { T = "Float", N = "Spawn Z" } },
							{ 0xC, new C { T = "Float" } },
							{ 0x10, new C { T = "Float" } },
							{ 0x14, new C { T = "Float" } },
							{ 0x18, new C { T = "Float" } },
							{ 0x1C, new C { T = "Float", N = "Spawn Velocity" } },
							{ 0x20, new C { T = "Float" } },
							{ 0x24, new C { T = "Float" } },
							{ 0x28, new C { T = "Float" } },
							{ 0x2C, new C { T = "Float" } },
							{ 0x30, new C { T = "Float" } },

							{ 0x34, new C { T="TagRef" } },
							{ 0x64, new C { T="TagRef", N = "Projectile" } },
							{ 0x80, new C { T="TagRef" } },
							{ 0xB0, new C { T="TagRef", N = "Bitmap" } },
							{ 0xD0, new C { T="TagRef", N = "Bitmap" } },
							{ 0xF4, new C { T="TagRef" } },

					} } },//EquipmentAbilityTypeSpawner


					{ 0x9C, new C{ T="Tagblock"}}, //EquipmentAbilityTypeProximityMine
					{ 0xB0, new C{ T="Tagblock"}}, //EquipmentAbilityTypeMotionTrackerNoise
					{ 0xC4, new C{ T="Tagblock"}}, //EquipmentAbilityTypeTreeOfLife
					{ 0xD8, new C{ T="Tagblock"}}, //EquipmentAbilityTypeRepulsorField
					{ 0xEC, new C{ T="Tagblock"}}, //EquipmentAbilityTypeDaddy
					{ 0x100, new C{ T="Tagblock"}}, //EquipmentAbilityTypeAmmoPack
					
					{ 0x114, new C{ T="Tagblock", B= new Dictionary<long, C>
					{
						{ 0xC, new C{ T="Tagblock", B= new Dictionary<long, C>
						{
							{ 0x0, new FlagGroup {A = 4, STR = new Dictionary<int, string>()
							{
								{ 0, "Unknown Function"  },
							} } },

							{ 0x08, new C { T = "Float" } },
							{ 0x0C, new C { T = "Float" } },
							{ 0x10, new C { T = "Float" } },
							{ 0x14, new C { T = "Float" } },
							{ 0x18, new C { T = "Float" } },
							{ 0x1C, new C { T = "Float" } },

							{ 0x20, new C { T="TagRef" } },
							{ 0x3C, new C { T="TagRef", N = "Generic Modifier Definition Tag" } },
						} } },

						{ 0x20, new FlagGroup {A = 4, STR = new Dictionary<int, string>()
						{
							{ 0, "Unknown Function"  },
						} } },
					} } }, //EquipmentAbilityTypeHealthPack
					
					{ 0x128, new C{ T="Tagblock"}}, //EquipmentAbilityTypeJetPack
					{ 0x13C, new C{ T="Tagblock"}}, //EquipmentAbilityTypeHologram
					{ 0x150, new C{ T="Tagblock"}}, //EquipmentAbilityTypeSpecialWeapon
					{ 0x164, new C{ T="Tagblock"}}, //EquipmentAbilityTypeSpecialMove
					{ 0x178, new C{ T="Tagblock"}}, //EquipmentAbilityTypeEngineerShields
					{ 0x18C, new C{ T="Tagblock"}}, //EquipmentAbilityTypeAutoTurret
					{ 0x1A0, new C{ T="Tagblock"}}, //EquipmentAbilityTypeShieldProjector
					{ 0x1B4, new C{ T="Tagblock"}}, //EquipmentAbilityTypeProjectileCollector
					{ 0x1C8, new C{ T="Tagblock"}}, //EquipmentAbilityTypeActiveShield
					{ 0x1DC, new C{ T="Tagblock"}}, //EquipmentAbilityTypeFortificationShield
					{ 0x1F0, new C{ T="Tagblock", B= new Dictionary<long, C>
					{
						{ 0x0, new C { T="TagRef" } },
						{ 0x1C, new C { T="TagRef", N = "Generic Modifier Definition Tag" } },
					} } }, //EquipmentAbilityTypeGenericPowerup
					
					{ 0x204, new C{ T="Tagblock", B= new Dictionary<long, C>
					{
						{ 0x0, new C { T="TagRef", N = "Generic Modifier Definition Tag" } },
					} } }, //EquipmentAbilityTypeMalleableProperties
					
					{ 0x218, new C{ T="Tagblock", B= new Dictionary<long, C>
					{
						{ 0x0, new C { T="TagRef", N = "Spartan Tracking Ping Definition" } },
						{ 0x1C, new C { T="TagRef" } },
					} } }, //EquipmentAbilityTypeSpartanCustomTracking
					
					{ 0x22C, new C{ T="Tagblock"}}, //EquipmentAbilityTypeTeleporter
					{ 0x240, new C{ T="Tagblock"}}, //EquipmentAbilityTypeFrameAbilityItem
					{ 0x254, new C{ T="Tagblock"}}, //EquipmentAbilityTypeEquipmentRecharger
					{ 0x268, new C{ T="Tagblock"}}, //EquipmentAbilityTypeKnockback
					{ 0x27C, new C{ T="Tagblock"}}, //EquipmentAbilityTypeActiveCamo

					{ 0x290, new C { T="TagRef" } },
					{ 0x2AC, new C { T="TagRef", N = "Effect" } },
					{ 0x2C8, new C { T="TagRef", N = "Effect" } },
					{ 0x2E4, new C { T="TagRef" } },

					{ 0x330, new C { T = "Float" } },
					{ 0x334, new C { T = "Float" } },


				} } }, //EquipmentAbility

				{ 0x8D8, new C { T="TagRef" } },

				{ 0x8F4, new C{ T="Tagblock"}}, //Interface::UIItemInfo

				{ 0x908, new C { T="TagRef", N = "Sound" } },
				{ 0x924, new C { T="TagRef" } },
				{ 0x940, new C { T="TagRef" } },
				{ 0x95C, new C { T="TagRef" } },

				{ 0x978, new C{ T="Tagblock"}}, //SoundRTPCBlockDefinition
				{ 0x98C, new C{ T="Tagblock"}}, //SoundSweetenerBlockDefinition
				{ 0x9A0, new C{ T="Tagblock"}}, //i343::Equipment::ObjectFunctionRemapping
			}},

			{"bloc",new()
			{
				{ 0x10, new FlagGroup {A = 4, STR = new Dictionary<int, string>()

					{
							{ 0, "Does Not Cast Shadow." },
				} } },

				{ 0x78, new C { T = "TagRef", N = "Model" } },
				{ 0x13C, new C { T = "TagRef", N = "Material Effects" } },

				{ 0x248, new C { T = "Tagblock", B= new Dictionary<long, C>
				{
					{ 0x04, new C { T = "TagRef" } },
					{ 0x20, new C { T = "TagRef" } },
				} } }, // Object_attachment_definition
			}},

			{"scen",new()
			{
				{ 0x10, new FlagGroup {A = 4, STR = new Dictionary<int, string>()

					{
							{ 0, "Does Not Cast Shadow." },
				} } },

				{ 0x78, new C { T = "TagRef", N = "Model" } },
				{ 0x13C, new C { T = "TagRef", N = "Material Effects" } },

				{ 0x248, new C { T = "Tagblock", B= new Dictionary<long, C>
				{
					{ 0x04, new C { T = "TagRef" } },
					{ 0x20, new C { T = "TagRef" } },
				} } }, // Object_attachment_definition
			}},

			{"bost",new()
			{
				{ 0x10, new C { T = "TagRef", N = "Collision Damage" } },

				{ 0x2C, new FlagGroup {A = 4, STR = new Dictionary<int, string>()

					{
							{ 0, "Constant boost while active" }, // Don't know what the actual name is, but this is what it does
				} } },
				{ 0x30, new C { T = "Float", N = "Boost Speed" } }, //Doesn't seem to work for the banshee, works on ghost though.
				{ 0x34, new C { T = "Float" } },
				{ 0x38, new C { T = "Float" } },
				{ 0x3C, new C { T = "Float", N = "Boost Cost" } }, //Works on banshee and ghost.			
				{ 0x40, new C { T = "Float" } },
				{ 0x44, new C { T = "Float", N = "Boost Recharge Rate" } },
				{ 0x48, new C { T = "Float" } },
				{ 0x4dC, new C { T = "Float" } },
				{ 0x74, new C { T = "Float", N = "Power Scale" } },
				{ 0x78, new C { T = "Float" } },
				{ 0x7C, new C { T = "Float" } },
				{ 0x80, new C { T = "Float" } },
				{ 0x84, new C { T = "Float" } },
				{ 0x88, new C { T = "Float" } },
				{ 0x8C, new C { T = "Float" } },
			}},

			{"saev",new()
			{
				{ 0x18, new C { T = "Float", N = "Recharge Cost" } },
				{ 0x20, new C { T = "Float", N = "Recharge Duration" } },
				{ 0x2C, new C { T = "TagRef" } },
				{ 0xA0, new C { T = "Float" } },
				{ 0x198, new C { T = "Float", N = "Thrust Power" } },
			}},

			{"sasp",new()
			{
				{ 0x14, new FlagGroup {A = 4, STR = new Dictionary<int, string>()
				{
					{ 0, "Third Person on Activation" },
				} } },

				{ 0x2C, new C { T = "TagRef" } },
				{ 0x50, new C { T = "TagRef" } },

				{ 0xC8, new C { T = "Float", N = "Sprint Speed" } },
				{ 0xD0, new C { T = "Float", N = "Sprint Acceleration" } },
			}},

			{"gmpm",new() // Extremely small tag, but contains modifiers for abilities.
			{
				{ 0x10, new C { T = "Tagblock", B= new Dictionary<long, C>
				{
					{ 0x8, new C { T = "Float", N = "Modifier" } }, // Only value that seems to do anything.
				} } },
			}},

			{"valu",new() // Mapped some values, Not useful rn. 
			{
				{ 0x70, new C { T = "Float"  } },
				{ 0x74, new C { T = "TagRef" } },
				{ 0xA0, new C { T = "Float"  } },
				{ 0xC8, new C { T = "Float"  } },

				{ 0x10, new C { T = "Tagblock", B= new Dictionary<long, C> // no idea if these change anything useful
				{
				{ 0x10, new C { T = "Float"  } },
				{ 0x14, new C { T = "TagRef" } },
				{ 0x40, new C { T = "Float"  } },
				{ 0x4C, new C { T = "TagRef" } },
				{ 0x68, new C { T = "Float"  } },
				{ 0x78, new C { T = "Float"  } },
				{ 0xE0, new C { T = "Float"  } },
				{ 0x148, new C { T = "Float"  } },
				{ 0x1B0, new C { T = "Float"  } },
				{ 0x218, new C { T = "Float"  } },
				{ 0x280, new C { T = "Float"  } },
				{ 0x2DC, new C { T = "Float"  } },
				{ 0x2E8, new C { T = "Float"  } },
				{ 0x350, new C { T = "Float"  } },
				{ 0x3A8, new C { T = "Float"  } },
				{ 0x3B8, new C { T = "Float"  } },
				{ 0x420, new C { T = "Float"  } },
				{ 0x488, new C { T = "Float"  } },
				{ 0x4E0, new C { T = "Float"  } },
				{ 0x4f0, new C { T = "Float"  } },
				{ 0x558, new C { T = "Float"  } },
				{ 0x5C0, new C { T = "Float"  } },
				{ 0x618, new C { T = "Float"  } },
				{ 0x6EC, new C { T = "Float"  } },

				{ 0xEB0, new C { T = "Tagblock", B= new Dictionary<long, C>
				{
				{ 0xF9C, new C { T = "TagRef" } }, // material

				} } } } } },
				{ 0x90, new C { T = "TagRef" } },
				{ 0xAC, new C { T = "TagRef" } },

			}},


			{"vcdd",new() // Vehicle Configuration
			{
				{ 0x10, new C { T = "TagRef" } },      // Vehi
				{ 0x34, new C { T = "TagRef" } },      // Sofd
				{ 0x70, new C { T = "Tagblock"} },     // i343::Vehicle::WeaponConfigurationGroup
				{ 0xA8, new C { T = "Float" } },       // No clue What this does
				{ 0xE8, new C { T = "TagRef" } },      // Sbnk


			}},

			{"weat",new() // Weapon Attachment
			{
				{ 0x18, new C { T = "Tagblock"} },     // i343::Weapon::AttachmentRegionPermutationDefinition
				{ 0x58, new C { T = "Tagblock"} },     // i343::Weapon::AccuracyPropertyModifiersDefinition
				{ 0x80, new C { T = "Tagblock"} },	   // i343::Weapon::UnitPropertyModifiersDefinition
				{ 0xD8, new C { T = "Tagblock"} },     // i343::Weapon::RecoilGunkickPropertyModifiersDefinition
				{ 0x100, new C { T = "Tagblock"} },    // i343::Weapon::HeatPropertyModifiersDefinition
				{ 0x128, new C { T = "TagRef"} },	   // Bloc
				{ 0x14C, new C { T = "Float" } },       // No clue What this does
				{ 0x150, new C { T = "Float" } },       // No clue What this does
				{ 0x164, new C { T = "Float" } },       // No clue What this does
				{ 0x168, new C { T = "Float" } },       // No clue What this does
				{ 0x16C, new C { T = "Float" } },       // No clue What this does
				{ 0x170, new C { T = "Float" } },       // No clue What this does

			}},

			{"bitm",new() // Bitmap Mapped only a few things
			{
				{ 0x58, new C { T = "Tagblock"} },      // BitmapGroupSequence1
				{ 0xC0, new C { T = "Tagblock"} },      // BitmapGroupSequence1
				{ 0xF8, new C { T = "Tagblock"} },      // BitmapDataResource
				{ 0x110, new C { T = "Tagblock"} },     // BitmapDataResource.pixels
				{ 0x140, new C { T = "Tagblock"} },     // StreamingBitmapData
			
			}},

			{"ant!",new() // Antenna Mapped what I could find 
			{
				{ 0x14, new C { T = "TagRef"} },	   // Bitm
				{ 0x30, new C { T = "TagRef"} },	   // Pphy
				{ 0x4C, new C { T = "Float" } },       // No clue What this does
				{ 0x50, new C { T = "Float" } },       // No clue What this does
				{ 0x54, new C { T = "Float" } },       // No clue What this does
				{ 0x58, new C { T = "Float" } },       // No clue What this does
				{ 0x5C, new C { T = "Float" } },       // No clue What this does
				{ 0x60, new C { T = "Float" } },       // No clue What this does
				{ 0x64, new C { T = "Float" } },       // No clue What this does
				{ 0x68, new C { T = "Float" } },       // No clue What this does
			}},

			{"uihg",new() // User interface Hud Globals some stuff 
			{
				{ 0xA8, new C { T = "Tagblock"} },	   // NavPointPresentationTagBlock
				{ 0xC8, new C { T = "TagRef"} },	   // bitm
				{ 0x13C, new C { T = "TagRef"} },
				{ 0x16C, new C { T = "TagRef"} },
				{ 0x198, new C { T = "TagRef"} },
			}},

			{"cfxs",new() // Camera_fx_settings some stuff here
			{
				{ 0x18, new C { T = "Float" } },       // No clue What this does
				{ 0x1C, new C { T = "Float" } },       // No clue What this does
				{ 0x34, new C { T = "Float" } },       // No clue What this does
				{ 0x3C, new C { T = "Float" } },       // No clue What this does
				{ 0x60, new C { T = "TagRef"} },
				{ 0x68, new C { T = "TagRef"} },
				{ 0x130, new C { T = "TagRef"} },	   // TagRef EFEX
				{ 0x138, new C { T = "TagRef"} },
				{ 0x150, new C { T = "TagRef"} },	   // TagRef Bitm
				{ 0x16C, new C { T = "TagRef"} },	   //
				{ 0x278, new C { T = "TagRef"} },	   //
				


			}},

			{"mwsy",new()
			{
				{ 0x10, new C { T = "Tagblock" } }, // MaterialRegion
				
				{ 0x20, new FlagGroup {A = 4, STR = new Dictionary<int, string>()
				{
					{ 0, "Unknown Function" }, // Looks like a flag block. That or a combo box.
				} } },

				{ 0x30, new C { T = "Tagblock",B = new Dictionary<long, C> // CoatingMaterialSetReference
				{
					{ 0x0, new C { T = "TagRef", N = "Coating Material Set" } },
				}, S=28 } },

				{ 0x40, new FlagGroup {A = 4, STR = new Dictionary<int, string>()
				{
					{ 0, "Unknown Function" }, //Most likely a combo box
				} } },

				{ 0x50, new C { T = "Tagblock",B = new Dictionary<long, C> //MaterialStyle
				{
					{ 0x0, new C { T = "mmr3Hash", N = "Coating Hash" } },
					{ 0x4, new C { T = "TagRef", N = "Material Palette" } },

					{ 0x1C, new C { T = "mmr3Hash", N = "MaterialStyle.palette" } },

					{ 0x20, new C { T = "Float", N = "Global Damage" } },
					{ 0x24, new C { T = "Float", N = "Hero Damage" } },
					{ 0x28, new C { T = "Float", N = "Global Emissive" } },
					{ 0x2C, new C { T = "Float", N = "Emissive Amount" } },
					{ 0x30, new C { T = "Float", N = "Scratch Amount" } },
					{ 0x34, new C { T = "Float", N = "Grime Type" } },
					{ 0x38, new C { T = "Float", N = "Grime Amount" } },

					{ 0x3C, new C { T = "Tagblock" } }, // MaterialStyleRegion

					{ 0x4C, new FlagGroup {A = 4, STR = new Dictionary<int, string>()
					{
						{ 0, "Region Flags - Unknown Function" },
					} } },

				}, S=92 } },

				{ 0x60, new FlagGroup {A = 4, STR = new Dictionary<int, string>()
				{
					{ 0, "Unknown Function" },
				} } },

				{ 0x74, new C { T = "TagRef", N = "Material Visor Swatch" } },

				{ 0x94, new C { T = "Tagblock",B = new Dictionary<long, C> // PreloadSwatchEntry
				{
					{ 0x0, new C { T = "TagRef", N = "Material Swatch" } },
				}, S=28 } },

				{ 0xA4, new FlagGroup {A = 4, STR = new Dictionary<int, string>()
				{
					{ 0, "Unknown Function" },
				} } },
			}},

			{"mwpl",new() // This seems useless in my opinion
			{
				{ 0x10, new C { T = "Tagblock",B = new Dictionary<long, C> // MaterialSwatchEntry
				{
					{ 0x4, new C { T = "TagRef" } },
				}, S=56 } },

				{ 0x20, new FlagGroup {A = 4, STR = new Dictionary<int, string>()
				{
					{ 0, "Combo box type" },
				} } },
			}},

			{"mwsw",new()
			{
				{ 0x10, new C { T = "Float" } },
				{ 0x14, new C { T = "Float" } },
				{ 0x18, new C { T = "Float" } },
				{ 0x1C, new C { T = "Float" } },

				{ 0x20, new C { T = "TagRef" } },

				{ 0x3C, new C { T = "Float" } },
				{ 0x40, new C { T = "Float" } },

				{ 0x44, new C { T = "TagRef" } },

				{ 0x60, new C { T = "Float" } },
				{ 0x64, new C { T = "Float" } },
				{ 0x68, new C { T = "Float" } },
				{ 0x6C, new C { T = "Float" } },
				{ 0x70, new C { T = "Float" } },
				{ 0x74, new C { T = "Float" } },
				{ 0x78, new C { T = "Float" } },
				{ 0x7C, new C { T = "Float" } },
				{ 0x80, new C { T = "Float" } },
				{ 0x84, new C { T = "Float" } },
				{ 0x88, new C { T = "Float" } },
				{ 0x8C, new C { T = "Float" } },
				{ 0x90, new C { T = "Float" } },

				{ 0x94, new C { T = "Tagblock",B = new Dictionary<long, C> // MaterialColorVariants
				{
					{ 0x0, new C { T = "mmr3Hash" } },

					{ 0x4, new C { T = "Float" } },
					{ 0x8, new C { T = "Float" } },
					{ 0xC, new C { T = "Float" } },
					{ 0x10, new C { T = "Float" } },
					{ 0x14, new C { T = "Float" } },
					{ 0x18, new C { T = "Float" } },
					{ 0x1C, new C { T = "Float" } },
					{ 0x20, new C { T = "Float" } },
					{ 0x24, new C { T = "Float" } },
					{ 0x28, new C { T = "Float" } },
					{ 0x2C, new C { T = "Float" } },

				}, S=48 } },

				{ 0xA4, new FlagGroup {A = 4, STR = new Dictionary<int, string>()
				{
					{ 0, "Combo box type" },
				} } },
			}},

			{"mwvs",new()
			{
				{ 0x10, new C { T = "Tagblock",B = new Dictionary<long, C> // MaterialVisorPatternReference
				{
					{ 0x0, new C { T = "mmr3Hash" } },

					{ 0x4, new C { T = "TagRef" } },
				}, S=32 } },

				{ 0x24, new C { T = "Tagblock",B = new Dictionary<long, C> // MaterialColorVariants
				{
					{ 0x0, new C { T = "mmr3Hash" } },

					{ 0x4, new C { T = "Float" } },
					{ 0x8, new C { T = "Float" } },
					{ 0xC, new C { T = "Float" } },
					{ 0x10, new C { T = "Float" } },
					{ 0x14, new C { T = "Float" } },
					{ 0x18, new C { T = "Float" } },
					{ 0x1C, new C { T = "Float" } },
					{ 0x20, new C { T = "Float" } },
					{ 0x24, new C { T = "Float" } },
					{ 0x28, new C { T = "Float" } },
					{ 0x2C, new C { T = "Float" } },

				}, S=48 } },

				{ 0x30, new FlagGroup {A = 4, STR = new Dictionary<int, string>()
				{
					{ 0, "Unknown Function" },
				} } },

				{ 0x34, new FlagGroup {A = 4, STR = new Dictionary<int, string>()
				{
					{ 0, "Unknown Function" },
				} } },
			}},
			{ "weap", new()
{
{ 0x016671, new C{ T="Comment", N = "item" }},
{ 0x016672, new C{ T="Comment", N = "object" }},
{ 0x016673, new C{ T="Comment", N = "AnyTag" }},
{ 0x0, new C{ T="Pointer", N = "vtable space" }},
{ 0x816674, new C{ T="Comment", N = "internal struct" }},
{ 0x8, new C{ T="4Byte", N = "global tag ID" }},
{ 0xC, new C{ T="4Byte", N = "local tag handle" }},
{ 0x1016675, new C{ T="Comment", N = "OBJECT" }},
{ 0x10, new C{ T="2Byte", N = "runtime object type" }},
{ 0x12, new EnumGroup { A=1, N="Nav Mesh Cutting", STR = new Dictionary<int, string>()
{
{0, "Default" },
{1, "Cut" },
{2, "NotCut" },
}}},
{ 0x13, new EnumGroup { A=1, N="Nav Mesh Cutting mode", STR = new Dictionary<int, string>()
{
{0, "Default" },
{1, "Full" },
{2, "Convex" },
{3, "OBB" },
}}},
{ 0x14, new C{ T="Float", N = "Nav Mesh Silhouette Expansion" }},
{ 0x18, new EnumGroup { A=1, N="navmesh collision node opt in", STR = new Dictionary<int, string>()
{
{0, "Default" },
{1, "Yes" },
{2, "No" },
}}},
{ 0x19, new C{ T="Comment", N = "generated_pad19c8" }},
{ 0x1C16676, new C{ T="Comment", N = "Nav Dangerous Objects" }},
{ 0x1C16677, new C{ T="Comment", N = "Avoidance" }},
{ 0x1C, new C{ T="Float", N = "Avoidance Multiplier" }},
{ 0x20, new C{ T="Float", N = "Avoidance Radius" }},
{ 0x2416678, new C{ T="Comment", N = "" }},
{ 0x24, new FlagGroup { A=4, N="object flags", STR = new Dictionary<int, string>()
{
{0, "always render in floating shadow" },
{1, "preserves initial damage owner" },
{2, "not a pathfinding obstacle" },
{3, "extension of parent" },
{4, "does not cause collision damage" },
{5, "early mover" },
{6, "early mover localized physics" },
{7, "object scales attachments" },
{8, "non physical in map editor" },
{9, "effects created by this object do not spawn objects in multiplayer" },
{10, "does not collide with camera" },
{11, "force collide with camera" },
{12, "damage not blocked by obstructions" },
{13, "early mover localize projectiles" },
{14, "grab parent object in forge editing" },
{15, "Hoistable from stand" },
{16, "Destroyable obstacle" },
{17, "vaultable" },
{18, "collides with own projectiles" },
{19, "object rejects dynamic decals" },
{20, "Do not network" },
{21, "Wake when visible to player" },
{22, "Sleep when not visible to player" },
{23, "Does not accept active camouflage" },
{24, "Killed on first contact or damage" },
{25, "Self-destruct timer kills instead of destroying" },
{26, "is permeable to projectiles" },
{27, "Destroy on player contact" },
{28, "Use the new action and animation system" },
{29, "Allow delayed placement and deletion" },
}}},
{ 0x28, new C{ T="Float", N = "bounding radius" }},
{ 0x2C, new C{ T="Float", N = "bounding offset.X" }},
{ 0x30, new C{ T="Float", N = "bounding offset.Y" }},
{ 0x34, new C{ T="Float", N = "bounding offset.Z" }},
{ 0x38, new C{ T="Float", N = "horizontal acceleration scale" }},
{ 0x3C, new C{ T="Float", N = "vertical acceleration scale" }},
{ 0x40, new C{ T="Float", N = "angular acceleration scale" }},
{ 0x44, new EnumGroup { A=1, N="lightmap shadow mode", STR = new Dictionary<int, string>()
{
{0, "default" },
{1, "never" },
{2, "always" },
{3, "blur" },
}}},
{ 0x45, new EnumGroup { A=1, N="multiple airprobe mode", STR = new Dictionary<int, string>()
{
{0, "default" },
{1, "always" },
}}},
{ 0x46, new EnumGroup { A=1, N="water density", STR = new Dictionary<int, string>()
{
{0, "default" },
{1, "super_floater" },
{2, "floater" },
{3, "neutral" },
{4, "sinker" },
{5, "super_sinker" },
{6, "none" },
}}},
{ 0x4716679, new C{ T="Comment", N = "Streaming" }},
{ 0x4716680, new C{ T="Comment", N = "Streaming" }},
{ 0x47, new FlagGroup { A=1, N="Streaming control flags", STR = new Dictionary<int, string>()
{
{0, "High priority" },
{1, "Apply delay on stream out" },
{2, "Ignore overlapping active objects for collision" },
}}},
{ 0x4816681, new C{ T="Comment", N = "" }},
{ 0x4816682, new C{ T="Comment", N = "impact audio" }},
{ 0x4816683, new C{ T="Comment", N = "IMPACT AUDIO" }},
{ 0x48, new C{ T="Float", N = "small impact minimum speed" }},
{ 0x4C, new C{ T="Float", N = "medium impact minimum speed" }},
{ 0x50, new C{ T="Float", N = "large impact minimum speed" }},
{ 0x54, new C{ T="Float", N = "large impact maximum speed" }},
{ 0x5816684, new C{ T="Comment", N = "" }},
{ 0x58, new C{ T="4Byte", N = "runtime flags" }},
{ 0x5C, new C{ T="Tagblock", N = "source sidecar", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="String", N = "sidecar path" }},
}, S=256}},
{ 0x70, new C{ T="mmr3Hash", N = "default model variant" }},
{ 0x74, new C{ T="mmr3Hash", N = "default style id" }},
{ 0x78, new C{ T="TagRef", N = "model" }},
{ 0x94, new C{ T="TagRef", N = "asset" }},
{ 0xB0, new C{ T="TagRef", N = "frame" }},
{ 0xCC, new C{ T="TagRef", N = "crate object" }},
{ 0xE816685, new C{ T="Comment", N = "Damage Source" }},
{ 0xE816686, new C{ T="Comment", N = "damageSource" }},
{ 0xE8, new C{ T="mmr3Hash", N = "Damage Source Name" }},
{ 0xEC, new C{ T="Float", N = "navpoint vertical offset" }},
{ 0xF016687, new C{ T="Comment", N = "only set this tag if you want to override the default collision damage values in globals.globals" }},
{ 0xF0, new C{ T="TagRef", N = "collision damage" }},
{ 0x10C, new C{ T="Tagblock", N = "early mover OBB", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "node name" }},
{ 0x4, new C{ T="4Byte", N = "runtime node index" }},
{ 0x8, new C{ T="Float", N = "x0" }},
{ 0xC, new C{ T="Float", N = "x1" }},
{ 0x10, new C{ T="Float", N = "y0" }},
{ 0x14, new C{ T="Float", N = "y1" }},
{ 0x18, new C{ T="Float", N = "z0" }},
{ 0x1C, new C{ T="Float", N = "z1" }},
{ 0x20, new C{ T="Float", N = "angles.X" }},
{ 0x24, new C{ T="Float", N = "angles.Y" }},
{ 0x28, new C{ T="Float", N = "angles.Z" }},
}, S=44}},
{ 0x120, new C{ T="TagRef", N = "creation effect" }},
{ 0x13C16688, new C{ T="Comment", N = "material effect references" }},
{ 0x13C16689, new C{ T="Comment", N = "Material Effects Section" }},
{ 0x13C, new C{ T="TagRef", N = "material effects" }},
{ 0x158, new C{ T="TagRef", N = "visual material effects" }},
{ 0x174, new C{ T="TagRef", N = "sound material effects" }},
{ 0x19016690, new C{ T="Comment", N = "" }},
{ 0x190, new C{ T="TagRef", N = "melee sound" }},
{ 0x1AC, new C{ T="Float", N = "Damage Shader Min Vitality" }},
{ 0x1B0, new C{ T="Float", N = "Damage Shader Intensity Scalar" }},
{ 0x1B4, new C{ T="Float", N = "kill on first contact or damage after time" }},
{ 0x1B8, new C{ T="Float", N = "self-destruct time" }},
{ 0x1BC, new C{ T="Float", N = "self-destruct time max" }},
{ 0x1C0, new C{ T="Tagblock", N = "ai properties", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="ai flags", STR = new Dictionary<int, string>()
{
{0, "detroyable cover" },
{1, "pathfinding ignore when dead" },
{2, "dynamic cover" },
{3, "non flight-blocking" },
{4, "dynamic cover from centre" },
{5, "has corner markers" },
{6, "idle when flying" },
{7, "consider for interaction" },
{8, "leap on cover target" },
}}},
{ 0x4, new C{ T="mmr3Hash", N = "ai type name" }},
{ 0x8, new C{ T="mmr3Hash", N = "interaction name" }},
{ 0xC, new EnumGroup { A=2, N="ai size", STR = new Dictionary<int, string>()
{
{0, "default" },
{1, "tiny" },
{2, "small" },
{3, "medium" },
{4, "large" },
{5, "immobile" },
}}},
{ 0xE, new EnumGroup { A=2, N="leap jump speed", STR = new Dictionary<int, string>()
{
{0, "NONE" },
{1, "very short" },
{2, "short" },
{3, "medium short" },
{4, "medium long" },
{5, "long" },
{6, "very long" },
{7, "infinite" },
}}},
{ 0x10, new C{ T="Float", N = "unattached damage modifier" }},
{ 0x14, new FlagGroup { A=1, N="Bot markup flags", STR = new Dictionary<int, string>()
{
{0, "Interact object" },
{1, "Objective pickup" },
{2, "Deliver location" },
{3, "Ammo replenisher" },
{4, "Health replenisher" },
}}},
{ 0x15, new C{ T="Comment", N = "generated_pad9518" }},
{ 0x1816691, new C{ T="Comment", N = "Heat Override" }},
{ 0x18, new C{ T="Tagblock", N = "override heat generated per round", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "heat generated per round override (easy)" }},
{ 0x4, new C{ T="Float", N = "heat generated per round override (normal)" }},
{ 0x8, new C{ T="Float", N = "heat generated per round override (heroic)" }},
{ 0xC, new C{ T="Float", N = "heat generated per round override (legendary)" }},
}, S=16}},
{ 0x2C, new C{ T="Float", N = "Actor LOD cost" }},
}, S=48}},
{ 0x1D4, new C{ T="Tagblock", N = "functions", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="flags", STR = new Dictionary<int, string>()
{
{0, "invert" },
{1, "mapping does not controls active" },
{2, "always active" },
{3, "random time offset" },
{4, "always exports value" },
{5, "turn off with uses magnitude" },
{6, "cannot be predicted" },
}}},
{ 0x4, new C{ T="mmr3Hash", N = "import name" }},
{ 0x8, new C{ T="Float", N = "no import default" }},
{ 0xC, new C{ T="mmr3Hash", N = "export name" }},
{ 0x10, new C{ T="mmr3Hash", N = "turn off with" }},
{ 0x14, new C{ T="mmr3Hash", N = "ranged interpolation name" }},
{ 0x18, new C{ T="Float", N = "min value" }},
{ 0x1C16692, new C{ T="Comment", N = "default function" }},
{ 0x1C16693, new C{ T="Comment", N = "default function" }},
{ 0x1C16694, new C{ T="Comment", N = "" }},
{ 0x1C, new C{ T="Unmapped", N = "data" }},
{ 0x3416695, new C{ T="Comment", N = "" }},
{ 0x34, new C{ T="mmr3Hash", N = "scale by" }},
{ 0x38, new EnumGroup { A=1, N="interpolation point of view", STR = new Dictionary<int, string>()
{
{0, "any" },
{1, "first person" },
{2, "third person" },
}}},
{ 0x39, new C{ T="Comment", N = "generated_pad73a4" }},
{ 0x3C, new C{ T="Tagblock", N = "interpolation", B = new Dictionary<long, C>
{
{ 0x0, new EnumGroup { A=4, N="interpolation mode", STR = new Dictionary<int, string>()
{
{0, "constant velocity" },
{1, "linear acceleration" },
{2, "damped spring" },
{3, "fractional" },
}}},
{ 0x4, new C{ T="Float", N = "linear travel time" }},
{ 0x8, new C{ T="Float", N = "acceleration" }},
{ 0xC16696, new C{ T="Comment", N = "springs" }},
{ 0xC, new C{ T="Float", N = "spring k" }},
{ 0x10, new C{ T="Float", N = "spring c" }},
{ 0x14, new C{ T="Float", N = "fraction" }},
}, S=24}},
{ 0x50, new C{ T="4Byte", N = "runtime interpolator index" }},
}, S=84}},
{ 0x1E8, new C{ T="4Byte", N = "num predicted runtime interpolator functions" }},
{ 0x1EC, new C{ T="Tagblock", N = "runtime interpolator functions", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="4Byte", N = "runtime interpolator to object function mapping" }},
}, S=4}},
{ 0x200, new C{ T="Tagblock", N = "function switches", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "switch function name" }},
{ 0x4, new C{ T="mmr3Hash", N = "export name" }},
{ 0x8, new C{ T="Tagblock", N = "switched functions", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "selection bounds.min" }},
{ 0x4, new C{ T="Float", N = "selection bounds.max" }},
{ 0x8, new C{ T="mmr3Hash", N = "function name" }},
}, S=12}},
}, S=28}},
{ 0x214, new C{ T="Tagblock", N = "functions forwarded to parent", B = new Dictionary<long, C>
{
{ 0x016697, new C{ T="Comment", N = "Object Function Forwarding" }},
{ 0x0, new C{ T="mmr3Hash", N = "function to forward" }},
}, S=4}},
{ 0x228, new FlagGroup { A=2, N="Ammo Refill Flags", STR = new Dictionary<int, string>()
{
{0, "None" },
{1, "Kinetic" },
{2, "Plasma" },
{3, "Hard light" },
{4, "Shock" },
{5, "Power weapon" },
}}},
{ 0x22A, new FlagGroup { A=1, N="Ammo Refill Behavior Flags", STR = new Dictionary<int, string>()
{
{0, "No automatic refill" },
}}},
{ 0x22B, new C{ T="Byte", N = "generated_pad33a9" }},
{ 0x22C, new C{ T="Tagblock", N = "Ammo Refill Variant Flags", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "variant name" }},
{ 0x4, new FlagGroup { A=2, N="Ammo Refill Flags", STR = new Dictionary<int, string>()
{
{0, "None" },
{1, "Kinetic" },
{2, "Plasma" },
{3, "Hard light" },
{4, "Shock" },
{5, "Power weapon" },
}}},
{ 0x6, new FlagGroup { A=1, N="Ammo Refill Behavior Flags", STR = new Dictionary<int, string>()
{
{0, "No automatic refill" },
}}},
{ 0x7, new C{ T="Byte", N = "generated_pad055c" }},
}, S=8}},
{ 0x240, new FlagGroup { A=4, N="object secondary flags", STR = new Dictionary<int, string>()
{
{0, "does not affect projectile aiming" },
{1, "never delete on bsp transition" },
{2, "Aim assist raycast does not ignore parents" },
{3, "Provides an override motion tracker blip sprite" },
{4, "Use the new animation system only" },
{5, "Detach children when the destroyed" },
{6, "Force projectile overpenetration" },
{7, "Create the Object Node Graph Component" },
{8, "Use inertialization" },
{9, "Cannot be grappled" },
{10, "Can be pulled to the player by the grapple hook" },
{11, "Damage Effect Sounds - Play Ineffective Hit" },
{12, "Always forward unhandled object functions to the parent" },
{13, "is valid submunition target" },
{14, "allow repeated bouncing projectile overpenetration" },
{15, "inconsequential target" },
{16, "active camo always on" },
{17, "object is invisible, even attachments" },
{18, "navmesh collision node opt in" },
{19, "Disable CVW Lighting" },
{20, "All Markers Use Unique Acoustic Sound Sources" },
{21, "Damage ignores owning unit" },
{22, "Enable doppler audio" },
{23, "blocks AOE if the AOE's epicenter is blocked" },
{24, "Enable Damage Hit Ticks" },
{25, "Blocks grapple aim assist" },
{26, "Send Damage Aftermath to Parent" },
}}},
{ 0x24416698, new C{ T="Comment", N = "Customization" }},
{ 0x244, new C{ T="mmr3Hash", N = "customization set" }},
{ 0x24816699, new C{ T="Comment", N = "" }},
{ 0x248, new C{ T="Tagblock", N = "attachments", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "name" }},
{ 0x4, new C{ T="TagRef", N = "type" }},
{ 0x20, new C{ T="TagRef", N = "tag graph output" }},
{ 0x3C, new C{ T="mmr3Hash", N = "output node name" }},
{ 0x40, new C{ T="Tagblock", N = "tag graph float params", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "name" }},
{ 0x4, new C{ T="Float", N = "value" }},
}, S=8}},
{ 0x54, new C{ T="TagRef", N = "override type" }},
{ 0x7016700, new C{ T="Comment", N = "variant names" }},
{ 0x70, new C{ T="Tagblock", N = "variant names", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "variant name" }},
}, S=4}},
{ 0x8416701, new C{ T="Comment", N = "" }},
{ 0x84, new C{ T="mmr3Hash", N = "marker" }},
{ 0x88, new EnumGroup { A=1, N="change color", STR = new Dictionary<int, string>()
{
{0, "none" },
{1, "primary" },
{2, "secondary" },
{3, "tertiary" },
{4, "quaternary" },
}}},
{ 0x89, new FlagGroup { A=1, N="flags", STR = new Dictionary<int, string>()
{
{0, "always create" },
{1, "effect size scale from object scale" },
{2, "update on create" },
{3, "always update" },
}}},
{ 0x8A, new C{ T="2Byte", N = "generated_padbd3f" }},
{ 0x8C, new C{ T="mmr3Hash", N = "primary scale" }},
{ 0x90, new C{ T="mmr3Hash", N = "secondary scale" }},
}, S=148}},
{ 0x25C, new C{ T="Tagblock", N = "indirect lighting data", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "Name" }},
{ 0x4, new C{ T="Tagblock", N = "Variant names", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "variant name" }},
}, S=4}},
{ 0x18, new C{ T="TagRef", N = "Object Lightmap" }},
{ 0x34, new C{ T="Tagblock", N = "Object Cubemap set", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "Name" }},
{ 0x4, new FlagGroup { A=4, N="Flags", STR = new Dictionary<int, string>()
{
{0, "Enable Intensity Correction" },
{1, "Capture With Effects" },
{2, "Affects Adjacent Bsps" },
{3, "Capture Dynamic Objects" },
}}},
{ 0x816702, new C{ T="Comment", N = "Dumpling" }},
{ 0x8, new C{ T="Tagblock", N = "inner points", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "position.X" }},
{ 0x4, new C{ T="Float", N = "position.Y" }},
{ 0x8, new C{ T="Float", N = "position.Z" }},
}, S=12}},
{ 0x1C, new C{ T="Tagblock", N = "outer points", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "position.X" }},
{ 0x4, new C{ T="Float", N = "position.Y" }},
{ 0x8, new C{ T="Float", N = "position.Z" }},
}, S=12}},
{ 0x30, new C{ T="Float", N = "height" }},
{ 0x34, new C{ T="Float", N = "sink" }},
{ 0x38, new C{ T="Float", N = "inner value" }},
{ 0x3C, new C{ T="Float", N = "outer value" }},
{ 0x40, new C{ T="Float", N = "center point.X" }},
{ 0x44, new C{ T="Float", N = "center point.Y" }},
{ 0x48, new C{ T="Float", N = "center point.Z" }},
{ 0x4C, new C{ T="Float", N = "trivial cull radius squared" }},
{ 0x50, new C{ T="Float", N = "bound volume" }},
{ 0x54, new C{ T="TagRef", N = "Cubemap Bitmap" }},
{ 0x70, new EnumGroup { A=2, N="Enable Parallax Correction", STR = new Dictionary<int, string>()
{
{0, "Off" },
{1, "On" },
}}},
{ 0x72, new C{ T="2Byte", N = "Cubemap Volume Priority" }},
{ 0x74, new C{ T="Float", N = "Cubemap Origin.X" }},
{ 0x78, new C{ T="Float", N = "Cubemap Origin.Y" }},
{ 0x7C, new C{ T="Float", N = "Cubemap Origin.Z" }},
{ 0x80, new C{ T="Float", N = "Depth Positive.X" }},
{ 0x84, new C{ T="Float", N = "Depth Positive.Y" }},
{ 0x88, new C{ T="Float", N = "Depth Positive.Z" }},
{ 0x8C, new C{ T="Float", N = "Depth Negative.X" }},
{ 0x90, new C{ T="Float", N = "Depth Negative.Y" }},
{ 0x94, new C{ T="Float", N = "Depth Negative.Z" }},
{ 0x98, new EnumGroup { A=2, N="Active Volume", STR = new Dictionary<int, string>()
{
{0, "Off" },
{1, "On" },
}}},
{ 0x9A, new EnumGroup { A=2, N="Maximum cubemap size", STR = new Dictionary<int, string>()
{
{0, "128x128" },
{1, "256x256" },
{2, "512x512" },
}}},
{ 0x9C, new C{ T="Float", N = "Intensity.X" }},
{ 0xA0, new C{ T="Float", N = "Intensity.Y" }},
{ 0xA4, new C{ T="Float", N = "Intensity.Z" }},
{ 0xA8, new C{ T="Float", N = "Self-illum Scale Down" }},
{ 0xAC, new C{ T="Tagblock", N = "EditorMetadata", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="String", N = "folder name" }},
{ 0x100, new C{ T="Float", N = "local space pivot point position.X" }},
{ 0x104, new C{ T="Float", N = "local space pivot point position.Y" }},
{ 0x108, new C{ T="Float", N = "local space pivot point position.Z" }},
}, S=268}},
{ 0xC0, new C{ T="TagRef", N = "owner bsp" }},
{ 0xDC, new C{ T="mmr3Hash", N = "owner variant" }},
{ 0xE0, new C{ T="2Byte", N = "runtime bsp index" }},
{ 0xE2, new C{ T="2Byte", N = "runtime variant index" }},
{ 0xE4, new C{ T="Float", N = "Blend Distance" }},
{ 0xE8, new EnumGroup { A=4, N="Cubemap Volume Type", STR = new Dictionary<int, string>()
{
{0, "Prism" },
{1, "Sphere" },
}}},
{ 0xEC, new C{ T="Float", N = "Orientation" }},
{ 0xF0, new C{ T="TagRef", N = "Cubemap Depth Bitmap" }},
{ 0x10C, new C{ T="Float", N = "Depth Blend Range" }},
{ 0x110, new C{ T="Float", N = "Intensity Scale" }},
{ 0x114, new EnumGroup { A=2, N="Tintable", STR = new Dictionary<int, string>()
{
{0, "Off" },
{1, "On" },
}}},
{ 0x116, new C{ T="2Byte", N = "generated_pad93d5" }},
{ 0x118, new C{ T="Float", N = "Relevancy Radius" }},
}, S=284}},
}, S=72}},
{ 0x270, new C{ T="Tagblock", N = "hull surfaces", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=2, N="flags", STR = new Dictionary<int, string>()
{
{0, "works on land" },
{1, "effects only" },
}}},
{ 0x2, new C{ T="2Byte", N = "generated_pad978b" }},
{ 0x416703, new C{ T="Comment", N = "" }},
{ 0x4, new C{ T="mmr3Hash", N = "marker name" }},
{ 0x8, new C{ T="Float", N = "radius" }},
{ 0xC, new C{ T="Tagblock", N = "drag", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "material" }},
{ 0x416704, new C{ T="Comment", N = "drag" }},
{ 0x416705, new C{ T="Comment", N = "Pressure" }},
{ 0x416706, new C{ T="Comment", N = "pressure" }},
{ 0x416707, new C{ T="Comment", N = "velocity to force" }},
{ 0x416708, new C{ T="Comment", N = "velocity to pressure" }},
{ 0x416709, new C{ T="Comment", N = "" }},
{ 0x4, new C{ T="Unmapped", N = "data" }},
{ 0x1C16710, new C{ T="Comment", N = "" }},
{ 0x1C, new C{ T="Float", N = "max velocity" }},
{ 0x2016711, new C{ T="Comment", N = "" }},
{ 0x2016712, new C{ T="Comment", N = "Suction" }},
{ 0x2016713, new C{ T="Comment", N = "suction" }},
{ 0x2016714, new C{ T="Comment", N = "velocity to force" }},
{ 0x2016715, new C{ T="Comment", N = "velocity to pressure" }},
{ 0x2016716, new C{ T="Comment", N = "" }},
{ 0x20, new C{ T="Unmapped", N = "data" }},
{ 0x3816717, new C{ T="Comment", N = "" }},
{ 0x38, new C{ T="Float", N = "max velocity" }},
{ 0x3C16718, new C{ T="Comment", N = "" }},
{ 0x3C, new C{ T="Float", N = "linear damping" }},
{ 0x40, new C{ T="Float", N = "angular damping" }},
}, S=68}},
}, S=32}},
{ 0x284, new C{ T="Tagblock", N = "jetwash", B = new Dictionary<long, C>
{
{ 0x016719, new C{ T="Comment", N = "" }},
{ 0x0, new C{ T="mmr3Hash", N = "marker name" }},
{ 0x4, new C{ T="Float", N = "radius" }},
{ 0x8, new C{ T="4Byte", N = "maximum traces" }},
{ 0xC, new C{ T="Float", N = "maximum emission length" }},
{ 0x10, new C{ T="Float", N = "trace yaw angle.min" }},
{ 0x14, new C{ T="Float", N = "trace yaw angle.max" }},
{ 0x18, new C{ T="Float", N = "trace pitch angle.min" }},
{ 0x1C, new C{ T="Float", N = "trace pitch angle.max" }},
{ 0x20, new C{ T="Float", N = "particle offset" }},
}, S=36}},
{ 0x298, new C{ T="Tagblock", N = "widgets", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "type" }},
}, S=28}},
{ 0x2AC, new C{ T="Tagblock", N = "change colors", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Tagblock", N = "initial permutations", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "weight" }},
{ 0x4, new C{ T="Unmapped", N = "color lower bound" }},
{ 0x10, new C{ T="Unmapped", N = "color upper bound" }},
{ 0x1C, new C{ T="mmr3Hash", N = "variant name" }},
}, S=32}},
{ 0x14, new C{ T="Tagblock", N = "functions", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="scale flags", STR = new Dictionary<int, string>()
{
{0, "blend in hsv" },
{1, "...more colors" },
}}},
{ 0x4, new C{ T="Unmapped", N = "color lower bound" }},
{ 0x10, new C{ T="Unmapped", N = "color upper bound" }},
{ 0x1C, new C{ T="mmr3Hash", N = "darken by" }},
{ 0x20, new C{ T="mmr3Hash", N = "scale by" }},
}, S=36}},
}, S=40}},
{ 0x2C0, new C{ T="Tagblock", N = "multiplayer object", B = new Dictionary<long, C>
{
{ 0x016720, new C{ T="Comment", N = "TYPE AND FLAGS" }},
{ 0x0, new EnumGroup { A=1, N="type", STR = new Dictionary<int, string>()
{
{0, "ordinary" },
{1, "weapon" },
{2, "grenade" },
{3, "projectile" },
{4, "powerup" },
{5, "equipment" },
{6, "ammo pack" },
{7, "light land vehicle" },
{8, "heavy land vehicle" },
{9, "flying vehicle" },
{10, "turret" },
{11, "device" },
{12, "dispenser" },
{13, "teleporter 2way" },
{14, "teleporter sender" },
{15, "teleporter receiver" },
{16, "player spawn location" },
{17, "player respawn zone" },
{18, "named location area" },
{19, "danger zone" },
{20, "safe volume" },
{21, "kill volume" },
{22, "cinematic camera" },
{23, "trait zone" },
{24, "powerup pad - deprecated" },
{25, "weapon pad" },
{26, "light" },
{27, "jumbotron" },
{28, "man cannon" },
{29, "cinematic marker" },
{30, "script brain" },
{31, "static io" },
{32, "fx" },
{33, "bot navigation marker" },
{34, "jump hint volume" },
}}},
{ 0x1, new FlagGroup { A=1, N="teleporter passability", STR = new Dictionary<int, string>()
{
{0, "disallow players" },
{1, "allow light land vehicles" },
{2, "allow heavy land vehicles" },
{3, "allow flying vehicles" },
{4, "allow projectiles" },
}}},
{ 0x2, new EnumGroup { A=1, N="spawn timer type", STR = new Dictionary<int, string>()
{
{0, "starts on death" },
{1, "starts on disturbance" },
}}},
{ 0x3, new C{ T="Byte", N = "generated_padd1ba" }},
{ 0x4, new C{ T="2Byte", N = "number of fx color overrides" }},
{ 0x6, new C{ T="2Byte", N = "generated_pad1e6f" }},
{ 0x816721, new C{ T="Comment", N = "GOAL AND RESPAWN ZONE OBJECT BOUNDARY" }},
{ 0x8, new C{ T="Float", N = "boundary width/radius" }},
{ 0xC, new C{ T="Float", N = "boundary box length" }},
{ 0x10, new C{ T="Float", N = "boundary +height" }},
{ 0x14, new C{ T="Float", N = "boundary -height" }},
{ 0x18, new EnumGroup { A=1, N="boundary shape", STR = new Dictionary<int, string>()
{
{0, "unused" },
{1, "sphere" },
{2, "cylinder" },
{3, "box" },
}}},
{ 0x19, new C{ T="Byte", N = "pad_shape1" }},
{ 0x1A, new C{ T="2Byte", N = "pad_shape2" }},
{ 0x1C16722, new C{ T="Comment", N = "SPAWNING DATA" }},
{ 0x1C, new C{ T="2Byte", N = "default spawn time" }},
{ 0x1E, new C{ T="2Byte", N = "default abandonment time" }},
{ 0x20, new FlagGroup { A=4, N="flags", STR = new Dictionary<int, string>()
{
{0, "Only render if editable" },
{1, "DEPRECATED phased physics in forge" },
{2, "valid initial player spawn" },
{3, "fixed boundary orientation" },
{4, "candy monitor should ignore" },
{5, "inherit owning team color" },
{6, "boundary volume doesn't kill immediately" },
{7, "Only collision if editable" },
{8, "Only physics if editable" },
{9, "Force render in Forge" },
{10, "respawn player spawn" },
{11, "fallback player spawn" },
{12, "jump hint volume is one-way" },
}}},
{ 0x2416723, new C{ T="Comment", N = "RESPAWN ZONE DATA" }},
{ 0x24, new C{ T="Float", N = "normal weight" }},
{ 0x28, new C{ T="Tagblock", N = "falloff function", B = new Dictionary<long, C>
{
{ 0x016724, new C{ T="Comment", N = "function" }},
{ 0x016725, new C{ T="Comment", N = "function" }},
{ 0x016726, new C{ T="Comment", N = "function" }},
{ 0x016727, new C{ T="Comment", N = "" }},
{ 0x0, new C{ T="Unmapped", N = "data" }},
{ 0x1816728, new C{ T="Comment", N = "" }},
}, S=24}},
{ 0x3C16729, new C{ T="Comment", N = "MARKER DATA" }},
{ 0x3C16730, new C{ T="Comment", N = "" }},
{ 0x3C, new C{ T="mmr3Hash", N = "boundary center marker" }},
{ 0x4016731, new C{ T="Comment", N = "" }},
{ 0x40, new C{ T="mmr3Hash", N = "spawned object marker name" }},
{ 0x4416732, new C{ T="Comment", N = "SPAWNED OBJECT" }},
{ 0x44, new C{ T="TagRef", N = "spawned object" }},
{ 0x60, new C{ T="mmr3Hash", N = "NYI boundary material" }},
{ 0x6416733, new C{ T="Comment", N = "BOUNDARY SHADER - DEFAULT" }},
{ 0x64, new C{ T="TagRef", N = "boundary standard shader" }},
{ 0x8016734, new C{ T="Comment", N = "BOUNDARY SHADER - SPHERE" }},
{ 0x80, new C{ T="TagRef", N = "sphere standard shader" }},
{ 0x9C16735, new C{ T="Comment", N = "BOUNDARY SHADER - CYLINDER" }},
{ 0x9C, new C{ T="TagRef", N = "cylinder standard shader" }},
{ 0xB816736, new C{ T="Comment", N = "BOUNDARY SHADER - BOX" }},
{ 0xB8, new C{ T="TagRef", N = "box standard shader" }},
{ 0xD416737, new C{ T="Comment", N = "FORGE DATA" }},
{ 0xD4, new FlagGroup { A=2, N="Forge Property Flags", STR = new Dictionary<int, string>()
{
{0, "Disable yaw" },
{1, "Can Only Be Rotated On Yaw" },
{2, "Allow In Game Variant Toggle" },
{3, "Disable primary color change" },
{4, "Disable secondary color change" },
{5, "Disable tertiary color change" },
{6, "Disable normal physics" },
{7, "Disable fixed physics" },
{8, "Disable phased physics" },
}}},
{ 0xD6, new EnumGroup { A=1, N="Default Physics Type", STR = new Dictionary<int, string>()
{
{0, "Normal" },
{1, "Fixed" },
{2, "Phased" },
}}},
{ 0xD7, new C{ T="Byte", N = "generated_pad6b24" }},
{ 0xD8, new C{ T="mmr3Hash", N = "Default Primary Color" }},
{ 0xDC, new C{ T="mmr3Hash", N = "Default Secondary Color" }},
{ 0xE0, new C{ T="mmr3Hash", N = "Default Tertiary Color" }},
{ 0xE4, new C{ T="Byte", N = "Default Primary Glossiness" }},
{ 0xE5, new C{ T="Byte", N = "Default Secondary Glossiness" }},
{ 0xE6, new C{ T="Byte", N = "Default Tertiary Glossiness" }},
{ 0xE7, new C{ T="Byte", N = "generated_padb7d9" }},
{ 0xE8, new C{ T="mmr3Hash", N = "Default Label [1]" }},
{ 0xEC, new C{ T="mmr3Hash", N = "Default Label [2]" }},
{ 0xF0, new C{ T="mmr3Hash", N = "Default Label [3]" }},
{ 0xF4, new C{ T="mmr3Hash", N = "Default Label [4]" }},
{ 0xF8, new C{ T="Pointer", N = "m_defaultBoundaryPipelineState" }},
{ 0x100, new C{ T="Pointer", N = "m_sphereBoundaryPipelineStates" }},
{ 0x108, new C{ T="Pointer", N = "m_cylinderBoundaryPipelineStates" }},
{ 0x110, new C{ T="Pointer", N = "m_boxBoundaryPipelineStates" }},
{ 0x118, new C{ T="Float", N = "Callout Radius" }},
{ 0x11C, new C{ T="4Byte", N = "generated_pad048e" }},
}, S=288}},
{ 0x2D4, new C{ T="Tagblock", N = "Forge data", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "Palette" }},
{ 0x1C, new C{ T="mmr3Hash", N = "Name" }},
{ 0x20, new C{ T="mmr3Hash", N = "Description" }},
{ 0x24, new C{ T="Float", N = "Placement Priority" }},
{ 0x28, new C{ T="mmr3Hash", N = "Variant Name" }},
{ 0x2C, new C{ T="TagRef", N = "Configuration" }},
{ 0x48, new C{ T="Float", N = "Starting yaw/pitch/roll.X" }},
{ 0x4C, new C{ T="Float", N = "Starting yaw/pitch/roll.Y" }},
{ 0x50, new C{ T="Float", N = "Starting yaw/pitch/roll.Z" }},
}, S=84}},
{ 0x2E8, new C{ T="TagRef", N = "simulation_interpolation" }},
{ 0x304, new C{ T="TagRef", N = "authority trust settings" }},
{ 0x320, new C{ T="Tagblock", N = "spawn effects", B = new Dictionary<long, C>
{
{ 0x016738, new C{ T="Comment", N = "Spawn Effects" }},
{ 0x0, new C{ T="TagRef", N = "multiplayer spawn effect" }},
{ 0x1C, new C{ T="TagRef", N = "campaign spawn effect" }},
}, S=56}},
{ 0x334, new C{ T="Tagblock", N = "model dissolve data", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "model dissolve data" }},
}, S=28}},
{ 0x348, new C{ T="String", N = "class name" }},
{ 0x448, new C{ T="Tagblock", N = "script tagalongs", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "reference" }},
}, S=28}},
{ 0x45C, new C{ T="TagRef", N = "prototype script" }},
{ 0x47816739, new C{ T="Comment", N = "Object Abandoment" }},
{ 0x47816740, new C{ T="Comment", N = "object abandonment" }},
{ 0x478, new C{ T="Float", N = "Vitality Limit To Start Countdown" }},
{ 0x47C, new C{ T="Float", N = "Countdown Time In Seconds" }},
{ 0x480, new FlagGroup { A=1, N="flags", STR = new Dictionary<int, string>()
{
{0, "Enable In Multiplayer" },
{1, "Enable In Single Player" },
}}},
{ 0x481, new C{ T="Comment", N = "generated_pade8bf" }},
{ 0x484, new C{ T="Tagblock", N = "Designer Metadata", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "meta label" }},
}, S=4}},
{ 0x49816741, new C{ T="Comment", N = "Object Function Smoothing" }},
{ 0x498, new C{ T="Tagblock", N = "Object Sound RTPCs", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="4Byte", N = "Attachment Index" }},
{ 0x4, new C{ T="mmr3Hash", N = "Function" }},
{ 0x8, new C{ T="mmr3Hash", N = "RTPC Name" }},
{ 0xC, new C{ T="4Byte", N = "RTPC name hash value" }},
}, S=16}},
{ 0x4AC, new C{ T="Tagblock", N = "Object Sound Sweeteners", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "Function" }},
{ 0x4, new C{ T="TagRef", N = "sound" }},
{ 0x20, new C{ T="Float", N = "Switch point" }},
{ 0x24, new C{ T="4Byte", N = "Mode" }},
}, S=40}},
{ 0x4C0, new C{ T="mmr3Hash", N = "Audio acoustics root marker override" }},
{ 0x4C4, new C{ T="Float", N = "Audio Acoustics Transparency" }},
{ 0x4C8, new C{ T="Tagblock", N = "Object function smoothing", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "id" }},
{ 0x4, new C{ T="mmr3Hash", N = "alias of" }},
{ 0x8, new C{ T="Float", N = "smoothing factor" }},
}, S=12}},
{ 0x4DC, new EnumGroup { A=1, N="Animated mesh animation type", STR = new Dictionary<int, string>()
{
{0, "None" },
{1, "One Time" },
{2, "Looping" },
}}},
{ 0x4DD, new C{ T="Comment", N = "generated_pad805e" }},
{ 0x4E0, new C{ T="Float", N = "Placement cost multiplier" }},
{ 0x4E4, new C{ T="TagRef", N = "Trigger volume component info" }},
{ 0x500, new C{ T="Tagblock", N = "Tracking Info", B = new Dictionary<long, C>
{
{ 0x016742, new C{ T="Comment", N = "Map these settings to a ping type" }},
{ 0x0, new FlagGroup { A=1, N="flags", STR = new Dictionary<int, string>()
{
{0, "trackable" },
{1, "enabled by default" },
{2, "outline" },
{3, "immediate response" },
{4, "follow offscreen" },
{5, "do not track children" },
{6, "do not outline children" },
}}},
{ 0x1, new EnumGroup { A=1, N="ping type", STR = new Dictionary<int, string>()
{
{0, "active" },
{1, "passive" },
{2, "custom active" },
{3, "target marking" },
}}},
{ 0x2, new EnumGroup { A=1, N="team visibility", STR = new Dictionary<int, string>()
{
{0, "visible to everyone" },
{1, "hidden from enemies" },
{2, "hidden from friends" },
}}},
{ 0x316743, new C{ T="Comment", N = "Misc" }},
{ 0x3, new EnumGroup { A=1, N="priority", STR = new Dictionary<int, string>()
{
{0, "critical" },
{1, "high" },
{2, "normal" },
{3, "low" },
}}},
{ 0x416744, new C{ T="Comment", N = "" }},
{ 0x4, new C{ T="mmr3Hash", N = "ping group" }},
{ 0x816745, new C{ T="Comment", N = "Nav Point" }},
{ 0x8, new C{ T="mmr3Hash", N = "nav point screen" }},
{ 0xC, new C{ T="mmr3Hash", N = "nav point label" }},
{ 0x10, new C{ T="Float", N = "nav point vertical offset" }},
{ 0x1416746, new C{ T="Comment", N = "" }},
{ 0x1416747, new C{ T="Comment", N = "Range Override" }},
{ 0x14, new C{ T="Float", N = "range" }},
{ 0x1816748, new C{ T="Comment", N = "Effects" }},
{ 0x18, new C{ T="TagRef", N = "ping hit instigator effect" }},
{ 0x34, new C{ T="TagRef", N = "ping hit effect" }},
{ 0x50, new C{ T="TagRef", N = "outline override" }},
{ 0x6C16749, new C{ T="Comment", N = "" }},
}, S=108}},
{ 0x514, new C{ T="TagRef", N = "Property Based Effects" }},
{ 0x530, new C{ T="Tagblock", N = "Interactions", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "Marker" }},
{ 0x4, new C{ T="Tagblock", N = "Ambient Info", B = new Dictionary<long, C>
{
{ 0x0, new EnumGroup { A=1, N="desire type", STR = new Dictionary<int, string>()
{
{0, "Scripted" },
{1, "Health" },
{2, "Defense" },
{3, "Attack Enemy" },
{4, "Weapon" },
{5, "Vehicle" },
}}},
{ 0x1, new C{ T="Comment", N = "generated_pad5f2a" }},
{ 0x4, new EnumGroup { A=4, N="action", STR = new Dictionary<int, string>()
{
{0, "Base (Do not use)" },
{1, "Ground" },
{2, "Crouch" },
{3, "Melee" },
{4, "Turn" },
{5, "Shoot" },
{6, "Airborne" },
{7, "Jump" },
{8, "WeaponReady" },
{9, "WeaponSwitch" },
{10, "WeaponPickup" },
{11, "WeaponDrop" },
{12, "Grenade" },
{13, "Dead" },
{14, "AnimatedMove" },
{15, "InteractWeaponPickup" },
{16, "InteractDevice" },
{17, "InteractLaunchObject" },
{18, "HardPing" },
{19, "Align" },
{20, "ShieldRaise" },
{21, "ActivateEquipment" },
{22, "PhysicsImpulse" },
{23, "DeathPing" },
{24, "MediumPing" },
{25, "SoftPing" },
{26, "ScriptedSequence" },
{27, "CustomAnimation" },
{28, "DeflectProjectile" },
{29, "VehicleEnter" },
{30, "VehicleExit" },
{31, "Vehicle" },
{32, "Brace" },
{33, "WeaponDraw" },
{34, "WeaponStow" },
{35, "HardStop" },
{36, "Hoist" },
{37, "PreCombatPointActivity" },
{38, "Stunned" },
{39, "ObstacleSmash" },
{40, "WeaponVent" },
{41, "SoftPingDefenseScreen" },
{42, "ThrowEquipment" },
{43, "Hijack" },
{44, "Kamikaze" },
{45, "CloseQuartersDefenseBlast" },
{46, "Search" },
{47, "SearchFound" },
{48, "Surprise" },
{49, "Hover" },
{50, "Alert" },
{51, "AlertCallout" },
{52, "WeaponFidget" },
{53, "WeaponReload" },
{54, "FullbodyAnimation" },
{55, "ActivateCamo" },
{56, "TradeWeapon" },
{57, "Flying" },
{58, "MultiTargetTrackedAttack" },
{59, "Berserk" },
{60, "LeapWindup" },
{61, "AnimatedTell" },
{62, "TeleportArrive" },
{63, "JinkFire" },
{64, "DialogueAnimation" },
{65, "Swoop" },
{66, "AirborneMelee" },
{67, "Land" },
{68, "Hunker" },
{69, "Launching" },
{70, "PreAndPostFire" },
{71, "AnimatedPosture" },
{72, "Boarding" },
}}},
{ 0x8, new C{ T="mmr3Hash", N = "Animation Token Override" }},
{ 0xC, new C{ T="Float", N = "Time playing animation" }},
{ 0x10, new C{ T="Float", N = "Cooldown time" }},
{ 0x14, new C{ T="mmr3Hash", N = "composition name" }},
{ 0x18, new C{ T="TagRef", N = "composition definition" }},
{ 0x34, new C{ T="Float", N = "Max distance agents will consider this opp from" }},
{ 0x38, new C{ T="Tagblock", N = "Ambient meta labels", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "meta label" }},
}, S=4}},
{ 0x4C, new C{ T="Tagblock", N = "Exclusion meta labels", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "meta label" }},
}, S=4}},
{ 0x60, new C{ T="Float", N = "Min Danger to Activate" }},
{ 0x64, new C{ T="Float", N = "Max Danger to Activate" }},
{ 0x68, new C{ T="Float", N = "Abort Danger Level" }},
{ 0x6C, new C{ T="Float", N = "Chance Per Second" }},
{ 0x70, new C{ T="Float", N = "Min Enemy Target Distance" }},
{ 0x74, new C{ T="Float", N = "Max Enemy Target Distance" }},
{ 0x78, new C{ T="Float", N = "Max Height Difference" }},
}, S=124}},
}, S=24}},
{ 0x54416750, new C{ T="Comment", N = "Motion tracker blips" }},
{ 0x544, new EnumGroup { A=1, N="blip sprite index override", STR = new Dictionary<int, string>()
{
{0, "Self" },
{1, "Vehicle Ally" },
{2, "Vehicle Enemy" },
{3, "Vehicle Ally Gutter" },
{4, "Vehicle Enemy Gutter" },
{5, "Vehicle Ally Vertical" },
{6, "Vehicle Enemy Vertical" },
{7, "Vehicle Ally Gutter Vertical" },
{8, "Vehicle Enemy Gutter Vertical" },
{9, "Human Ally" },
{10, "Human Enemy" },
{11, "Human Ally Gutter" },
{12, "Human Enemy Gutter" },
{13, "Human Ally Vertical" },
{14, "Human Enemy Vertical" },
{15, "Human Ally Gutter Vertical" },
{16, "Human Enemy Gutter Vertical" },
{17, "Major AI Ally" },
{18, "Major AI Enemy" },
{19, "Major AI Ally Gutter" },
{20, "Major AI Enemy Gutter" },
{21, "Major AI Ally Vertical" },
{22, "Major AI Enemy Vertical" },
{23, "Major AI Ally Gutter Vertical" },
{24, "Major AI Enemy Gutter Vertical" },
{25, "Minor AI Ally" },
{26, "Minor AI Enemy" },
{27, "Minor AI Ally Vertical" },
{28, "Minor AI Enemy Vertical" },
{29, "Unnamed sprite index29" },
{30, "Unnamed sprite index30" },
{31, "Unnamed sprite index31" },
}}},
{ 0x545, new C{ T="Comment", N = "generated_pad9a3f" }},
{ 0x54816751, new C{ T="Comment", N = "" }},
{ 0x548, new C{ T="Tagblock", N = "data driven scripted sequence actions definitions.", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="String", N = "Prototype trigger lua function name" }},
{ 0x20, new C{ T="Tagblock", N = "Component Actions", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="String", N = "Request action lua function name" }},
{ 0x20, new C{ T="String", N = "Go to next action condition lua function name" }},
}, S=64}},
}, S=52}},
{ 0x55C, new C{ T="TagRef", N = "Animation Node Graph" }},
{ 0x57816752, new C{ T="Comment", N = "Anim Set Table" }},
{ 0x578, new C{ T="Tagblock", N = "channels", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "channel" }},
}, S=4}},
{ 0x58C, new C{ T="Tagblock", N = "table entries", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "token" }},
{ 0x4, new C{ T="TagRef", N = "animset" }},
{ 0x20, new C{ T="TagRef", N = "Runtime animset (used by code only)" }},
{ 0x3C, new C{ T="Byte", N = "is default" }},
{ 0x3D, new C{ T="Byte", N = "generated_padca09" }},
{ 0x3E, new FlagGroup { A=2, N="flags", STR = new Dictionary<int, string>()
{
{0, "is default" },
}}},
{ 0x40, new C{ T="Tagblock", N = "Variants", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "Variant" }},
}, S=4}},
}, S=84}},
{ 0x5A0, new C{ T="Float", N = "Inertialization Duration" }},
{ 0x5A4, new C{ T="Float", N = "Pill Offset Blend Rate For Ground IK" }},
{ 0x5A8, new C{ T="Float", N = "Stationary Root Offset Limit.min" }},
{ 0x5AC, new C{ T="Float", N = "Stationary Root Offset Limit.max" }},
{ 0x5B0, new C{ T="Float", N = "Moving Root Offset Limit.min" }},
{ 0x5B4, new C{ T="Float", N = "Moving Root Offset Limit.max" }},
{ 0x5B8, new C{ T="Float", N = "Ground IK marker above ground tolerance" }},
{ 0x5BC, new C{ T="Float", N = "Ground Probe Start Position Height Scale for Ground IK" }},
{ 0x5C0, new C{ T="Float", N = "Ground Probe Additional Height Distance" }},
{ 0x5C4, new C{ T="Unmapped", N = "Anim Set Nodegraph Metadata" }},
{ 0x5DC16753, new C{ T="Comment", N = "Root Bone Correction Settings" }},
{ 0x5DC16754, new C{ T="Comment", N = "RootBoneCorrectionSettings" }},
{ 0x5DC, new FlagGroup { A=1, N="flags", STR = new Dictionary<int, string>()
{
{0, "AnimEventFunctionOverrideCorrectionType" },
}}},
{ 0x5DD, new EnumGroup { A=1, N="Root Bone Correction Type", STR = new Dictionary<int, string>()
{
{0, "Off" },
{1, "FractionOfAnimationDuration" },
{2, "StaticDuration" },
}}},
{ 0x5DE, new C{ T="2Byte", N = "generated_pad0a63" }},
{ 0x5E0, new C{ T="Float", N = "Root Bone Correction Duration" }},
{ 0x5E4, new EnumGroup { A=1, N="Root Bone Correction Bone Index", STR = new Dictionary<int, string>()
{
{0, "RootBone" },
{1, "Pelvis" },
}}},
{ 0x5E5, new C{ T="Comment", N = "generated_padbdae" }},
{ 0x5E816755, new C{ T="Comment", N = "" }},
{ 0x5E8, new C{ T="Tagblock", N = "Leg Grounding Settings", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "Marker" }},
{ 0x4, new C{ T="Float", N = "Planted Threshold" }},
{ 0x8, new C{ T="Float", N = "Lifted Threshold" }},
{ 0xC, new C{ T="Float", N = "Lifted Minimum Time" }},
{ 0x10, new EnumGroup { A=2, N="Event", STR = new Dictionary<int, string>()
{
{0, "none" },
{1, "primary_keyframe" },
{2, "secondary_keyframe" },
{3, "tertiary_keyframe" },
{4, "left_foot" },
{5, "right_foot" },
{6, "allow_interruption" },
{7, "do_not_allow_interruption" },
{8, "both_feet_shuffle" },
{9, "body_impact" },
{10, "left_foot_lock" },
{11, "left_foot_unlock" },
{12, "right_foot_lock" },
{13, "right_foot_unlock" },
{14, "blend_range_marker" },
{15, "stride_expansion" },
{16, "stride_contraction" },
{17, "ragdoll_keyframe" },
{18, "drop_weapon_keyframe" },
{19, "match_a" },
{20, "match_b" },
{21, "match_c" },
{22, "match_d" },
{23, "jetpack_closed" },
{24, "jetpack_open" },
{25, "sound_event" },
{26, "effect_event" },
{27, "left_hand" },
{28, "right_hand" },
{29, "grenade" },
{30, "melee" },
{31, "interact_device" },
{32, "shield_raise" },
{33, "activate_equipment" },
{34, "aoe_attack" },
{35, "equipment" },
{36, "jink_fire" },
{37, "align_to_target" },
{38, "block_exiting" },
{39, "set_interruptable" },
{40, "disable_shooting" },
{41, "re_enable_shooting" },
{42, "skip_crouch_transition" },
{43, "start_bamf" },
{44, "end_bamf" },
{45, "hide" },
{46, "frame_attachment_objects_show" },
{47, "frame_attachment_objects_hide" },
{48, "creature_physics_mode_change" },
{49, "melee_range" },
{50, "frame_attachment_switch_to_secondary_parent_marker" },
{51, "frame_attachment_switch_to_default_parent_marker" },
{52, "allow_sprint_interrupt" },
}}},
{ 0x12, new C{ T="2Byte", N = "generated_paddc16" }},
}, S=20}},
{ 0x5FC16756, new C{ T="Comment", N = "Wrist Break Fixup" }},
{ 0x5FC, new C{ T="Float", N = "Wrist Break Interp Time" }},
{ 0x600, new C{ T="Float", N = "Wrist Break Angle Limit" }},
{ 0x604, new C{ T="Float", N = "Wrist Break Fixup Scale" }},
{ 0x60816757, new C{ T="Comment", N = "" }},
{ 0x608, new FlagGroup { A=1, N="Flags", STR = new Dictionary<int, string>()
{
{0, "Use Procedural Footstep Events" },
{1, "Use Wrist Break IK Fixup" },
}}},
{ 0x609, new C{ T="Comment", N = "generated_pad6f99" }},
{ 0x60C16758, new C{ T="Comment", N = "Object Node Graph" }},
{ 0x60C, new C{ T="Tagblock", N = "Object Node Graphs", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "Name" }},
{ 0x4, new C{ T="TagRef", N = "Exported Node Graph" }},
{ 0x20, new FlagGroup { A=1, N="Flags", STR = new Dictionary<int, string>()
{
{0, "Runs on Server" },
{1, "Runs on Client" },
{2, "Start updating on the first frame" },
}}},
{ 0x21, new EnumGroup { A=1, N="Enable Node Graph", STR = new Dictionary<int, string>()
{
{0, "Default" },
{1, "Yes" },
{2, "No" },
}}},
{ 0x22, new C{ T="2Byte", N = "generated_pad8671" }},
}, S=36}},
{ 0x62016759, new C{ T="Comment", N = "" }},
{ 0x620, new C{ T="Tagblock", N = "parent animation matching", B = new Dictionary<long, C>
{
{ 0x016760, new C{ T="Comment", N = "ANIMATION REMAPPING" }},
{ 0x0, new C{ T="mmr3Hash", N = "animation on parent" }},
{ 0x4, new C{ T="mmr3Hash", N = "animation to play on object" }},
{ 0x8, new C{ T="mmr3Hash", N = "animation set to use with the child object's animation" }},
}, S=12}},
{ 0x63416761, new C{ T="Comment", N = "model variant switching" }},
{ 0x63416762, new C{ T="Comment", N = "MODEL VARIANT SWITCHING" }},
{ 0x634, new C{ T="mmr3Hash", N = "model variant switching function" }},
{ 0x638, new C{ T="Tagblock", N = "model variant switching table", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "function result range.min" }},
{ 0x4, new C{ T="Float", N = "function result range.max" }},
{ 0x8, new C{ T="mmr3Hash", N = "model variant name" }},
}, S=12}},
{ 0x64C16763, new C{ T="Comment", N = "" }},
{ 0x64C16764, new C{ T="Comment", N = "knockback" }},
{ 0x64C, new C{ T="Float", N = "knockback impulse scalar" }},
{ 0x65016765, new C{ T="Comment", N = "" }},
{ 0x65016766, new C{ T="Comment", N = "Ability Components" }},
{ 0x650, new C{ T="Tagblock", N = "location sensor", B = new Dictionary<long, C>
{
{ 0x016767, new C{ T="Comment", N = "Sensor Parameters" }},
{ 0x0, new FlagGroup { A=4, N="sensor flags", STR = new Dictionary<int, string>()
{
{0, "use proximity activation" },
{1, "use reveal duration inside detection radius" },
{2, "use order based reveal delays" },
{3, "don't reveal targets to the motion tracker" },
{4, "only play radius effect for owner" },
{5, "show player name instead of health" },
}}},
{ 0x4, new C{ T="Float", N = "ping frequency" }},
{ 0x8, new C{ T="Float", N = "ping radius" }},
{ 0xC, new C{ T="Float", N = "reveal duration" }},
{ 0x10, new C{ T="Float", N = "scanning duration" }},
{ 0x14, new C{ T="Float", N = "minimum delay between marks" }},
{ 0x18, new C{ T="Float", N = "delay per distance" }},
{ 0x1C16768, new C{ T="Comment", N = "" }},
{ 0x1C16769, new C{ T="Comment", N = "Sensor Visuals" }},
{ 0x1C, new C{ T="TagRef", N = "sensor radius effect" }},
{ 0x38, new C{ T="mmr3Hash", N = "sensor radius effect marker" }},
{ 0x3C, new C{ T="TagRef", N = "sensor ping effect" }},
{ 0x5816770, new C{ T="Comment", N = "" }},
{ 0x5816771, new C{ T="Comment", N = "Target Visuals" }},
{ 0x58, new C{ T="TagRef", N = "target outline" }},
{ 0x74, new C{ T="TagRef", N = "target visor ping effect" }},
{ 0x90, new C{ T="mmr3Hash", N = "target visor ping effect marker" }},
{ 0x9416772, new C{ T="Comment", N = "" }},
{ 0x9416773, new C{ T="Comment", N = "Navpoints" }},
{ 0x94, new C{ T="mmr3Hash", N = "sensor navpoint name" }},
{ 0x98, new C{ T="mmr3Hash", N = "sensor navpoint marker" }},
{ 0x9C, new C{ T="mmr3Hash", N = "target navpoint name" }},
{ 0xA0, new C{ T="mmr3Hash", N = "target navpoint marker" }},
{ 0xA416774, new C{ T="Comment", N = "" }},
}, S=164}},
{ 0x664, new C{ T="Tagblock", N = "shroud generator", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "outer radius" }},
{ 0x4, new C{ T="mmr3Hash", N = "edge effect marker" }},
{ 0x8, new C{ T="TagRef", N = "biped enter effect" }},
{ 0x24, new C{ T="TagRef", N = "biped inside effect" }},
{ 0x40, new C{ T="TagRef", N = "biped leave effect" }},
{ 0x5C16775, new C{ T="Comment", N = "Mapping function" }},
{ 0x5C16776, new C{ T="Comment", N = "inside shrouded mapping" }},
{ 0x5C16777, new C{ T="Comment", N = "" }},
{ 0x5C, new C{ T="Unmapped", N = "data" }},
{ 0x7416778, new C{ T="Comment", N = "" }},
{ 0x74, new C{ T="Float", N = "max distance inside for shroud" }},
{ 0x7816779, new C{ T="Comment", N = "Mapping function" }},
{ 0x7816780, new C{ T="Comment", N = "outside shrouded mapping" }},
{ 0x7816781, new C{ T="Comment", N = "" }},
{ 0x78, new C{ T="Unmapped", N = "data" }},
{ 0x9016782, new C{ T="Comment", N = "" }},
{ 0x90, new C{ T="Float", N = "max distance outside for shroud" }},
{ 0x9416783, new C{ T="Comment", N = "Blocker" }},
{ 0x94, new C{ T="TagRef", N = "blocker object" }},
{ 0xB0, new C{ T="mmr3Hash", N = "blocker attach marker" }},
{ 0xB4, new C{ T="mmr3Hash", N = "blocker attach child marker" }},
{ 0xB8, new C{ T="Float", N = "blocker scale" }},
{ 0xBC16784, new C{ T="Comment", N = "" }},
}, S=188}},
{ 0x67816785, new C{ T="Comment", N = "" }},
{ 0x678, new C{ T="Tagblock", N = "Power Component", B = new Dictionary<long, C>
{
{ 0x016786, new C{ T="Comment", N = "Power Component System" }},
{ 0x0, new C{ T="Tagblock", N = "power source configurations", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "name" }},
{ 0x4, new C{ T="Float", N = "capacity" }},
}, S=8}},
{ 0x14, new C{ T="Tagblock", N = "power sources", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "region name" }},
{ 0x4, new C{ T="4Byte", N = "runtime region index" }},
{ 0x816787, new C{ T="Comment", N = "Model Region Damage State Configurations" }},
{ 0x8, new C{ T="Tagblock", N = "state configurations", B = new Dictionary<long, C>
{
{ 0x0, new EnumGroup { A=2, N="region state", STR = new Dictionary<int, string>()
{
{0, "default" },
{1, "minor damage" },
{2, "medium damage" },
{3, "major damage" },
{4, "destroyed" },
}}},
{ 0x2, new C{ T="2Byte", N = "configuration" }},
}, S=4}},
}, S=28}},
{ 0x2816788, new C{ T="Comment", N = "communication node capacity" }},
{ 0x28, new C{ T="Tagblock", N = "communication node power sources", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="2Byte", N = "component" }},
}, S=2}},
{ 0x3C, new C{ T="mmr3Hash", N = "communication node power modifier id" }},
{ 0x4016789, new C{ T="Comment", N = "" }},
{ 0x4016790, new C{ T="Comment", N = "locomotion capacity" }},
{ 0x40, new C{ T="Tagblock", N = "locomotion power sources", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="2Byte", N = "component" }},
}, S=2}},
{ 0x54, new C{ T="mmr3Hash", N = "locomotion power modifier id" }},
{ 0x5816791, new C{ T="Comment", N = "locomotion power modifier" }},
{ 0x5816792, new C{ T="Comment", N = "locomotion power modifier" }},
{ 0x58, new C{ T="Float", N = "Base Value" }},
{ 0x5C, new C{ T="Float", N = "Value Bounds.min" }},
{ 0x60, new C{ T="Float", N = "Value Bounds.max" }},
{ 0x6416793, new C{ T="Comment", N = "" }},
{ 0x6416794, new C{ T="Comment", N = "weapon capacity" }},
{ 0x64, new C{ T="Tagblock", N = "weapon power sources", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="2Byte", N = "component" }},
}, S=2}},
{ 0x78, new C{ T="mmr3Hash", N = "weapon power modifier id" }},
{ 0x7C16795, new C{ T="Comment", N = "" }},
}, S=124}},
{ 0x68C, new C{ T="Tagblock", N = "self destruct handler", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Tagblock", N = "Self destruct sounds", B = new Dictionary<long, C>
{
{ 0x016796, new C{ T="Comment", N = "SELF DESTRUCTION SOUNDS" }},
{ 0x0, new C{ T="4Byte", N = "active damage section count" }},
{ 0x4, new C{ T="TagRef", N = "sound to play" }},
}, S=32}},
}, S=20}},
{ 0x6A0, new C{ T="Tagblock", N = "Indirect Lighting Component", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "Lightmap attachment bone" }},
}, S=4}},
{ 0x6B416797, new C{ T="Comment", N = "" }},
{ 0x6B4, new C{ T="4Byte", N = "generated_paddd0c" }},
{ 0x6B816798, new C{ T="Comment", N = "$$$ ITEM $$$" }},
{ 0x6B8, new FlagGroup { A=4, N="item flags", STR = new Dictionary<int, string>()
{
{0, "always maintains z up" },
{1, "blocks headshots" },
{2, "use ground scale for all unspecified attachments" },
{3, "fixup position upon detaching from parent" },
{4, "fixup position after attaching to parent" },
{5, "item considered high value" },
{6, "item requires a child to be a pickup item" },
{7, "override toss properties" },
{8, "use parent material for hit effects" },
{9, "kill on detonation" },
{10, "allow pickup during detonation countdown" },
{11, "item takes first over penetration hit" },
}}},
{ 0x6BC, new C{ T="2Byte", N = "OLD message index" }},
{ 0x6BE, new C{ T="2Byte", N = "sort order" }},
{ 0x6C0, new C{ T="Float", N = "OLD multiplayer on-ground scale" }},
{ 0x6C4, new C{ T="Float", N = "OLD campaign on-ground scale" }},
{ 0x6C816799, new C{ T="Comment", N = "NEW hud messages" }},
{ 0x6C8, new C{ T="mmr3Hash", N = "Pickup" }},
{ 0x6CC, new C{ T="mmr3Hash", N = "Sub Pickup" }},
{ 0x6D0, new C{ T="mmr3Hash", N = "Swap" }},
{ 0x6D4, new C{ T="mmr3Hash", N = "Sub Swap" }},
{ 0x6D8, new C{ T="mmr3Hash", N = "Pickup (dual)" }},
{ 0x6DC, new C{ T="mmr3Hash", N = "Swap (dual)" }},
{ 0x6E0, new C{ T="mmr3Hash", N = "Picked Up" }},
{ 0x6E4, new C{ T="mmr3Hash", N = "Switch-To" }},
{ 0x6E8, new C{ T="mmr3Hash", N = "Switch-To From AI" }},
{ 0x6EC, new C{ T="mmr3Hash", N = "Notify Empty" }},
{ 0x6F0, new C{ T="mmr3Hash", N = "Low Ammo" }},
{ 0x6F4, new C{ T="mmr3Hash", N = "Notify Overheated" }},
{ 0x6F8, new C{ T="mmr3Hash", N = "Heat Warning" }},
{ 0x6FC, new C{ T="4Byte", N = "damage sprite index" }},
{ 0x700, new C{ T="mmr3Hash", N = "pickup message" }},
{ 0x704, new C{ T="mmr3Hash", N = "sub pickup message" }},
{ 0x708, new C{ T="mmr3Hash", N = "swap message" }},
{ 0x70C, new C{ T="mmr3Hash", N = "sub swap message" }},
{ 0x710, new C{ T="mmr3Hash", N = "pickup message (dual)" }},
{ 0x714, new C{ T="mmr3Hash", N = "swap message (dual)" }},
{ 0x718, new C{ T="mmr3Hash", N = "picked up msg" }},
{ 0x71C, new C{ T="mmr3Hash", N = "switch-to msg" }},
{ 0x720, new C{ T="mmr3Hash", N = "switch-to from ai msg" }},
{ 0x724, new C{ T="mmr3Hash", N = "notify empty msg" }},
{ 0x728, new C{ T="mmr3Hash", N = "low ammo msg" }},
{ 0x72C, new C{ T="mmr3Hash", N = "notify overheated message" }},
{ 0x730, new C{ T="Tagblock", N = "variant HUD message overrides", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "variant name" }},
{ 0x416800, new C{ T="Comment", N = "Overrides" }},
{ 0x4, new C{ T="mmr3Hash", N = "Pickup" }},
{ 0x8, new C{ T="mmr3Hash", N = "Sub Pickup" }},
{ 0xC, new C{ T="mmr3Hash", N = "Swap" }},
{ 0x10, new C{ T="mmr3Hash", N = "Sub Swap" }},
{ 0x14, new C{ T="mmr3Hash", N = "Pickup (dual)" }},
{ 0x18, new C{ T="mmr3Hash", N = "Swap (dual)" }},
{ 0x1C, new C{ T="mmr3Hash", N = "Picked Up" }},
{ 0x20, new C{ T="mmr3Hash", N = "Switch-To" }},
{ 0x24, new C{ T="mmr3Hash", N = "Switch-To From AI" }},
{ 0x28, new C{ T="mmr3Hash", N = "Notify Empty" }},
{ 0x2C, new C{ T="mmr3Hash", N = "Low Ammo" }},
{ 0x30, new C{ T="mmr3Hash", N = "Notify Overheated" }},
{ 0x34, new C{ T="mmr3Hash", N = "Heat Warning" }},
{ 0x38, new C{ T="4Byte", N = "damage sprite index" }},
}, S=60}},
{ 0x744, new C{ T="Tagblock", N = "predicted bitmaps", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "bitmap" }},
}, S=28}},
{ 0x758, new C{ T="TagRef", N = "item detonation damage effect" }},
{ 0x774, new C{ T="Float", N = "detonation delay.min" }},
{ 0x778, new C{ T="Float", N = "detonation delay.max" }},
{ 0x77C, new C{ T="TagRef", N = "detonating effect" }},
{ 0x798, new C{ T="TagRef", N = "detonation effect" }},
{ 0x7B416801, new C{ T="Comment", N = "Item scale settings" }},
{ 0x7B4, new C{ T="Float", N = "ground scale" }},
{ 0x7B8, new C{ T="Float", N = "small unit (armed)" }},
{ 0x7BC, new C{ T="Float", N = "small unit (stowed)" }},
{ 0x7C0, new C{ T="Float", N = "medium unit (armed)" }},
{ 0x7C4, new C{ T="Float", N = "medium unit (stowed)" }},
{ 0x7C8, new C{ T="Float", N = "large unit (armed)" }},
{ 0x7CC, new C{ T="Float", N = "large unit (stowed)" }},
{ 0x7D0, new C{ T="Float", N = "huge unit (armed)" }},
{ 0x7D4, new C{ T="Float", N = "huge unit (stowed)" }},
{ 0x7D8, new C{ T="TagRef", N = "grounded friction settings" }},
{ 0x7F4, new C{ T="TagRef", N = "Tossed Override" }},
{ 0x81016802, new C{ T="Comment", N = "Override toss properties" }},
{ 0x810, new C{ T="Float", N = "toss angle" }},
{ 0x814, new C{ T="Float", N = "toss angle max elevation" }},
{ 0x818, new C{ T="Float", N = "toss angle min elevation" }},
{ 0x81C, new C{ T="Float", N = "toss velocity" }},
{ 0x820, new C{ T="Float", N = "toss rotational velocity min.X" }},
{ 0x824, new C{ T="Float", N = "toss rotational velocity min.Y" }},
{ 0x828, new C{ T="Float", N = "toss rotational velocity min.Z" }},
{ 0x82C, new C{ T="Float", N = "toss rotational velocity max.X" }},
{ 0x830, new C{ T="Float", N = "toss rotational velocity max.Y" }},
{ 0x834, new C{ T="Float", N = "toss rotational velocity max.Z" }},
{ 0x83816803, new C{ T="Comment", N = "Item throw settings" }},
{ 0x838, new C{ T="Float", N = "Item throw offset.X" }},
{ 0x83C, new C{ T="Float", N = "Item throw offset.Y" }},
{ 0x840, new C{ T="Float", N = "Item throw offset.Z" }},
{ 0x844, new C{ T="Float", N = "Item throw rotation offset.X" }},
{ 0x848, new C{ T="Float", N = "Item throw rotation offset.Y" }},
{ 0x84C, new C{ T="Float", N = "Item throw rotation offset.Z" }},
{ 0x85016804, new C{ T="Comment", N = "" }},
{ 0x85016805, new C{ T="Comment", N = "" }},
{ 0x85016806, new C{ T="Comment", N = "$$$ WEAPON $$$" }},
{ 0x850, new C{ T="TagRef", N = "parent" }},
{ 0x86C16807, new C{ T="Comment", N = "" }},
{ 0x86C, new FlagGroup { A=4, N="flags", STR = new Dictionary<int, string>()
{
{0, "gunkick disable roll" },
{1, "mutually exclusive triggers" },
{2, "attacks automatically on bump" },
{3, "must be readied" },
{4, "doesn't count toward maximum" },
{5, "aim assists only when zoomed" },
{6, "prevents grenade throwing" },
{7, "must be picked up" },
{8, "holds triggers when dropped" },
{9, "prevents melee attack" },
{10, "detonates when dropped" },
{11, "cannot fire at maximum age" },
{12, "secondary trigger overrides grenades" },
{13, "support weapon" },
{14, "hide FP weapon when in iron sights" },
{15, "AIs use weapon melee damage" },
{16, "allows binoculars" },
{17, "loop fp firing animation" },
{18, "prevents crouching" },
{19, "use empty melee on empty" },
{20, "uses 3rd person camera" },
{21, "can be dual wielded" },
{22, "can only be dual wielded" },
{23, "melee only" },
{24, "cant fire if parent dead" },
{25, "weapon ages with each kill" },
{26, "allows unaimed lunge" },
{27, "cannot be used by player" },
{28, "hold fp firing animation" },
{29, "strict deviation angle" },
{30, "notifies target units" },
{31, "does accelerate (moves due to explosions)" },
}}},
{ 0x870, new FlagGroup { A=4, N="secondary flags", STR = new Dictionary<int, string>()
{
{0, "magnetizes only when zoomed" },
{1, "force enable equipment tossing" },
{2, "non-lunge melee dash disabled" },
{3, "don't drop on dual wield melee" },
{4, "is equipment special weapon" },
{5, "uses ghost reticle" },
{6, "never overheats" },
{7, "force tracers to come from weapon barrel" },
{8, "cannot fire during emp" },
{9, "weapon can headshot" },
{10, "AI cannot fire tracking projectiles" },
{11, "force match owner animation" },
{12, "weapon unzooms on damage" },
{13, "do not drop on equipment activation" },
{14, "weapon can not be dropped" },
{15, "disable function overlays during reload" },
{16, "throw weapon on primary fire" },
{17, "do not drop 'must be readied' on primary trigger" },
{18, "delete on drop" },
{19, "allow melee when using device" },
{20, "do not lower weapon when using device" },
{21, "cannot fire while zooming" },
{22, "weapon ages when damage is inflicted" },
{23, "apply gunner armor mod abilites" },
{24, "weapon drops further away" },
{25, "disable lunge" },
{26, "suppresses sprint" },
{27, "hide pickup prompt unless special pickup priority" },
{28, "weapon ignores player_pickup_allowed trait" },
{29, "targetable" },
{30, "drop on pickup" },
{31, "don't drop on grenade throw" },
}}},
{ 0x874, new FlagGroup { A=1, N="suppression flags", STR = new Dictionary<int, string>()
{
{0, "prevents crouching while in ADS" },
{1, "prevents jumping while in ADS" },
{2, "prevents ADS while crouching" },
{3, "prevents ADS while mid-air" },
{4, "prevents equipment usage" },
}}},
{ 0x875, new C{ T="Comment", N = "generated_paddf4e" }},
{ 0x878, new FlagGroup { A=4, N="animation flags", STR = new Dictionary<int, string>()
{
{0, "No idle to precision idle transition while evading" },
{1, "No idle to precision idle transition while firing" },
{2, "No idle to precision idle transition while reloading" },
{3, "Firing animations are blocked during ADS transitions" },
}}},
{ 0x87C, new EnumGroup { A=1, N="overcharge behavior", STR = new Dictionary<int, string>()
{
{0, "None" },
{1, "Standard" },
{2, "Burst" },
}}},
{ 0x87D, new C{ T="Comment", N = "generated_pad2c03" }},
{ 0x880, new C{ T="mmr3Hash", N = "unused label" }},
{ 0x884, new C{ T="Float", N = "turn on time" }},
{ 0x888, new C{ T="Float", N = "ready time" }},
{ 0x88C, new C{ T="TagRef", N = "ready effect" }},
{ 0x8A8, new C{ T="TagRef", N = "ready damage effect" }},
{ 0x8C416808, new C{ T="Comment", N = "heat" }},
{ 0x8C4, new C{ T="Float", N = "heat recovery threshold" }},
{ 0x8C8, new C{ T="Float", N = "overheated threshold" }},
{ 0x8CC, new C{ T="Float", N = "heat detonation threshold" }},
{ 0x8D0, new C{ T="Float", N = "heat detonation fraction" }},
{ 0x8D4, new C{ T="Float", N = "heat loss per second" }},
{ 0x8D8, new C{ T="mmr3Hash", N = "heat loss" }},
{ 0x8DC, new C{ T="mmr3Hash", N = "heat loss venting" }},
{ 0x8E0, new C{ T="Float", N = "heat venting time" }},
{ 0x8E4, new C{ T="Float", N = "heat venting exit heat" }},
{ 0x8E8, new C{ T="Float", N = "heat illumination" }},
{ 0x8EC, new C{ T="Float", N = "heat warning threshold" }},
{ 0x8F0, new C{ T="Float", N = "overheated heat loss per second" }},
{ 0x8F4, new C{ T="mmr3Hash", N = "overheated heat loss" }},
{ 0x8F8, new C{ T="Float", N = "overheated instantaneous age" }},
{ 0x8FC, new C{ T="Float", N = "overheated age per second" }},
{ 0x90016809, new C{ T="Comment", N = "heat base properties" }},
{ 0x90016810, new C{ T="Comment", N = "heat loss per second scale" }},
{ 0x90016811, new C{ T="Comment", N = "heat loss per second scale" }},
{ 0x900, new C{ T="Float", N = "Base Value" }},
{ 0x904, new C{ T="Float", N = "Value Bounds.min" }},
{ 0x908, new C{ T="Float", N = "Value Bounds.max" }},
{ 0x90C16812, new C{ T="Comment", N = "overheated heat loss per second scale" }},
{ 0x90C16813, new C{ T="Comment", N = "overheated heat loss per second scale" }},
{ 0x90C, new C{ T="Float", N = "Base Value" }},
{ 0x910, new C{ T="Float", N = "Value Bounds.min" }},
{ 0x914, new C{ T="Float", N = "Value Bounds.max" }},
{ 0x91816814, new C{ T="Comment", N = "heat generated per round scale" }},
{ 0x91816815, new C{ T="Comment", N = "heat generated per round scale" }},
{ 0x918, new C{ T="Float", N = "Base Value" }},
{ 0x91C, new C{ T="Float", N = "Value Bounds.min" }},
{ 0x920, new C{ T="Float", N = "Value Bounds.max" }},
{ 0x924, new C{ T="TagRef", N = "overheated" }},
{ 0x940, new C{ T="TagRef", N = "overheated damage effect" }},
{ 0x95C, new C{ T="TagRef", N = "detonation" }},
{ 0x978, new C{ T="TagRef", N = "detonation damage effect" }},
{ 0x994, new C{ T="Tagblock", N = "melee damage parameters", B = new Dictionary<long, C>
{
{ 0x016816, new C{ T="Comment", N = "melee damage parameters" }},
{ 0x0, new C{ T="Unmapped", N = "damage pyramid angles" }},
{ 0xC, new C{ T="Float", N = "damage pyramid depth" }},
{ 0x10, new C{ T="Float", N = "maximum lunge range" }},
{ 0x14, new C{ T="Float", N = "damage lunge explosive depth" }},
{ 0x18, new C{ T="Float", N = "runtime damage lunge explosive fraction" }},
{ 0x1C, new C{ T="TagRef", N = "melee damage" }},
{ 0x38, new C{ T="TagRef", N = "melee response" }},
{ 0x54, new C{ T="TagRef", N = "lunge melee damage" }},
{ 0x70, new C{ T="TagRef", N = "lunge melee response" }},
{ 0x8C, new C{ T="TagRef", N = "empty melee damage" }},
{ 0xA8, new C{ T="TagRef", N = "empty melee response" }},
{ 0xC4, new C{ T="TagRef", N = "clang melee damage" }},
{ 0xE0, new C{ T="TagRef", N = "clang melee response" }},
{ 0xFC, new C{ T="TagRef", N = "clang melee against melee weapon damage" }},
{ 0x118, new C{ T="TagRef", N = "clang melee against melee weapon damage response" }},
{ 0x134, new C{ T="TagRef", N = "lunge melee explosive damage" }},
{ 0x150, new C{ T="TagRef", N = "melee attack effect" }},
{ 0x16C, new C{ T="TagRef", N = "biped melee hit effect" }},
}, S=392}},
{ 0x9A8, new C{ T="TagRef", N = "clang effect" }},
{ 0x9C416817, new C{ T="Comment", N = "zoom" }},
{ 0x9C4, new C{ T="2Byte", N = "magnification levels" }},
{ 0x9C6, new C{ T="2Byte", N = "generated_pad78b8" }},
{ 0x9C8, new C{ T="Float", N = "magnification range.min" }},
{ 0x9CC, new C{ T="Float", N = "magnification range.max" }},
{ 0x9D0, new C{ T="Unmapped", N = "zoom effect ticks" }},
{ 0x9D1, new C{ T="Comment", N = "generated_pad5fc5" }},
{ 0x9D4, new C{ T="TagRef", N = "zoom effect" }},
{ 0x9F016818, new C{ T="Comment", N = "aim assist deprecated" }},
{ 0x9F0, new C{ T="Tagblock", N = "aim assist modes", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=1, N="flags", STR = new Dictionary<int, string>()
{
{0, "do not scale for magnification" },
{1, "enable friendly aim assist in hipfire" },
{2, "enable friendly aim assist in ADS" },
{3, "disable enemy aim assist in hipfire" },
{4, "disable enemy aim assist in ADS" },
}}},
{ 0x1, new C{ T="Comment", N = "generated_padf30a" }},
{ 0x4, new C{ T="Float", N = "autoaim angle" }},
{ 0x8, new C{ T="Float", N = "autoaim range" }},
{ 0xC, new C{ T="Float", N = "autoaim falloff range" }},
{ 0x10, new C{ T="Float", N = "autoaim near falloff range" }},
{ 0x14, new C{ T="Float", N = "magnetism angle" }},
{ 0x18, new C{ T="Float", N = "magnetism range" }},
{ 0x1C, new C{ T="Float", N = "magnetism falloff range" }},
{ 0x20, new C{ T="Float", N = "magnetism near falloff range" }},
{ 0x24, new C{ T="Float", N = "deviation angle" }},
}, S=40}},
{ 0xA0416819, new C{ T="Comment", N = "" }},
{ 0xA0416820, new C{ T="Comment", N = "aim assist" }},
{ 0xA0416821, new C{ T="Comment", N = "aim assist" }},
{ 0xA04, new FlagGroup { A=1, N="flags", STR = new Dictionary<int, string>()
{
{0, "do not scale for magnification" },
{1, "enable friendly aim assist in hipfire" },
{2, "enable friendly aim assist in ADS" },
{3, "disable enemy aim assist in hipfire" },
{4, "disable enemy aim assist in ADS" },
}}},
{ 0xA05, new C{ T="Comment", N = "generated_pad01dc" }},
{ 0xA0816822, new C{ T="Comment", N = "autoaim angle" }},
{ 0xA0816823, new C{ T="Comment", N = "autoaim angle" }},
{ 0xA08, new C{ T="Float", N = "Base Value" }},
{ 0xA0C, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xA10, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xA1416824, new C{ T="Comment", N = "prioritization angle" }},
{ 0xA1416825, new C{ T="Comment", N = "prioritization angle" }},
{ 0xA14, new C{ T="Float", N = "Base Value" }},
{ 0xA18, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xA1C, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xA2016826, new C{ T="Comment", N = "autoaim range" }},
{ 0xA2016827, new C{ T="Comment", N = "autoaim range" }},
{ 0xA20, new C{ T="Float", N = "Base Value" }},
{ 0xA24, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xA28, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xA2C16828, new C{ T="Comment", N = "autoaim falloff range" }},
{ 0xA2C16829, new C{ T="Comment", N = "autoaim falloff range" }},
{ 0xA2C, new C{ T="Float", N = "Base Value" }},
{ 0xA30, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xA34, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xA3816830, new C{ T="Comment", N = "autoaim near falloff range" }},
{ 0xA3816831, new C{ T="Comment", N = "autoaim near falloff range" }},
{ 0xA38, new C{ T="Float", N = "Base Value" }},
{ 0xA3C, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xA40, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xA4416832, new C{ T="Comment", N = "magnetism angle" }},
{ 0xA4416833, new C{ T="Comment", N = "magnetism angle" }},
{ 0xA44, new C{ T="Float", N = "Base Value" }},
{ 0xA48, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xA4C, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xA5016834, new C{ T="Comment", N = "magnetism range" }},
{ 0xA5016835, new C{ T="Comment", N = "magnetism range" }},
{ 0xA50, new C{ T="Float", N = "Base Value" }},
{ 0xA54, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xA58, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xA5C16836, new C{ T="Comment", N = "magnetism falloff range" }},
{ 0xA5C16837, new C{ T="Comment", N = "magnetism falloff range" }},
{ 0xA5C, new C{ T="Float", N = "Base Value" }},
{ 0xA60, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xA64, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xA6816838, new C{ T="Comment", N = "magnetism near falloff range" }},
{ 0xA6816839, new C{ T="Comment", N = "magnetism near falloff range" }},
{ 0xA68, new C{ T="Float", N = "Base Value" }},
{ 0xA6C, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xA70, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xA7416840, new C{ T="Comment", N = "deviation angle" }},
{ 0xA7416841, new C{ T="Comment", N = "deviation angle" }},
{ 0xA74, new C{ T="Float", N = "Base Value" }},
{ 0xA78, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xA7C, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xA8016842, new C{ T="Comment", N = "" }},
{ 0xA80, new C{ T="Tagblock", N = "target tracking", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=1, N="target tracking flags", STR = new Dictionary<int, string>()
{
{0, "only enable when aimed down sight" },
{1, "never lose target lock" },
{2, "only enable when in alt fire" },
}}},
{ 0x1, new C{ T="Comment", N = "generated_pada390" }},
{ 0x4, new C{ T="Tagblock", N = "tracking types", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "tracking type" }},
}, S=4}},
{ 0x18, new C{ T="Float", N = "acquire time" }},
{ 0x1C, new C{ T="Float", N = "grace time" }},
{ 0x20, new C{ T="Float", N = "decay time" }},
{ 0x24, new C{ T="Byte", N = "max target locks" }},
{ 0x25, new C{ T="Comment", N = "generated_padbd71" }},
{ 0x28, new C{ T="TagRef", N = "tracking sound" }},
{ 0x44, new C{ T="TagRef", N = "locked sound" }},
}, S=96}},
{ 0xA94, new C{ T="Tagblock", N = "laser guidance", B = new Dictionary<long, C>
{
{ 0x0, new EnumGroup { A=1, N="laser guidance activation", STR = new Dictionary<int, string>()
{
{0, "Ads" },
}}},
}, S=1}},
{ 0xAA816843, new C{ T="Comment", N = "ballistics" }},
{ 0xAA8, new C{ T="Float", N = "ballistic arcing firing bounds.min" }},
{ 0xAAC, new C{ T="Float", N = "ballistic arcing firing bounds.max" }},
{ 0xAB0, new C{ T="Float", N = "ballistic arcing fraction bounds.min" }},
{ 0xAB4, new C{ T="Float", N = "ballistic arcing fraction bounds.max" }},
{ 0xAB816844, new C{ T="Comment", N = "movement" }},
{ 0xAB8, new EnumGroup { A=2, N="movement penalized", STR = new Dictionary<int, string>()
{
{0, "always" },
{1, "when zoomed" },
{2, "when zoomed or reloading" },
}}},
{ 0xABA, new C{ T="2Byte", N = "generated_padac7a" }},
{ 0xABC, new C{ T="Float", N = "forward movement penalty" }},
{ 0xAC0, new C{ T="Float", N = "sideways movement penalty" }},
{ 0xAC416845, new C{ T="Comment", N = "movement penalty reloading" }},
{ 0xAC416846, new C{ T="Comment", N = "movement penalty - reloading" }},
{ 0xAC4, new C{ T="Float", N = "forward movement penalty" }},
{ 0xAC8, new C{ T="Float", N = "sideways movement penalty" }},
{ 0xACC16847, new C{ T="Comment", N = "" }},
{ 0xACC16848, new C{ T="Comment", N = "movement penalty zoom" }},
{ 0xACC16849, new C{ T="Comment", N = "movement penalty - zoom" }},
{ 0xACC, new C{ T="Float", N = "forward movement penalty" }},
{ 0xAD0, new C{ T="Float", N = "sideways movement penalty" }},
{ 0xAD416850, new C{ T="Comment", N = "" }},
{ 0xAD416851, new C{ T="Comment", N = "movement penalty other" }},
{ 0xAD416852, new C{ T="Comment", N = "movement penalty - other" }},
{ 0xAD4, new C{ T="Float", N = "forward movement penalty" }},
{ 0xAD8, new C{ T="Float", N = "sideways movement penalty" }},
{ 0xADC16853, new C{ T="Comment", N = "" }},
{ 0xADC16854, new C{ T="Comment", N = "Aiming" }},
{ 0xADC, new C{ T="Float", N = "Maximum pitch rate" }},
{ 0xAE016855, new C{ T="Comment", N = "AI targeting parameters" }},
{ 0xAE0, new C{ T="Float", N = "AI scariness" }},
{ 0xAE4, new C{ T="Float", N = "Bot desirability" }},
{ 0xAE816856, new C{ T="Comment", N = "miscellaneous" }},
{ 0xAE8, new C{ T="Float", N = "weapon power-on time" }},
{ 0xAEC, new C{ T="Float", N = "weapon power-off time" }},
{ 0xAF0, new C{ T="TagRef", N = "weapon power-on effect" }},
{ 0xB0C, new C{ T="TagRef", N = "weapon power-off effect" }},
{ 0xB28, new C{ T="Float", N = "age heat recovery penalty" }},
{ 0xB2C, new C{ T="Float", N = "age rate of fire penalty" }},
{ 0xB30, new C{ T="Float", N = "age misfire start" }},
{ 0xB34, new C{ T="Float", N = "age misfire chance" }},
{ 0xB38, new EnumGroup { A=2, N="age-based ammo refill type", STR = new Dictionary<int, string>()
{
{0, "None" },
{1, "Kinetic" },
{2, "Plasma" },
{3, "Hard light" },
{4, "Shock" },
{5, "Power weapon" },
}}},
{ 0xB3A, new C{ T="2Byte", N = "generated_padf92f" }},
{ 0xB3C, new C{ T="Float", N = "active camo ding" }},
{ 0xB40, new C{ T="Float", N = "AI Active Camo Scaling" }},
{ 0xB44, new C{ T="mmr3Hash", N = "handle node" }},
{ 0xB4816857, new C{ T="Comment", N = "weapon labels" }},
{ 0xB48, new C{ T="String", N = "weapon class" }},
{ 0xB68, new C{ T="mmr3Hash", N = "Weapon Class String ID" }},
{ 0xB6C, new C{ T="Tagblock", N = "weapon class override", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "unit markup name" }},
{ 0x4, new C{ T="String", N = "override weapon class" }},
{ 0x24, new C{ T="mmr3Hash", N = "Override Weapon Class String ID" }},
}, S=40}},
{ 0xB80, new C{ T="mmr3Hash", N = "weapon name" }},
{ 0xB8416858, new C{ T="Comment", N = "first person weapon group" }},
{ 0xB84, new EnumGroup { A=2, N="first person weapon group", STR = new Dictionary<int, string>()
{
{0, "Undefined" },
{1, "Melee" },
{2, "Pistols" },
{3, "Rifles" },
{4, "Heavy" },
}}},
{ 0xB86, new C{ T="2Byte", N = "generated_pad45e4" }},
{ 0xB88, new C{ T="Tagblock", N = "first person weapon offset restricted bounds", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "Depth Offset Restricted Bounds.min" }},
{ 0x4, new C{ T="Float", N = "Depth Offset Restricted Bounds.max" }},
{ 0x8, new C{ T="Float", N = "Horizontal Offset Restricted Bounds.min" }},
{ 0xC, new C{ T="Float", N = "Horizontal Offset Restricted Bounds.max" }},
{ 0x10, new C{ T="Float", N = "Vertical Offset Restricted Bounds.min" }},
{ 0x14, new C{ T="Float", N = "Vertical Offset Restricted Bounds.max" }},
{ 0x18, new C{ T="Float", N = "Minimum Computed Offset Extents.X" }},
{ 0x1C, new C{ T="Float", N = "Minimum Computed Offset Extents.Y" }},
{ 0x20, new C{ T="Float", N = "Minimum Computed Offset Extents.Z" }},
{ 0x24, new C{ T="Float", N = "Maximum Computed Offset Extents.X" }},
{ 0x28, new C{ T="Float", N = "Maximum Computed Offset Extents.Y" }},
{ 0x2C, new C{ T="Float", N = "Maximum Computed Offset Extents.Z" }},
}, S=48}},
{ 0xB9C16859, new C{ T="Comment", N = "more miscellaneous" }},
{ 0xB9C, new EnumGroup { A=2, N="weapon type", STR = new Dictionary<int, string>()
{
{0, "undefined" },
{1, "shotgun" },
{2, "needler" },
{3, "plasma pistol" },
{4, "plasma rifle" },
{5, "rocket launcher" },
{6, "energy blade" },
{7, "splaser" },
{8, "shield" },
{9, "wolverine quad" },
{10, "flak cannon" },
{11, "plasma launcher" },
{12, "laser designator" },
{13, "sticky detonator" },
{14, "cavalier polearm" },
}}},
{ 0xB9E, new C{ T="2Byte", N = "low ammo threshold" }},
{ 0xBA016860, new C{ T="Comment", N = "player interface" }},
{ 0xBA016861, new C{ T="Comment", N = "interface" }},
{ 0xBA0, new FlagGroup { A=1, N="ui flags", STR = new Dictionary<int, string>()
{
{0, "ignores ammo swapper component" },
{1, "displays ammo as percentage of max" },
{2, "hide ammo" },
{3, "always show ally nav point shield and health" },
{4, "Don�t animate bloom" },
{5, "Don�t animate Aim Assist" },
}}},
{ 0xBA1, new C{ T="Comment", N = "generated_pad6ebb" }},
{ 0xBA4, new C{ T="Tagblock", N = "first person", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "name" }},
{ 0x4, new C{ T="TagRef", N = "first person model" }},
{ 0x20, new C{ T="TagRef", N = "first person animations" }},
{ 0x3C, new C{ T="TagRef", N = "first person asset" }},
{ 0x58, new C{ T="TagRef", N = "first person animation asset" }},
{ 0x74, new C{ T="Float", N = "first person fov scale" }},
}, S=120}},
{ 0xBB816862, new C{ T="Comment", N = "ui" }},
{ 0xBB8, new C{ T="TagRef", N = "hip fire reticle screen reference" }},
{ 0xBD4, new C{ T="Float", N = "Bloom Diameter In Pixels.min" }},
{ 0xBD8, new C{ T="Float", N = "Bloom Diameter In Pixels.max" }},
{ 0xBDC, new C{ T="Float", N = "Aim Assist Diameter In Pixels.min" }},
{ 0xBE0, new C{ T="Float", N = "Aim Assist Diameter In Pixels.max" }},
{ 0xBE4, new C{ T="TagRef", N = "sight front screen reference" }},
{ 0xC00, new C{ T="TagRef", N = "sight back screen reference" }},
{ 0xC1C, new C{ T="Tagblock", N = "UI display info", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "name" }},
{ 0x4, new C{ T="mmr3Hash", N = "alt name " }},
{ 0x8, new C{ T="mmr3Hash", N = "description" }},
{ 0xC, new C{ T="mmr3Hash", N = "help text" }},
{ 0x10, new C{ T="mmr3Hash", N = "icon string id" }},
{ 0x14, new C{ T="TagRef", N = "sprite" }},
{ 0x30, new C{ T="4Byte", N = "sprite index" }},
{ 0x34, new C{ T="TagRef", N = "alt sprite" }},
{ 0x50, new C{ T="4Byte", N = "alt sprite index" }},
{ 0x54, new C{ T="4Byte", N = "damage sprite index" }},
{ 0x58, new C{ T="TagRef", N = "ui vehicle screen reference" }},
}, S=116}},
{ 0xC30, new C{ T="TagRef", N = "Ammo Ticker Bitmap Reference" }},
{ 0xC4C16863, new C{ T="Comment", N = "" }},
{ 0xC4C, new C{ T="Tagblock", N = "magazines", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="flags", STR = new Dictionary<int, string>()
{
{0, "wastes rounds when reloaded" },
{1, "every round must be chambered" },
{2, "magazine cannot change state while firing" },
{3, "allow overheated reload when empty" },
{4, "bottomless inventory" },
}}},
{ 0x4, new C{ T="2Byte", N = "rounds recharged" }},
{ 0x6, new C{ T="2Byte", N = "rounds total initial" }},
{ 0x8, new C{ T="2Byte", N = "rounds total maximum" }},
{ 0xA, new C{ T="2Byte", N = "rounds loaded maximum" }},
{ 0xC, new C{ T="2Byte", N = "runtime rounds inventory maximum" }},
{ 0xE, new EnumGroup { A=2, N="ammo refill type", STR = new Dictionary<int, string>()
{
{0, "None" },
{1, "Kinetic" },
{2, "Plasma" },
{3, "Hard light" },
{4, "Shock" },
{5, "Power weapon" },
}}},
{ 0x10, new C{ T="Float", N = "reload dialogue time" }},
{ 0x14, new C{ T="2Byte", N = "rounds reloaded" }},
{ 0x16, new C{ T="2Byte", N = "generated_padccf5" }},
{ 0x18, new C{ T="Float", N = "chamber time" }},
{ 0x1C, new C{ T="TagRef", N = "reloading effect" }},
{ 0x38, new C{ T="TagRef", N = "reloading damage effect" }},
{ 0x54, new C{ T="TagRef", N = "chambering effect" }},
{ 0x70, new C{ T="TagRef", N = "chambering damage effect" }},
{ 0x8C, new C{ T="Tagblock", N = "magazines", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="2Byte", N = "rounds" }},
{ 0x2, new C{ T="2Byte", N = "generated_padaca6" }},
{ 0x4, new C{ T="TagRef", N = "equipment" }},
}, S=32}},
}, S=160}},
{ 0xC60, new C{ T="TagRef", N = "alt-fire" }},
{ 0xC7C, new C{ T="Tagblock", N = "new triggers", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="flags", STR = new Dictionary<int, string>()
{
{0, "autofire single action only" },
{1, "maintain charge through actions" },
{2, "reset charge on melee" },
}}},
{ 0x4, new EnumGroup { A=2, N="input", STR = new Dictionary<int, string>()
{
{0, "right trigger" },
{1, "left trigger" },
{2, "ai only secondary" },
}}},
{ 0x6, new EnumGroup { A=2, N="behavior", STR = new Dictionary<int, string>()
{
{0, "spew" },
{1, "latch" },
{2, "latch-autofire" },
{3, "latch-tether" },
{4, "charge" },
{5, "latch-zoom" },
{6, "spew-charge" },
{7, "sword-charge" },
{8, "double-latch-tether" },
{9, "charge-with-magazine" },
}}},
{ 0x8, new C{ T="2Byte", N = "primary barrel" }},
{ 0xA, new C{ T="2Byte", N = "secondary barrel" }},
{ 0xC, new EnumGroup { A=2, N="prediction", STR = new Dictionary<int, string>()
{
{0, "none" },
{1, "spew" },
{2, "hold trigger if charging" },
}}},
{ 0xE16864, new C{ T="Comment", N = "ALT-FIRE" }},
{ 0xE, new EnumGroup { A=1, N="alt fire behavior", STR = new Dictionary<int, string>()
{
{0, "always enabled" },
{1, "enable in regular fire only" },
{2, "enable in alt fire only" },
{3, "switch barrels" },
}}},
{ 0xF, new C{ T="Byte", N = "generated_pad88ae" }},
{ 0x1016865, new C{ T="Comment", N = "autofire" }},
{ 0x1016866, new C{ T="Comment", N = "AUTOFIRE" }},
{ 0x10, new C{ T="Float", N = "autofire time" }},
{ 0x14, new C{ T="Float", N = "autofire throw" }},
{ 0x18, new EnumGroup { A=2, N="secondary action", STR = new Dictionary<int, string>()
{
{0, "fire" },
{1, "charge" },
{2, "fire other" },
}}},
{ 0x1A, new EnumGroup { A=2, N="primary action", STR = new Dictionary<int, string>()
{
{0, "fire" },
{1, "charge" },
{2, "fire other" },
}}},
{ 0x1C16867, new C{ T="Comment", N = "charging" }},
{ 0x1C16868, new C{ T="Comment", N = "CHARGING" }},
{ 0x1C, new FlagGroup { A=2, N="flags", STR = new Dictionary<int, string>()
{
{0, "can fire spew fraction from partial charge" },
{1, "limit to current rounds loaded" },
{2, "Wont charge unless tracked target is valid" },
{3, "disallow fire from partial charge" },
{4, "melee dash on releasing charge" },
{5, "wait for idle magazines" },
{6, "do not charge if the barrel cannot fire" },
{7, "do not charge if not enough ammo available to fire" },
{8, "spew while charging" },
}}},
{ 0x1E, new EnumGroup { A=1, N="charging initiation mechanism", STR = new Dictionary<int, string>()
{
{0, "press and hold trigger" },
{1, "auto charge" },
{2, "auto charge in ADS" },
}}},
{ 0x1F, new EnumGroup { A=1, N="overcharged action", STR = new Dictionary<int, string>()
{
{0, "none" },
{1, "explode" },
{2, "discharge" },
}}},
{ 0x20, new C{ T="Float", N = "charging time" }},
{ 0x24, new C{ T="Float", N = "charged time" }},
{ 0x28, new C{ T="Unmapped", N = "cancelled trigger throw" }},
{ 0x2A, new C{ T="2Byte", N = "generated_padfd33" }},
{ 0x2C, new C{ T="Float", N = "charged illumination" }},
{ 0x30, new C{ T="TagRef", N = "charging effect" }},
{ 0x4C, new C{ T="TagRef", N = "charging damage effect" }},
{ 0x68, new C{ T="TagRef", N = "charging continuous damage response" }},
{ 0x84, new C{ T="Float", N = "charged drain rate" }},
{ 0x88, new C{ T="TagRef", N = "discharge effect" }},
{ 0xA4, new C{ T="TagRef", N = "discharge damage effect" }},
{ 0xC0, new C{ T="Tagblock", N = "fire fractions", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "charge fraction" }},
}, S=4}},
{ 0xD4, new C{ T="TagRef", N = "double latch projectile releasable effect" }},
{ 0xF0, new C{ T="TagRef", N = "double latch projectile released effect" }},
}, S=268}},
{ 0xC90, new C{ T="Tagblock", N = "barrels", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="flags", STR = new Dictionary<int, string>()
{
{0, "random firing effects" },
{1, "can fire with partial ammo" },
{2, "projectiles use weapon origin" },
{3, "ejects during chamber" },
{4, "projectile vector cannot be adjusted" },
{5, "projectiles have identical error" },
{6, "projectiles fire parallel" },
{7, "cant fire when others firing" },
{8, "cant fire when others recovering" },
{9, "don't clear fire bit after recovering" },
{10, "stagger fire across multiple markers" },
{11, "can fire at maximum age" },
{12, "use 1 firing effect per burst" },
{13, "prevent marker deviation" },
{14, "error ignores zoom" },
{15, "projectile fires in marker direction" },
{16, "skip test for object being outside BSP" },
{17, "only reload if all barrels idle" },
{18, "only switch weapons if barrel idle" },
{19, "AI ignore Projectile Distribution Function" },
{20, "Can heal or repair" },
}}},
{ 0x416869, new C{ T="Comment", N = "firing" }},
{ 0x416870, new C{ T="Comment", N = "firing" }},
{ 0x4, new C{ T="Float", N = "rounds per second.min" }},
{ 0x8, new C{ T="Float", N = "rounds per second.max" }},
{ 0xC, new C{ T="mmr3Hash", N = "rate of fire acceleration" }},
{ 0x10, new C{ T="Float", N = "acceleration time" }},
{ 0x14, new C{ T="mmr3Hash", N = "rate of fire deceleration" }},
{ 0x18, new C{ T="Float", N = "deceleration time" }},
{ 0x1C, new C{ T="Float", N = "barrel spin scale" }},
{ 0x2016871, new C{ T="Comment", N = "barrel spin scalars" }},
{ 0x2016872, new C{ T="Comment", N = "Barrel Spinning" }},
{ 0x20, new C{ T="Float", N = "idle spin speed" }},
{ 0x24, new C{ T="Float", N = "ready spin speed" }},
{ 0x28, new C{ T="Float", N = "firing rate scalar" }},
{ 0x2C, new C{ T="Float", N = "spin up time" }},
{ 0x30, new C{ T="Float", N = "spin down time" }},
{ 0x3416873, new C{ T="Comment", N = "" }},
{ 0x34, new C{ T="Float", N = "blurred rate of fire" }},
{ 0x38, new C{ T="Unmapped", N = "shots per fire" }},
{ 0x3C, new C{ T="Float", N = "fire recovery time" }},
{ 0x40, new C{ T="Float", N = "soft recovery fraction" }},
{ 0x44, new C{ T="Float", N = "melee  fire recovery time" }},
{ 0x48, new C{ T="Float", N = "melee soft recovery fraction" }},
{ 0x4C, new C{ T="Float", N = "runtime rate of fire acceleration rate" }},
{ 0x50, new C{ T="Float", N = "runtime rate of fire deceleration rate" }},
{ 0x54, new C{ T="2Byte", N = "magazine" }},
{ 0x56, new C{ T="2Byte", N = "rounds per shot" }},
{ 0x58, new C{ T="2Byte", N = "minimum rounds loaded" }},
{ 0x5A, new C{ T="2Byte", N = "rounds per burst" }},
{ 0x5C, new C{ T="2Byte", N = "rounds between tracers" }},
{ 0x5E, new EnumGroup { A=1, N="automatic reload behavior", STR = new Dictionary<int, string>()
{
{0, "reload immediately" },
{1, "never reload automatically" },
{2, "reload when magazine empty" },
{3, "reload when trigger active" },
{4, "reload when firing" },
}}},
{ 0x5F, new C{ T="Byte", N = "generated_paddab6" }},
{ 0x6016874, new C{ T="Comment", N = "" }},
{ 0x60, new C{ T="mmr3Hash", N = "optional barrel marker name" }},
{ 0x6416875, new C{ T="Comment", N = "noise" }},
{ 0x64, new EnumGroup { A=2, N="ai noise", STR = new Dictionary<int, string>()
{
{0, "silent" },
{1, "quiet" },
{2, "medium" },
{3, "shout" },
{4, "loud" },
}}},
{ 0x66, new EnumGroup { A=2, N="motion tracker noise", STR = new Dictionary<int, string>()
{
{0, "edge" },
{1, "inner" },
{2, "silent" },
}}},
{ 0x6816876, new C{ T="Comment", N = "prediction properties" }},
{ 0x68, new EnumGroup { A=2, N="prediction type", STR = new Dictionary<int, string>()
{
{0, "none" },
{1, "continuous" },
{2, "instant" },
{3, "continuous burst" },
}}},
{ 0x6A, new C{ T="2Byte", N = "generated_pad276b" }},
{ 0x6C, new C{ T="Float", N = "event_synchronized_projectiles_per_second" }},
{ 0x70, new C{ T="Float", N = "maximum_barrel_error_for_event_synchronization" }},
{ 0x7416877, new C{ T="Comment", N = "error turn rates" }},
{ 0x7416878, new C{ T="Comment", N = "error turn rates" }},
{ 0x7416879, new C{ T="Comment", N = "error turn rates" }},
{ 0x74, new C{ T="Float", N = "min error look pitch rate" }},
{ 0x78, new C{ T="Float", N = "full error look pitch rate" }},
{ 0x7C, new C{ T="Float", N = "look pitch error power" }},
{ 0x8016880, new C{ T="Comment", N = "" }},
{ 0x8016881, new C{ T="Comment", N = "projectile" }},
{ 0x8016882, new C{ T="Comment", N = "projectile distribution" }},
{ 0x80, new EnumGroup { A=2, N="distribution function", STR = new Dictionary<int, string>()
{
{0, "point" },
{1, "horizontal fan" },
{2, "custom directions" },
{3, "custom positions" },
}}},
{ 0x82, new C{ T="2Byte", N = "projectiles per shot" }},
{ 0x84, new C{ T="Tagblock", N = "direction offset", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Unmapped", N = "angle offset" }},
}, S=12}},
{ 0x98, new C{ T="Tagblock", N = "position offsets", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Unmapped", N = "Point offset" }},
}, S=4}},
{ 0xAC, new C{ T="Float", N = "distribution angle" }},
{ 0xB016883, new C{ T="Comment", N = "projectile error" }},
{ 0xB0, new C{ T="Float", N = "lower bound deceleration time" }},
{ 0xB4, new C{ T="Float", N = "deceleration time" }},
{ 0xB8, new C{ T="Float", N = "runtime error min deceleration rate" }},
{ 0xBC, new C{ T="Float", N = "runtime error deceleration rate" }},
{ 0xC0, new C{ T="Float", N = "minimum error" }},
{ 0xC4, new C{ T="Float", N = "minimum error angle.min" }},
{ 0xC8, new C{ T="Float", N = "minimum error angle.max" }},
{ 0xCC, new C{ T="Float", N = "error angle.min" }},
{ 0xD0, new C{ T="Float", N = "error angle.max" }},
{ 0xD4, new C{ T="Float", N = "damage error.min" }},
{ 0xD8, new C{ T="Float", N = "damage error.max" }},
{ 0xDC16884, new C{ T="Comment", N = "accuracy penalties" }},
{ 0xDC16885, new C{ T="Comment", N = "accuracy penalties" }},
{ 0xDC, new C{ T="Float", N = "reload penalty low" }},
{ 0xE0, new C{ T="Float", N = "reload penalty" }},
{ 0xE4, new C{ T="Float", N = "switch penalty low" }},
{ 0xE8, new C{ T="Float", N = "switch penalty" }},
{ 0xEC, new C{ T="Float", N = "zoom penalty low" }},
{ 0xF0, new C{ T="Float", N = "zoom penalty" }},
{ 0xF4, new C{ T="Float", N = "jump penalty low" }},
{ 0xF8, new C{ T="Float", N = "jump penalty" }},
{ 0xFC16886, new C{ T="Comment", N = "barrel_error penalty functions" }},
{ 0xFC16887, new C{ T="Comment", N = "single wield penalties" }},
{ 0xFC16888, new C{ T="Comment", N = "single wield penalties" }},
{ 0xFC, new C{ T="Tagblock", N = "firing penalty function", B = new Dictionary<long, C>
{
{ 0x016889, new C{ T="Comment", N = "min error function" }},
{ 0x016890, new C{ T="Comment", N = "function" }},
{ 0x016891, new C{ T="Comment", N = "function" }},
{ 0x016892, new C{ T="Comment", N = "" }},
{ 0x0, new C{ T="Unmapped", N = "data" }},
{ 0x1816893, new C{ T="Comment", N = "" }},
{ 0x1816894, new C{ T="Comment", N = "function" }},
{ 0x1816895, new C{ T="Comment", N = "function" }},
{ 0x1816896, new C{ T="Comment", N = "function" }},
{ 0x1816897, new C{ T="Comment", N = "" }},
{ 0x18, new C{ T="Unmapped", N = "data" }},
{ 0x3016898, new C{ T="Comment", N = "" }},
}, S=48}},
{ 0x110, new C{ T="Tagblock", N = "firing crouched penalty function", B = new Dictionary<long, C>
{
{ 0x016899, new C{ T="Comment", N = "min error function" }},
{ 0x016900, new C{ T="Comment", N = "function" }},
{ 0x016901, new C{ T="Comment", N = "function" }},
{ 0x016902, new C{ T="Comment", N = "" }},
{ 0x0, new C{ T="Unmapped", N = "data" }},
{ 0x1816903, new C{ T="Comment", N = "" }},
{ 0x1816904, new C{ T="Comment", N = "function" }},
{ 0x1816905, new C{ T="Comment", N = "function" }},
{ 0x1816906, new C{ T="Comment", N = "function" }},
{ 0x1816907, new C{ T="Comment", N = "" }},
{ 0x18, new C{ T="Unmapped", N = "data" }},
{ 0x3016908, new C{ T="Comment", N = "" }},
}, S=48}},
{ 0x124, new C{ T="Tagblock", N = "moving penalty function", B = new Dictionary<long, C>
{
{ 0x016909, new C{ T="Comment", N = "min error function" }},
{ 0x016910, new C{ T="Comment", N = "function" }},
{ 0x016911, new C{ T="Comment", N = "function" }},
{ 0x016912, new C{ T="Comment", N = "" }},
{ 0x0, new C{ T="Unmapped", N = "data" }},
{ 0x1816913, new C{ T="Comment", N = "" }},
{ 0x1816914, new C{ T="Comment", N = "function" }},
{ 0x1816915, new C{ T="Comment", N = "function" }},
{ 0x1816916, new C{ T="Comment", N = "function" }},
{ 0x1816917, new C{ T="Comment", N = "" }},
{ 0x18, new C{ T="Unmapped", N = "data" }},
{ 0x3016918, new C{ T="Comment", N = "" }},
}, S=48}},
{ 0x138, new C{ T="Tagblock", N = "turning penalty function", B = new Dictionary<long, C>
{
{ 0x016919, new C{ T="Comment", N = "min error function" }},
{ 0x016920, new C{ T="Comment", N = "function" }},
{ 0x016921, new C{ T="Comment", N = "function" }},
{ 0x016922, new C{ T="Comment", N = "" }},
{ 0x0, new C{ T="Unmapped", N = "data" }},
{ 0x1816923, new C{ T="Comment", N = "" }},
{ 0x1816924, new C{ T="Comment", N = "function" }},
{ 0x1816925, new C{ T="Comment", N = "function" }},
{ 0x1816926, new C{ T="Comment", N = "function" }},
{ 0x1816927, new C{ T="Comment", N = "" }},
{ 0x18, new C{ T="Unmapped", N = "data" }},
{ 0x3016928, new C{ T="Comment", N = "" }},
}, S=48}},
{ 0x14C, new C{ T="Float", N = "error angle max rotation" }},
{ 0x15016929, new C{ T="Comment", N = "" }},
{ 0x15016930, new C{ T="Comment", N = "dual wield penalties" }},
{ 0x15016931, new C{ T="Comment", N = "dual wield penalties" }},
{ 0x150, new C{ T="Tagblock", N = "firing penalty function", B = new Dictionary<long, C>
{
{ 0x016932, new C{ T="Comment", N = "min error function" }},
{ 0x016933, new C{ T="Comment", N = "function" }},
{ 0x016934, new C{ T="Comment", N = "function" }},
{ 0x016935, new C{ T="Comment", N = "" }},
{ 0x0, new C{ T="Unmapped", N = "data" }},
{ 0x1816936, new C{ T="Comment", N = "" }},
{ 0x1816937, new C{ T="Comment", N = "function" }},
{ 0x1816938, new C{ T="Comment", N = "function" }},
{ 0x1816939, new C{ T="Comment", N = "function" }},
{ 0x1816940, new C{ T="Comment", N = "" }},
{ 0x18, new C{ T="Unmapped", N = "data" }},
{ 0x3016941, new C{ T="Comment", N = "" }},
}, S=48}},
{ 0x164, new C{ T="Tagblock", N = "firing crouched penalty function", B = new Dictionary<long, C>
{
{ 0x016942, new C{ T="Comment", N = "min error function" }},
{ 0x016943, new C{ T="Comment", N = "function" }},
{ 0x016944, new C{ T="Comment", N = "function" }},
{ 0x016945, new C{ T="Comment", N = "" }},
{ 0x0, new C{ T="Unmapped", N = "data" }},
{ 0x1816946, new C{ T="Comment", N = "" }},
{ 0x1816947, new C{ T="Comment", N = "function" }},
{ 0x1816948, new C{ T="Comment", N = "function" }},
{ 0x1816949, new C{ T="Comment", N = "function" }},
{ 0x1816950, new C{ T="Comment", N = "" }},
{ 0x18, new C{ T="Unmapped", N = "data" }},
{ 0x3016951, new C{ T="Comment", N = "" }},
}, S=48}},
{ 0x178, new C{ T="Tagblock", N = "moving penalty function", B = new Dictionary<long, C>
{
{ 0x016952, new C{ T="Comment", N = "min error function" }},
{ 0x016953, new C{ T="Comment", N = "function" }},
{ 0x016954, new C{ T="Comment", N = "function" }},
{ 0x016955, new C{ T="Comment", N = "" }},
{ 0x0, new C{ T="Unmapped", N = "data" }},
{ 0x1816956, new C{ T="Comment", N = "" }},
{ 0x1816957, new C{ T="Comment", N = "function" }},
{ 0x1816958, new C{ T="Comment", N = "function" }},
{ 0x1816959, new C{ T="Comment", N = "function" }},
{ 0x1816960, new C{ T="Comment", N = "" }},
{ 0x18, new C{ T="Unmapped", N = "data" }},
{ 0x3016961, new C{ T="Comment", N = "" }},
}, S=48}},
{ 0x18C, new C{ T="Tagblock", N = "turning penalty function", B = new Dictionary<long, C>
{
{ 0x016962, new C{ T="Comment", N = "min error function" }},
{ 0x016963, new C{ T="Comment", N = "function" }},
{ 0x016964, new C{ T="Comment", N = "function" }},
{ 0x016965, new C{ T="Comment", N = "" }},
{ 0x0, new C{ T="Unmapped", N = "data" }},
{ 0x1816966, new C{ T="Comment", N = "" }},
{ 0x1816967, new C{ T="Comment", N = "function" }},
{ 0x1816968, new C{ T="Comment", N = "function" }},
{ 0x1816969, new C{ T="Comment", N = "function" }},
{ 0x1816970, new C{ T="Comment", N = "" }},
{ 0x18, new C{ T="Unmapped", N = "data" }},
{ 0x3016971, new C{ T="Comment", N = "" }},
}, S=48}},
{ 0x1A0, new C{ T="Float", N = "error angle max rotation" }},
{ 0x1A416972, new C{ T="Comment", N = "" }},
{ 0x1A416973, new C{ T="Comment", N = "" }},
{ 0x1A4, new C{ T="Tagblock", N = "first person offset", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "first person offset.X" }},
{ 0x4, new C{ T="Float", N = "first person offset.Y" }},
{ 0x8, new C{ T="Float", N = "first person offset.Z" }},
}, S=12}},
{ 0x1B8, new C{ T="TagRef", N = "projectile" }},
{ 0x1D4, new C{ T="TagRef", N = "tag graph output" }},
{ 0x1F0, new C{ T="mmr3Hash", N = "output node name" }},
{ 0x1F4, new C{ T="Tagblock", N = "float params", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "name" }},
{ 0x4, new C{ T="Float", N = "value" }},
}, S=8}},
{ 0x208, new C{ T="TagRef", N = "optional secondary projectile" }},
{ 0x22416974, new C{ T="Comment", N = "eh" }},
{ 0x224, new C{ T="TagRef", N = "damage effect" }},
{ 0x240, new C{ T="TagRef", N = "crate projectile" }},
{ 0x25C, new C{ T="Float", N = "crate projectile speed" }},
{ 0x26016975, new C{ T="Comment", N = "misc" }},
{ 0x260, new C{ T="Float", N = "ejection port recovery time" }},
{ 0x264, new C{ T="Float", N = "illumination recovery time" }},
{ 0x268, new C{ T="Float", N = "heat generated per round" }},
{ 0x26C, new C{ T="mmr3Hash", N = "heat generated per round function" }},
{ 0x270, new C{ T="Float", N = "deprecated age generated per round" }},
{ 0x274, new C{ T="Float", N = "deprecated CAMPAIGN age generated per round" }},
{ 0x27816976, new C{ T="Comment", N = "age generation" }},
{ 0x278, new C{ T="Float", N = "age generated per round" }},
{ 0x27C, new C{ T="Float", N = "CAMPAIGN age generated per round" }},
{ 0x28016977, new C{ T="Comment", N = "sweet heat" }},
{ 0x28016978, new C{ T="Comment", N = "Heat Sweet Spot" }},
{ 0x280, new C{ T="Float", N = "sweet spot start heat level" }},
{ 0x284, new C{ T="Float", N = "sweet spot end heat level" }},
{ 0x288, new C{ T="TagRef", N = "sweet heat projectile" }},
{ 0x2A416979, new C{ T="Comment", N = "" }},
{ 0x2A4, new C{ T="Float", N = "overload time" }},
{ 0x2A8, new C{ T="Float", N = "runtime illumination recovery rate" }},
{ 0x2AC, new C{ T="Float", N = "runtime ejection port recovery rate" }},
{ 0x2B0, new C{ T="Tagblock", N = "firing effects", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="2Byte", N = "shot count lower bound" }},
{ 0x2, new C{ T="2Byte", N = "shot count upper bound" }},
{ 0x416980, new C{ T="Comment", N = "firing effect" }},
{ 0x416981, new C{ T="Comment", N = "firing effect overrides" }},
{ 0x4, new C{ T="TagRef", N = "effect" }},
{ 0x20, new FlagGroup { A=4, N="flags", STR = new Dictionary<int, string>()
{
{0, "Stagger fire across multiple markers" },
{1, "Random firing effects" },
{2, "Enable marker overrides" },
}}},
{ 0x24, new C{ T="Tagblock", N = "override effects", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "effect" }},
}, S=28}},
{ 0x38, new C{ T="Tagblock", N = "marker overrides", B = new Dictionary<long, C>
{
{ 0x016982, new C{ T="Comment", N = "Marker overrides" }},
{ 0x016983, new C{ T="Comment", N = "" }},
{ 0x0, new C{ T="mmr3Hash", N = "marker" }},
{ 0x416984, new C{ T="Comment", N = "" }},
{ 0x4, new C{ T="mmr3Hash", N = "markerOverride" }},
}, S=8}},
{ 0x4C16985, new C{ T="Comment", N = "critical effect" }},
{ 0x4C16986, new C{ T="Comment", N = "critical effect overrides" }},
{ 0x4C, new C{ T="TagRef", N = "effect" }},
{ 0x68, new FlagGroup { A=4, N="flags", STR = new Dictionary<int, string>()
{
{0, "Stagger fire across multiple markers" },
{1, "Random firing effects" },
{2, "Enable marker overrides" },
}}},
{ 0x6C, new C{ T="Tagblock", N = "override effects", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "effect" }},
}, S=28}},
{ 0x80, new C{ T="Tagblock", N = "marker overrides", B = new Dictionary<long, C>
{
{ 0x016987, new C{ T="Comment", N = "Marker overrides" }},
{ 0x016988, new C{ T="Comment", N = "" }},
{ 0x0, new C{ T="mmr3Hash", N = "marker" }},
{ 0x416989, new C{ T="Comment", N = "" }},
{ 0x4, new C{ T="mmr3Hash", N = "markerOverride" }},
}, S=8}},
{ 0x9416990, new C{ T="Comment", N = "misfire effect" }},
{ 0x9416991, new C{ T="Comment", N = "misfire effect overrides" }},
{ 0x94, new C{ T="TagRef", N = "effect" }},
{ 0xB0, new FlagGroup { A=4, N="flags", STR = new Dictionary<int, string>()
{
{0, "Stagger fire across multiple markers" },
{1, "Random firing effects" },
{2, "Enable marker overrides" },
}}},
{ 0xB4, new C{ T="Tagblock", N = "override effects", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "effect" }},
}, S=28}},
{ 0xC8, new C{ T="Tagblock", N = "marker overrides", B = new Dictionary<long, C>
{
{ 0x016992, new C{ T="Comment", N = "Marker overrides" }},
{ 0x016993, new C{ T="Comment", N = "" }},
{ 0x0, new C{ T="mmr3Hash", N = "marker" }},
{ 0x416994, new C{ T="Comment", N = "" }},
{ 0x4, new C{ T="mmr3Hash", N = "markerOverride" }},
}, S=8}},
{ 0xDC16995, new C{ T="Comment", N = "empty effect" }},
{ 0xDC16996, new C{ T="Comment", N = "empty effect overrides" }},
{ 0xDC, new C{ T="TagRef", N = "effect" }},
{ 0xF8, new FlagGroup { A=4, N="flags", STR = new Dictionary<int, string>()
{
{0, "Stagger fire across multiple markers" },
{1, "Random firing effects" },
{2, "Enable marker overrides" },
}}},
{ 0xFC, new C{ T="Tagblock", N = "override effects", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "effect" }},
}, S=28}},
{ 0x110, new C{ T="Tagblock", N = "marker overrides", B = new Dictionary<long, C>
{
{ 0x016997, new C{ T="Comment", N = "Marker overrides" }},
{ 0x016998, new C{ T="Comment", N = "" }},
{ 0x0, new C{ T="mmr3Hash", N = "marker" }},
{ 0x416999, new C{ T="Comment", N = "" }},
{ 0x4, new C{ T="mmr3Hash", N = "markerOverride" }},
}, S=8}},
{ 0x12417000, new C{ T="Comment", N = "optional secondary firing effect" }},
{ 0x12417001, new C{ T="Comment", N = "optional secondary firing effect overrides" }},
{ 0x124, new C{ T="TagRef", N = "effect" }},
{ 0x140, new FlagGroup { A=4, N="flags", STR = new Dictionary<int, string>()
{
{0, "Stagger fire across multiple markers" },
{1, "Random firing effects" },
{2, "Enable marker overrides" },
}}},
{ 0x144, new C{ T="Tagblock", N = "override effects", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "effect" }},
}, S=28}},
{ 0x158, new C{ T="Tagblock", N = "marker overrides", B = new Dictionary<long, C>
{
{ 0x017002, new C{ T="Comment", N = "Marker overrides" }},
{ 0x017003, new C{ T="Comment", N = "" }},
{ 0x0, new C{ T="mmr3Hash", N = "marker" }},
{ 0x417004, new C{ T="Comment", N = "" }},
{ 0x4, new C{ T="mmr3Hash", N = "markerOverride" }},
}, S=8}},
{ 0x16C, new C{ T="TagRef", N = "firing effect" }},
{ 0x188, new C{ T="TagRef", N = "critical effect" }},
{ 0x1A4, new C{ T="TagRef", N = "misfire effect" }},
{ 0x1C0, new C{ T="TagRef", N = "empty effect" }},
{ 0x1DC, new C{ T="TagRef", N = "optional secondary firing effect" }},
{ 0x1F8, new C{ T="TagRef", N = "firing damage" }},
{ 0x214, new C{ T="TagRef", N = "critical damage" }},
{ 0x230, new C{ T="TagRef", N = "misfire damage" }},
{ 0x24C, new C{ T="TagRef", N = "empty damage" }},
{ 0x268, new C{ T="TagRef", N = "optional secondary firing damage" }},
{ 0x284, new C{ T="TagRef", N = "firing rider damage" }},
{ 0x2A0, new C{ T="TagRef", N = "critical rider damage" }},
{ 0x2BC, new C{ T="TagRef", N = "misfire rider damage" }},
{ 0x2D8, new C{ T="TagRef", N = "empty rider damage" }},
{ 0x2F4, new C{ T="TagRef", N = "optional secondary firing rider damage" }},
}, S=784}},
{ 0x2C417005, new C{ T="Comment", N = "Recoil" }},
{ 0x2C417006, new C{ T="Comment", N = "Recoil view kick acceleration" }},
{ 0x2C417007, new C{ T="Comment", N = "View Kick Acceleration" }},
{ 0x2C417008, new C{ T="Comment", N = "view kick acceleration" }},
{ 0x2C417009, new C{ T="Comment", N = "acceleration precision aim" }},
{ 0x2C417010, new C{ T="Comment", N = "Yaw" }},
{ 0x2C417011, new C{ T="Comment", N = "view kick yaw" }},
{ 0x2C4, new C{ T="Float", N = "view kick random acceleration.min" }},
{ 0x2C8, new C{ T="Float", N = "view kick random acceleration.max" }},
{ 0x2CC, new C{ T="Float", N = "view kick min magnitude" }},
{ 0x2D017012, new C{ T="Comment", N = "" }},
{ 0x2D017013, new C{ T="Comment", N = "Pitch" }},
{ 0x2D017014, new C{ T="Comment", N = "view kick pitch" }},
{ 0x2D0, new C{ T="Float", N = "view kick random acceleration.min" }},
{ 0x2D4, new C{ T="Float", N = "view kick random acceleration.max" }},
{ 0x2D8, new C{ T="Float", N = "view kick min magnitude" }},
{ 0x2DC17015, new C{ T="Comment", N = "" }},
{ 0x2DC17016, new C{ T="Comment", N = "view kick recoil scales" }},
{ 0x2DC, new C{ T="Float", N = "recoil impulse scale ground throttle" }},
{ 0x2E0, new C{ T="Float", N = "recoil impulse scale crouched" }},
{ 0x2E4, new C{ T="Float", N = "recoil impulse scale airborne" }},
{ 0x2E8, new C{ T="Tagblock", N = "acceleration hip", B = new Dictionary<long, C>
{
{ 0x017017, new C{ T="Comment", N = "Acceleration Stance" }},
{ 0x017018, new C{ T="Comment", N = "Yaw" }},
{ 0x017019, new C{ T="Comment", N = "view kick yaw" }},
{ 0x0, new C{ T="Float", N = "view kick random acceleration.min" }},
{ 0x4, new C{ T="Float", N = "view kick random acceleration.max" }},
{ 0x8, new C{ T="Float", N = "view kick min magnitude" }},
{ 0xC17020, new C{ T="Comment", N = "" }},
{ 0xC17021, new C{ T="Comment", N = "Pitch" }},
{ 0xC17022, new C{ T="Comment", N = "view kick pitch" }},
{ 0xC, new C{ T="Float", N = "view kick random acceleration.min" }},
{ 0x10, new C{ T="Float", N = "view kick random acceleration.max" }},
{ 0x14, new C{ T="Float", N = "view kick min magnitude" }},
{ 0x1817023, new C{ T="Comment", N = "" }},
{ 0x1817024, new C{ T="Comment", N = "view kick recoil scales" }},
{ 0x18, new C{ T="Float", N = "recoil impulse scale ground throttle" }},
{ 0x1C, new C{ T="Float", N = "recoil impulse scale crouched" }},
{ 0x20, new C{ T="Float", N = "recoil impulse scale airborne" }},
}, S=36}},
{ 0x2FC17025, new C{ T="Comment", N = "" }},
{ 0x2FC17026, new C{ T="Comment", N = "Recoil gun kick acceleration" }},
{ 0x2FC17027, new C{ T="Comment", N = "Gunkick" }},
{ 0x2FC17028, new C{ T="Comment", N = "Gunkick" }},
{ 0x2FC17029, new C{ T="Comment", N = "gunkick ads settings" }},
{ 0x2FC, new C{ T="Float", N = "gunkick yaw acceleration.min" }},
{ 0x300, new C{ T="Float", N = "gunkick yaw acceleration.max" }},
{ 0x304, new C{ T="Float", N = "gunkick yaw min magnitude" }},
{ 0x308, new C{ T="Float", N = "gunkick pitch acceleration.min" }},
{ 0x30C, new C{ T="Float", N = "gunkick pitch acceleration.max" }},
{ 0x310, new C{ T="Float", N = "gunkick pitch min magnitude" }},
{ 0x31417030, new C{ T="Comment", N = "gunkick impulse scales" }},
{ 0x314, new C{ T="Float", N = "recoil impulse scale ground throttle" }},
{ 0x318, new C{ T="Float", N = "recoil impulse scale crouched" }},
{ 0x31C, new C{ T="Float", N = "recoil impulse scale airborne" }},
{ 0x320, new C{ T="Tagblock", N = "gunkick hip settings", B = new Dictionary<long, C>
{
{ 0x017031, new C{ T="Comment", N = "gunkick acceleration stance" }},
{ 0x0, new C{ T="Float", N = "gunkick yaw acceleration.min" }},
{ 0x4, new C{ T="Float", N = "gunkick yaw acceleration.max" }},
{ 0x8, new C{ T="Float", N = "gunkick yaw min magnitude" }},
{ 0xC, new C{ T="Float", N = "gunkick pitch acceleration.min" }},
{ 0x10, new C{ T="Float", N = "gunkick pitch acceleration.max" }},
{ 0x14, new C{ T="Float", N = "gunkick pitch min magnitude" }},
{ 0x1817032, new C{ T="Comment", N = "gunkick impulse scales" }},
{ 0x18, new C{ T="Float", N = "recoil impulse scale ground throttle" }},
{ 0x1C, new C{ T="Float", N = "recoil impulse scale crouched" }},
{ 0x20, new C{ T="Float", N = "recoil impulse scale airborne" }},
}, S=36}},
{ 0x33417033, new C{ T="Comment", N = "" }},
{ 0x33417034, new C{ T="Comment", N = "" }},
{ 0x33417035, new C{ T="Comment", N = "procedural animation fp fire impulse" }},
{ 0x33417036, new C{ T="Comment", N = "procedural animation fp fire kickback impulse" }},
{ 0x334, new C{ T="Float", N = "procedural animation fp fire kickback impulse.min" }},
{ 0x338, new C{ T="Float", N = "procedural animation fp fire kickback impulse.max" }},
{ 0x33C, new C{ T="Tagblock", N = "procedural animation fp fire kickback impulse hip", B = new Dictionary<long, C>
{
{ 0x017037, new C{ T="Comment", N = "procedural animation fp fire kickback impulse" }},
{ 0x0, new C{ T="Float", N = "procedural animation fp fire kickback impulse.min" }},
{ 0x4, new C{ T="Float", N = "procedural animation fp fire kickback impulse.max" }},
}, S=8}},
}, S=848}},
{ 0xCA4, new C{ T="Float", N = "runtime weapon power on velocity" }},
{ 0xCA8, new C{ T="Float", N = "runtime weapon power off velocity" }},
{ 0xCAC17038, new C{ T="Comment", N = "first-person movement control" }},
{ 0xCAC, new C{ T="Float", N = "max movement acceleration" }},
{ 0xCB0, new C{ T="Float", N = "max movement velocity" }},
{ 0xCB4, new C{ T="Float", N = "max turning acceleration" }},
{ 0xCB8, new C{ T="Float", N = "max turning velocity" }},
{ 0xCBC, new C{ T="TagRef", N = "deployed vehicle" }},
{ 0xCD8, new C{ T="TagRef", N = "age effect" }},
{ 0xCF4, new C{ T="TagRef", N = "aged weapon" }},
{ 0xD10, new C{ T="TagRef", N = "aged material effects" }},
{ 0xD2C, new C{ T="Float", N = "per kill or hit aging amount" }},
{ 0xD30, new C{ T="Float", N = "external aging amount" }},
{ 0xD34, new C{ T="Float", N = "external heat amount" }},
{ 0xD38, new C{ T="Float", N = "first person weapon offset.X" }},
{ 0xD3C, new C{ T="Float", N = "first person weapon offset.Y" }},
{ 0xD40, new C{ T="Float", N = "first person weapon offset.Z" }},
{ 0xD44, new C{ T="Float", N = "support third person camera range.min" }},
{ 0xD48, new C{ T="Float", N = "support third person camera range.max" }},
{ 0xD4C, new C{ T="Float", N = "weapon zoom time" }},
{ 0xD50, new C{ T="Float", N = "weapon ready-for-use time" }},
{ 0xD5417039, new C{ T="Comment", N = "" }},
{ 0xD54, new C{ T="Float", N = "deprecated ready playback speed" }},
{ 0xD58, new C{ T="Float", N = "deprecated ready initial playback speed" }},
{ 0xD5C, new C{ T="Float", N = "deprecated put away playback speed" }},
{ 0xD60, new C{ T="Float", N = "deprecated reload playback speed" }},
{ 0xD64, new C{ T="Float", N = "deprecated reload while empty playback speed" }},
{ 0xD6817040, new C{ T="Comment", N = "" }},
{ 0xD6817041, new C{ T="Comment", N = "animation base properties" }},
{ 0xD6817042, new C{ T="Comment", N = "ready playback speed scale" }},
{ 0xD6817043, new C{ T="Comment", N = "ready playback speed scale" }},
{ 0xD68, new C{ T="Float", N = "Base Value" }},
{ 0xD6C, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xD70, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xD7417044, new C{ T="Comment", N = "ready initial playback speed scale" }},
{ 0xD7417045, new C{ T="Comment", N = "ready initial playback speed scale" }},
{ 0xD74, new C{ T="Float", N = "Base Value" }},
{ 0xD78, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xD7C, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xD8017046, new C{ T="Comment", N = "put away playback speed scale" }},
{ 0xD8017047, new C{ T="Comment", N = "put away playback speed scale" }},
{ 0xD80, new C{ T="Float", N = "Base Value" }},
{ 0xD84, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xD88, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xD8C17048, new C{ T="Comment", N = "reload playback speed scale" }},
{ 0xD8C17049, new C{ T="Comment", N = "reload playback speed scale" }},
{ 0xD8C, new C{ T="Float", N = "Base Value" }},
{ 0xD90, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xD94, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xD9817050, new C{ T="Comment", N = "reload while empty playback speed scale" }},
{ 0xD9817051, new C{ T="Comment", N = "reload while empty playback speed scale" }},
{ 0xD98, new C{ T="Float", N = "Base Value" }},
{ 0xD9C, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xDA0, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xDA4, new C{ T="Float", N = "sprint exit disable weapon duration" }},
{ 0xDA8, new C{ T="Float", N = "tether transition to linked time" }},
{ 0xDAC, new C{ T="Float", N = "tether transition from linked time" }},
{ 0xDB0, new C{ T="mmr3Hash", N = "unit stow anchor name" }},
{ 0xDB4, new C{ T="Tagblock", N = "screen effects", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=1, N="flags", STR = new Dictionary<int, string>()
{
{0, "overrides unit and camera screen effects" },
{1, "unzoomed" },
{2, "zoom level 1" },
{3, "zoom level 2" },
}}},
{ 0x1, new C{ T="Comment", N = "generated_pad0661" }},
{ 0x4, new C{ T="TagRef", N = "screen effect" }},
}, S=32}},
{ 0xDC8, new C{ T="TagRef", N = "Player sound bank" }},
{ 0xDE4, new C{ T="mmr3Hash", N = "Locking Reticle Screen Name" }},
{ 0xDE8, new C{ T="mmr3Hash", N = "Locked On Reticle Screen Name" }},
{ 0xDEC17052, new C{ T="Comment", N = "Default Attachments" }},
{ 0xDEC, new C{ T="Tagblock", N = "generic attachments", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "attachment" }},
}, S=28}},
{ 0xE00, new C{ T="TagRef", N = "barrel attachment" }},
{ 0xE1C, new C{ T="TagRef", N = "magazine attachment" }},
{ 0xE38, new C{ T="TagRef", N = "melee attachment" }},
{ 0xE54, new C{ T="TagRef", N = "weapon sight" }},
{ 0xE70, new C{ T="TagRef", N = "weapon target tracking attachment" }},
{ 0xE8C, new C{ T="TagRef", N = "weapon trigger attachment" }},
{ 0xEA8, new C{ T="TagRef", N = "heat attachment" }},
{ 0xEC4, new C{ T="TagRef", N = "ui display info" }},
{ 0xEE017053, new C{ T="Comment", N = "" }},
{ 0xEE017054, new C{ T="Comment", N = "accuracy spread scale" }},
{ 0xEE017055, new C{ T="Comment", N = "accuracy spread scale" }},
{ 0xEE0, new C{ T="Float", N = "Base Value" }},
{ 0xEE4, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xEE8, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xEEC17056, new C{ T="Comment", N = "unit properties" }},
{ 0xEEC17057, new C{ T="Comment", N = "move speed scale" }},
{ 0xEEC17058, new C{ T="Comment", N = "move speed scale" }},
{ 0xEEC, new C{ T="Float", N = "Base Value" }},
{ 0xEF0, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xEF4, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xEF817059, new C{ T="Comment", N = "turn rate scale" }},
{ 0xEF817060, new C{ T="Comment", N = "turn rate scale" }},
{ 0xEF8, new C{ T="Float", N = "Base Value" }},
{ 0xEFC, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xF00, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xF0417061, new C{ T="Comment", N = "simulated input scale" }},
{ 0xF0417062, new C{ T="Comment", N = "simulated input scale" }},
{ 0xF04, new C{ T="Float", N = "Base Value" }},
{ 0xF08, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xF0C, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xF1017063, new C{ T="Comment", N = "Recoil" }},
{ 0xF1017064, new C{ T="Comment", N = "Recoil View Kick" }},
{ 0xF1017065, new C{ T="Comment", N = "View Kick" }},
{ 0xF1017066, new C{ T="Comment", N = "view kick settings" }},
{ 0xF10, new EnumGroup { A=1, N="view kick system type", STR = new Dictionary<int, string>()
{
{0, "acceleration" },
{1, "acceleration per axis" },
}}},
{ 0xF11, new C{ T="Comment", N = "generated_pad1679" }},
{ 0xF1417067, new C{ T="Comment", N = "Yaw" }},
{ 0xF1417068, new C{ T="Comment", N = "view kick yaw" }},
{ 0xF14, new C{ T="Float", N = "view kick bounds.min" }},
{ 0xF18, new C{ T="Float", N = "view kick bounds.max" }},
{ 0xF1C17069, new C{ T="Comment", N = "" }},
{ 0xF1C17070, new C{ T="Comment", N = "Pitch" }},
{ 0xF1C17071, new C{ T="Comment", N = "view kick pitch" }},
{ 0xF1C, new C{ T="Float", N = "view kick bounds.min" }},
{ 0xF20, new C{ T="Float", N = "view kick bounds.max" }},
{ 0xF2417072, new C{ T="Comment", N = "" }},
{ 0xF2417073, new C{ T="Comment", N = "settings" }},
{ 0xF2417074, new C{ T="Comment", N = "view kick precision aim" }},
{ 0xF24, new C{ T="Float", N = "view kick deceleration" }},
{ 0xF28, new C{ T="Float", N = "view kick return to center acceleration" }},
{ 0xF2C, new C{ T="Tagblock", N = "view kick hip", B = new Dictionary<long, C>
{
{ 0x017075, new C{ T="Comment", N = "view kick settings stance" }},
{ 0x0, new C{ T="Float", N = "view kick deceleration" }},
{ 0x4, new C{ T="Float", N = "view kick return to center acceleration" }},
}, S=8}},
{ 0xF4017076, new C{ T="Comment", N = "" }},
{ 0xF4017077, new C{ T="Comment", N = "view kick multiplier function" }},
{ 0xF4017078, new C{ T="Comment", N = "function" }},
{ 0xF4017079, new C{ T="Comment", N = "function" }},
{ 0xF4017080, new C{ T="Comment", N = "" }},
{ 0xF40, new C{ T="Unmapped", N = "data" }},
{ 0xF5817081, new C{ T="Comment", N = "" }},
{ 0xF58, new C{ T="4Byte", N = "view kick shots fired to max out multipler function" }},
{ 0xF5C, new C{ T="Float", N = "view kick time to zero multipler function" }},
{ 0xF6017082, new C{ T="Comment", N = "recoil view kick base properties" }},
{ 0xF6017083, new C{ T="Comment", N = "view kick return deceleration scale" }},
{ 0xF6017084, new C{ T="Comment", N = "view kick return deceleration scale" }},
{ 0xF60, new C{ T="Float", N = "Base Value" }},
{ 0xF64, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xF68, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xF6C17085, new C{ T="Comment", N = "view kick return return to center scale" }},
{ 0xF6C17086, new C{ T="Comment", N = "view kick return return to center scale" }},
{ 0xF6C, new C{ T="Float", N = "Base Value" }},
{ 0xF70, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xF74, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xF7817087, new C{ T="Comment", N = "recoil gun kick" }},
{ 0xF7817088, new C{ T="Comment", N = "Gunkick" }},
{ 0xF7817089, new C{ T="Comment", N = "gunkick" }},
{ 0xF7817090, new C{ T="Comment", N = "gunkick ads settings" }},
{ 0xF78, new C{ T="Float", N = "gunkick spring constant" }},
{ 0xF7C, new C{ T="Float", N = "gunkick damping ratio" }},
{ 0xF80, new C{ T="Tagblock", N = "gunkick hip settings", B = new Dictionary<long, C>
{
{ 0x017091, new C{ T="Comment", N = "gunkick stance" }},
{ 0x0, new C{ T="Float", N = "gunkick spring constant" }},
{ 0x4, new C{ T="Float", N = "gunkick damping ratio" }},
}, S=8}},
{ 0xF94, new C{ T="Float", N = "gunkick yaw bounds.min" }},
{ 0xF98, new C{ T="Float", N = "gunkick yaw bounds.max" }},
{ 0xF9C, new C{ T="Float", N = "gunkick pitch bounds.min" }},
{ 0xFA0, new C{ T="Float", N = "gunkick pitch bounds.max" }},
{ 0xFA417092, new C{ T="Comment", N = "" }},
{ 0xFA417093, new C{ T="Comment", N = "recoil gunkick base properties" }},
{ 0xFA417094, new C{ T="Comment", N = "gunkick spring constant scale" }},
{ 0xFA417095, new C{ T="Comment", N = "gunkick spring constant scale" }},
{ 0xFA4, new C{ T="Float", N = "Base Value" }},
{ 0xFA8, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xFAC, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xFB017096, new C{ T="Comment", N = "" }},
{ 0xFB017097, new C{ T="Comment", N = "Procedural Animation" }},
{ 0xFB017098, new C{ T="Comment", N = "procedural animation fp" }},
{ 0xFB017099, new C{ T="Comment", N = "Procedural Animation FP" }},
{ 0xFB017100, new C{ T="Comment", N = "procedural animation fp fire spring" }},
{ 0xFB0, new C{ T="Float", N = "procedural animation fp fire spring constant" }},
{ 0xFB4, new C{ T="Float", N = "procedural animation fp fire damping ratio" }},
{ 0xFB8, new C{ T="Float", N = "runtime damping constant" }},
{ 0xFBC, new C{ T="Tagblock", N = "procedural animation fp fire spring hip", B = new Dictionary<long, C>
{
{ 0x017101, new C{ T="Comment", N = "procedural animation fp fire spring" }},
{ 0x0, new C{ T="Float", N = "procedural animation fp fire spring constant" }},
{ 0x4, new C{ T="Float", N = "procedural animation fp fire damping ratio" }},
{ 0x8, new C{ T="Float", N = "runtime damping constant" }},
}, S=12}},
{ 0xFD017102, new C{ T="Comment", N = "" }},
{ 0xFD017103, new C{ T="Comment", N = "Procedural Recoil Settings" }},
{ 0xFD0, new C{ T="Float", N = "duration" }},
{ 0xFD417104, new C{ T="Comment", N = "kickback" }},
{ 0xFD417105, new C{ T="Comment", N = "function" }},
{ 0xFD417106, new C{ T="Comment", N = "function" }},
{ 0xFD417107, new C{ T="Comment", N = "" }},
{ 0xFD4, new C{ T="Unmapped", N = "data" }},
{ 0xFEC17108, new C{ T="Comment", N = "" }},
{ 0xFEC17109, new C{ T="Comment", N = "pitch" }},
{ 0xFEC17110, new C{ T="Comment", N = "function" }},
{ 0xFEC17111, new C{ T="Comment", N = "function" }},
{ 0xFEC17112, new C{ T="Comment", N = "" }},
{ 0xFEC, new C{ T="Unmapped", N = "data" }},
{ 0x100417113, new C{ T="Comment", N = "" }},
{ 0x100417114, new C{ T="Comment", N = "yaw" }},
{ 0x100417115, new C{ T="Comment", N = "function" }},
{ 0x100417116, new C{ T="Comment", N = "function" }},
{ 0x100417117, new C{ T="Comment", N = "" }},
{ 0x1004, new C{ T="Unmapped", N = "data" }},
{ 0x101C17118, new C{ T="Comment", N = "" }},
{ 0x101C17119, new C{ T="Comment", N = "roll" }},
{ 0x101C17120, new C{ T="Comment", N = "function" }},
{ 0x101C17121, new C{ T="Comment", N = "function" }},
{ 0x101C17122, new C{ T="Comment", N = "" }},
{ 0x101C, new C{ T="Unmapped", N = "data" }},
{ 0x103417123, new C{ T="Comment", N = "" }},
{ 0x103417124, new C{ T="Comment", N = "head" }},
{ 0x103417125, new C{ T="Comment", N = "function" }},
{ 0x103417126, new C{ T="Comment", N = "function" }},
{ 0x103417127, new C{ T="Comment", N = "" }},
{ 0x1034, new C{ T="Unmapped", N = "data" }},
{ 0x104C17128, new C{ T="Comment", N = "" }},
{ 0x104C17129, new C{ T="Comment", N = "shoulders" }},
{ 0x104C17130, new C{ T="Comment", N = "function" }},
{ 0x104C17131, new C{ T="Comment", N = "function" }},
{ 0x104C17132, new C{ T="Comment", N = "" }},
{ 0x104C, new C{ T="Unmapped", N = "data" }},
{ 0x106417133, new C{ T="Comment", N = "" }},
{ 0x106417134, new C{ T="Comment", N = "" }},
{ 0x106417135, new C{ T="Comment", N = "Weapon Switch Events" }},
{ 0x1064, new C{ T="mmr3Hash", N = "weaponSwitchEventNameInBegin" }},
{ 0x1068, new C{ T="mmr3Hash", N = "weaponSwitchEventNameInEnd" }},
{ 0x106C, new C{ T="mmr3Hash", N = "weaponSwitchEventNameOutBegin" }},
{ 0x1070, new C{ T="mmr3Hash", N = "weaponSwitchEventNameOutEnd" }},
{ 0x107417136, new C{ T="Comment", N = "" }},
{ 0x1074, new C{ T="TagRef", N = "pickup weapon" }},
{ 0x1090, new C{ T="mmr3Hash", N = "pickup weapon attachment point" }},
{ 0x1094, new C{ T="mmr3Hash", N = "pickup weapon unit attachment point" }},
{ 0x1098, new EnumGroup { A=4, N="tutorial weapon fire id", STR = new Dictionary<int, string>()
{
{0, "None" },
{1, "Assassination" },
{2, "Camera" },
{3, "Crouch" },
{4, "Grenade" },
{5, "Jump" },
{6, "Melee" },
{7, "Movement" },
{8, "Shoot" },
{9, "Tracking" },
{10, "Clamber" },
{11, "Slide" },
{12, "Sprint" },
{13, "Thruster" },
{14, "Zoom" },
{15, "BansheeBoost" },
{16, "BansheeTrick" },
{17, "BansheeSwitchWeapons" },
{18, "GhostBoost" },
{19, "MantisRockets" },
{20, "MantisStomp" },
{21, "VTOLAscend" },
{22, "VTOLDescend" },
{23, "VTOLEvade" },
{24, "VTOLSwitchWeapons" },
{25, "VTOLShoot" },
{26, "JeepDrive" },
{27, "JeepHandbrake" },
{28, "JeepShoot" },
{29, "WraithBoost" },
{30, "SeatSwitch" },
{31, "OrdersGeneral" },
{32, "OrdersClear" },
{33, "OrdersEnemy" },
{34, "OrdersMove" },
{35, "OrdersVehicle" },
{36, "OrdersWeapon" },
}}},
{ 0x109C, new C{ T="TagRef", N = "equipped modifiers" }},
{ 0x10B817137, new C{ T="Comment", N = "" }},
{ 0x10B817138, new C{ T="Comment", N = "sound" }},
{ 0x10B817139, new C{ T="Comment", N = "$$$ SOUND $$$" }},
{ 0x10B8, new FlagGroup { A=1, N="Weapon sound flags", STR = new Dictionary<int, string>()
{
{0, "Orient audio with controlling unit" },
{1, "Melee attacks use only material effects" },
}}},
{ 0x10B9, new C{ T="Comment", N = "generated_pad94e7" }},
{ 0x10BC, new C{ T="Tagblock", N = "Weapon Fire Sounds", B = new Dictionary<long, C>
{
{ 0x017140, new C{ T="Comment", N = "Fire Sound" }},
{ 0x0, new EnumGroup { A=2, N="Firing Type", STR = new Dictionary<int, string>()
{
{0, "One off" },
{1, "Looping" },
{2, "Burst" },
}}},
{ 0x2, new C{ T="2Byte", N = "Barrel Attachment Index" }},
{ 0x4, new C{ T="Float", N = "Fire start delay" }},
{ 0x8, new C{ T="Tagblock", N = "Weapon Fire Sound Variations", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "Weapon Fire Sound" }},
}, S=28}},
{ 0x1C, new C{ T="TagRef", N = "Bullet Shell Sound" }},
{ 0x3817141, new C{ T="Comment", N = "Tail Sounds" }},
{ 0x38, new C{ T="mmr3Hash", N = "Weapon Switch Group" }},
{ 0x3C, new C{ T="mmr3Hash", N = "Weapon Switch Value" }},
{ 0x40, new C{ T="TagRef", N = "Dry Fire Sound" }},
}, S=92}},
{ 0x10D0, new C{ T="TagRef", N = "Tracking Sound" }},
{ 0x10EC, new C{ T="TagRef", N = "Locked Sound" }},
{ 0x1108, new C{ T="TagRef", N = "Ammo Pickup Sound" }},
{ 0x1124, new C{ T="Byte", N = "Concurrent Impact Sound Limit" }},
{ 0x1125, new C{ T="Comment", N = "generated_pad4832" }},
{ 0x1128, new C{ T="Tagblock", N = "Sound RTPCs", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="4Byte", N = "Attachment Index" }},
{ 0x4, new C{ T="mmr3Hash", N = "Function" }},
{ 0x8, new C{ T="mmr3Hash", N = "RTPC Name" }},
{ 0xC, new C{ T="4Byte", N = "RTPC name hash value" }},
}, S=16}},
{ 0x113C, new C{ T="Tagblock", N = "Sound Sweeteners", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "Function" }},
{ 0x4, new C{ T="TagRef", N = "sound" }},
{ 0x20, new C{ T="Float", N = "Switch point" }},
{ 0x24, new C{ T="4Byte", N = "Mode" }},
}, S=40}},
{ 0x115017142, new C{ T="Comment", N = "" }},
{ 0x1150, new C{ T="Float", N = "ammo pickup delay" }},
{ 0x1154, new C{ T="4Byte", N = "generated_pad94b1" }},
}},
{ "vehi", new()
{
{ 0x015889, new C{ T="Comment", N = "unit" }},
{ 0x015890, new C{ T="Comment", N = "object" }},
{ 0x015891, new C{ T="Comment", N = "AnyTag" }},
{ 0x0, new C{ T="Pointer", N = "vtable space" }},
{ 0x815892, new C{ T="Comment", N = "internal struct" }},
{ 0x8, new C{ T="4Byte", N = "global tag ID" }},
{ 0xC, new C{ T="4Byte", N = "local tag handle" }},
{ 0x1015893, new C{ T="Comment", N = "OBJECT" }},
{ 0x10, new C{ T="2Byte", N = "runtime object type" }},
{ 0x12, new EnumGroup { A=1, N="Nav Mesh Cutting", STR = new Dictionary<int, string>()
{
{0, "Default" },
{1, "Cut" },
{2, "NotCut" },
}}},
{ 0x13, new EnumGroup { A=1, N="Nav Mesh Cutting mode", STR = new Dictionary<int, string>()
{
{0, "Default" },
{1, "Full" },
{2, "Convex" },
{3, "OBB" },
}}},
{ 0x14, new C{ T="Float", N = "Nav Mesh Silhouette Expansion" }},
{ 0x18, new EnumGroup { A=1, N="navmesh collision node opt in", STR = new Dictionary<int, string>()
{
{0, "Default" },
{1, "Yes" },
{2, "No" },
}}},
{ 0x19, new C{ T="Comment", N = "generated_pad19c8" }},
{ 0x1C15894, new C{ T="Comment", N = "Nav Dangerous Objects" }},
{ 0x1C15895, new C{ T="Comment", N = "Avoidance" }},
{ 0x1C, new C{ T="Float", N = "Avoidance Multiplier" }},
{ 0x20, new C{ T="Float", N = "Avoidance Radius" }},
{ 0x2415896, new C{ T="Comment", N = "" }},
{ 0x24, new FlagGroup { A=4, N="object flags", STR = new Dictionary<int, string>()
{
{0, "always render in floating shadow" },
{1, "preserves initial damage owner" },
{2, "not a pathfinding obstacle" },
{3, "extension of parent" },
{4, "does not cause collision damage" },
{5, "early mover" },
{6, "early mover localized physics" },
{7, "object scales attachments" },
{8, "non physical in map editor" },
{9, "effects created by this object do not spawn objects in multiplayer" },
{10, "does not collide with camera" },
{11, "force collide with camera" },
{12, "damage not blocked by obstructions" },
{13, "early mover localize projectiles" },
{14, "grab parent object in forge editing" },
{15, "Hoistable from stand" },
{16, "Destroyable obstacle" },
{17, "vaultable" },
{18, "collides with own projectiles" },
{19, "object rejects dynamic decals" },
{20, "Do not network" },
{21, "Wake when visible to player" },
{22, "Sleep when not visible to player" },
{23, "Does not accept active camouflage" },
{24, "Killed on first contact or damage" },
{25, "Self-destruct timer kills instead of destroying" },
{26, "is permeable to projectiles" },
{27, "Destroy on player contact" },
{28, "Use the new action and animation system" },
{29, "Allow delayed placement and deletion" },
}}},
{ 0x28, new C{ T="Float", N = "bounding radius" }},
{ 0x2C, new C{ T="Float", N = "bounding offset.X" }},
{ 0x30, new C{ T="Float", N = "bounding offset.Y" }},
{ 0x34, new C{ T="Float", N = "bounding offset.Z" }},
{ 0x38, new C{ T="Float", N = "horizontal acceleration scale" }},
{ 0x3C, new C{ T="Float", N = "vertical acceleration scale" }},
{ 0x40, new C{ T="Float", N = "angular acceleration scale" }},
{ 0x44, new EnumGroup { A=1, N="lightmap shadow mode", STR = new Dictionary<int, string>()
{
{0, "default" },
{1, "never" },
{2, "always" },
{3, "blur" },
}}},
{ 0x45, new EnumGroup { A=1, N="multiple airprobe mode", STR = new Dictionary<int, string>()
{
{0, "default" },
{1, "always" },
}}},
{ 0x46, new EnumGroup { A=1, N="water density", STR = new Dictionary<int, string>()
{
{0, "default" },
{1, "super_floater" },
{2, "floater" },
{3, "neutral" },
{4, "sinker" },
{5, "super_sinker" },
{6, "none" },
}}},
{ 0x4715897, new C{ T="Comment", N = "Streaming" }},
{ 0x4715898, new C{ T="Comment", N = "Streaming" }},
{ 0x47, new FlagGroup { A=1, N="Streaming control flags", STR = new Dictionary<int, string>()
{
{0, "High priority" },
{1, "Apply delay on stream out" },
{2, "Ignore overlapping active objects for collision" },
}}},
{ 0x4815899, new C{ T="Comment", N = "" }},
{ 0x4815900, new C{ T="Comment", N = "impact audio" }},
{ 0x4815901, new C{ T="Comment", N = "IMPACT AUDIO" }},
{ 0x48, new C{ T="Float", N = "small impact minimum speed" }},
{ 0x4C, new C{ T="Float", N = "medium impact minimum speed" }},
{ 0x50, new C{ T="Float", N = "large impact minimum speed" }},
{ 0x54, new C{ T="Float", N = "large impact maximum speed" }},
{ 0x5815902, new C{ T="Comment", N = "" }},
{ 0x58, new C{ T="4Byte", N = "runtime flags" }},
{ 0x5C, new C{ T="Tagblock", N = "source sidecar", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="String", N = "sidecar path" }},
}, S=256}},
{ 0x70, new C{ T="mmr3Hash", N = "default model variant" }},
{ 0x74, new C{ T="mmr3Hash", N = "default style id" }},
{ 0x78, new C{ T="TagRef", N = "model" }},
{ 0x94, new C{ T="TagRef", N = "asset" }},
{ 0xB0, new C{ T="TagRef", N = "frame" }},
{ 0xCC, new C{ T="TagRef", N = "crate object" }},
{ 0xE815903, new C{ T="Comment", N = "Damage Source" }},
{ 0xE815904, new C{ T="Comment", N = "damageSource" }},
{ 0xE8, new C{ T="mmr3Hash", N = "Damage Source Name" }},
{ 0xEC, new C{ T="Float", N = "navpoint vertical offset" }},
{ 0xF015905, new C{ T="Comment", N = "only set this tag if you want to override the default collision damage values in globals.globals" }},
{ 0xF0, new C{ T="TagRef", N = "collision damage" }},
{ 0x10C, new C{ T="Tagblock", N = "early mover OBB", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "node name" }},
{ 0x4, new C{ T="4Byte", N = "runtime node index" }},
{ 0x8, new C{ T="Float", N = "x0" }},
{ 0xC, new C{ T="Float", N = "x1" }},
{ 0x10, new C{ T="Float", N = "y0" }},
{ 0x14, new C{ T="Float", N = "y1" }},
{ 0x18, new C{ T="Float", N = "z0" }},
{ 0x1C, new C{ T="Float", N = "z1" }},
{ 0x20, new C{ T="Float", N = "angles.X" }},
{ 0x24, new C{ T="Float", N = "angles.Y" }},
{ 0x28, new C{ T="Float", N = "angles.Z" }},
}, S=44}},
{ 0x120, new C{ T="TagRef", N = "creation effect" }},
{ 0x13C15906, new C{ T="Comment", N = "material effect references" }},
{ 0x13C15907, new C{ T="Comment", N = "Material Effects Section" }},
{ 0x13C, new C{ T="TagRef", N = "material effects" }},
{ 0x158, new C{ T="TagRef", N = "visual material effects" }},
{ 0x174, new C{ T="TagRef", N = "sound material effects" }},
{ 0x19015908, new C{ T="Comment", N = "" }},
{ 0x190, new C{ T="TagRef", N = "melee sound" }},
{ 0x1AC, new C{ T="Float", N = "Damage Shader Min Vitality" }},
{ 0x1B0, new C{ T="Float", N = "Damage Shader Intensity Scalar" }},
{ 0x1B4, new C{ T="Float", N = "kill on first contact or damage after time" }},
{ 0x1B8, new C{ T="Float", N = "self-destruct time" }},
{ 0x1BC, new C{ T="Float", N = "self-destruct time max" }},
{ 0x1C0, new C{ T="Tagblock", N = "ai properties", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="ai flags", STR = new Dictionary<int, string>()
{
{0, "detroyable cover" },
{1, "pathfinding ignore when dead" },
{2, "dynamic cover" },
{3, "non flight-blocking" },
{4, "dynamic cover from centre" },
{5, "has corner markers" },
{6, "idle when flying" },
{7, "consider for interaction" },
{8, "leap on cover target" },
}}},
{ 0x4, new C{ T="mmr3Hash", N = "ai type name" }},
{ 0x8, new C{ T="mmr3Hash", N = "interaction name" }},
{ 0xC, new EnumGroup { A=2, N="ai size", STR = new Dictionary<int, string>()
{
{0, "default" },
{1, "tiny" },
{2, "small" },
{3, "medium" },
{4, "large" },
{5, "immobile" },
}}},
{ 0xE, new EnumGroup { A=2, N="leap jump speed", STR = new Dictionary<int, string>()
{
{0, "NONE" },
{1, "very short" },
{2, "short" },
{3, "medium short" },
{4, "medium long" },
{5, "long" },
{6, "very long" },
{7, "infinite" },
}}},
{ 0x10, new C{ T="Float", N = "unattached damage modifier" }},
{ 0x14, new FlagGroup { A=1, N="Bot markup flags", STR = new Dictionary<int, string>()
{
{0, "Interact object" },
{1, "Objective pickup" },
{2, "Deliver location" },
{3, "Ammo replenisher" },
{4, "Health replenisher" },
}}},
{ 0x15, new C{ T="Comment", N = "generated_pad9518" }},
{ 0x1815909, new C{ T="Comment", N = "Heat Override" }},
{ 0x18, new C{ T="Tagblock", N = "override heat generated per round", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "heat generated per round override (easy)" }},
{ 0x4, new C{ T="Float", N = "heat generated per round override (normal)" }},
{ 0x8, new C{ T="Float", N = "heat generated per round override (heroic)" }},
{ 0xC, new C{ T="Float", N = "heat generated per round override (legendary)" }},
}, S=16}},
{ 0x2C, new C{ T="Float", N = "Actor LOD cost" }},
}, S=48}},
{ 0x1D4, new C{ T="Tagblock", N = "functions", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="flags", STR = new Dictionary<int, string>()
{
{0, "invert" },
{1, "mapping does not controls active" },
{2, "always active" },
{3, "random time offset" },
{4, "always exports value" },
{5, "turn off with uses magnitude" },
{6, "cannot be predicted" },
}}},
{ 0x4, new C{ T="mmr3Hash", N = "import name" }},
{ 0x8, new C{ T="Float", N = "no import default" }},
{ 0xC, new C{ T="mmr3Hash", N = "export name" }},
{ 0x10, new C{ T="mmr3Hash", N = "turn off with" }},
{ 0x14, new C{ T="mmr3Hash", N = "ranged interpolation name" }},
{ 0x18, new C{ T="Float", N = "min value" }},
{ 0x1C15910, new C{ T="Comment", N = "default function" }},
{ 0x1C15911, new C{ T="Comment", N = "default function" }},
{ 0x1C15912, new C{ T="Comment", N = "" }},
{ 0x1C, new C{ T="Unmapped", N = "data" }},
{ 0x3415913, new C{ T="Comment", N = "" }},
{ 0x34, new C{ T="mmr3Hash", N = "scale by" }},
{ 0x38, new EnumGroup { A=1, N="interpolation point of view", STR = new Dictionary<int, string>()
{
{0, "any" },
{1, "first person" },
{2, "third person" },
}}},
{ 0x39, new C{ T="Comment", N = "generated_pad73a4" }},
{ 0x3C, new C{ T="Tagblock", N = "interpolation", B = new Dictionary<long, C>
{
{ 0x0, new EnumGroup { A=4, N="interpolation mode", STR = new Dictionary<int, string>()
{
{0, "constant velocity" },
{1, "linear acceleration" },
{2, "damped spring" },
{3, "fractional" },
}}},
{ 0x4, new C{ T="Float", N = "linear travel time" }},
{ 0x8, new C{ T="Float", N = "acceleration" }},
{ 0xC15914, new C{ T="Comment", N = "springs" }},
{ 0xC, new C{ T="Float", N = "spring k" }},
{ 0x10, new C{ T="Float", N = "spring c" }},
{ 0x14, new C{ T="Float", N = "fraction" }},
}, S=24}},
{ 0x50, new C{ T="4Byte", N = "runtime interpolator index" }},
}, S=84}},
{ 0x1E8, new C{ T="4Byte", N = "num predicted runtime interpolator functions" }},
{ 0x1EC, new C{ T="Tagblock", N = "runtime interpolator functions", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="4Byte", N = "runtime interpolator to object function mapping" }},
}, S=4}},
{ 0x200, new C{ T="Tagblock", N = "function switches", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "switch function name" }},
{ 0x4, new C{ T="mmr3Hash", N = "export name" }},
{ 0x8, new C{ T="Tagblock", N = "switched functions", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "selection bounds.min" }},
{ 0x4, new C{ T="Float", N = "selection bounds.max" }},
{ 0x8, new C{ T="mmr3Hash", N = "function name" }},
}, S=12}},
}, S=28}},
{ 0x214, new C{ T="Tagblock", N = "functions forwarded to parent", B = new Dictionary<long, C>
{
{ 0x015915, new C{ T="Comment", N = "Object Function Forwarding" }},
{ 0x0, new C{ T="mmr3Hash", N = "function to forward" }},
}, S=4}},
{ 0x228, new FlagGroup { A=2, N="Ammo Refill Flags", STR = new Dictionary<int, string>()
{
{0, "None" },
{1, "Kinetic" },
{2, "Plasma" },
{3, "Hard light" },
{4, "Shock" },
{5, "Power weapon" },
}}},
{ 0x22A, new FlagGroup { A=1, N="Ammo Refill Behavior Flags", STR = new Dictionary<int, string>()
{
{0, "No automatic refill" },
}}},
{ 0x22B, new C{ T="Byte", N = "generated_pad33a9" }},
{ 0x22C, new C{ T="Tagblock", N = "Ammo Refill Variant Flags", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "variant name" }},
{ 0x4, new FlagGroup { A=2, N="Ammo Refill Flags", STR = new Dictionary<int, string>()
{
{0, "None" },
{1, "Kinetic" },
{2, "Plasma" },
{3, "Hard light" },
{4, "Shock" },
{5, "Power weapon" },
}}},
{ 0x6, new FlagGroup { A=1, N="Ammo Refill Behavior Flags", STR = new Dictionary<int, string>()
{
{0, "No automatic refill" },
}}},
{ 0x7, new C{ T="Byte", N = "generated_pad055c" }},
}, S=8}},
{ 0x240, new FlagGroup { A=4, N="object secondary flags", STR = new Dictionary<int, string>()
{
{0, "does not affect projectile aiming" },
{1, "never delete on bsp transition" },
{2, "Aim assist raycast does not ignore parents" },
{3, "Provides an override motion tracker blip sprite" },
{4, "Use the new animation system only" },
{5, "Detach children when the destroyed" },
{6, "Force projectile overpenetration" },
{7, "Create the Object Node Graph Component" },
{8, "Use inertialization" },
{9, "Cannot be grappled" },
{10, "Can be pulled to the player by the grapple hook" },
{11, "Damage Effect Sounds - Play Ineffective Hit" },
{12, "Always forward unhandled object functions to the parent" },
{13, "is valid submunition target" },
{14, "allow repeated bouncing projectile overpenetration" },
{15, "inconsequential target" },
{16, "active camo always on" },
{17, "object is invisible, even attachments" },
{18, "navmesh collision node opt in" },
{19, "Disable CVW Lighting" },
{20, "All Markers Use Unique Acoustic Sound Sources" },
{21, "Damage ignores owning unit" },
{22, "Enable doppler audio" },
{23, "blocks AOE if the AOE's epicenter is blocked" },
{24, "Enable Damage Hit Ticks" },
{25, "Blocks grapple aim assist" },
{26, "Send Damage Aftermath to Parent" },
}}},
{ 0x24415916, new C{ T="Comment", N = "Customization" }},
{ 0x244, new C{ T="mmr3Hash", N = "customization set" }},
{ 0x24815917, new C{ T="Comment", N = "" }},
{ 0x248, new C{ T="Tagblock", N = "attachments", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "name" }},
{ 0x4, new C{ T="TagRef", N = "type" }},
{ 0x20, new C{ T="TagRef", N = "tag graph output" }},
{ 0x3C, new C{ T="mmr3Hash", N = "output node name" }},
{ 0x40, new C{ T="Tagblock", N = "tag graph float params", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "name" }},
{ 0x4, new C{ T="Float", N = "value" }},
}, S=8}},
{ 0x54, new C{ T="TagRef", N = "override type" }},
{ 0x7015918, new C{ T="Comment", N = "variant names" }},
{ 0x70, new C{ T="Tagblock", N = "variant names", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "variant name" }},
}, S=4}},
{ 0x8415919, new C{ T="Comment", N = "" }},
{ 0x84, new C{ T="mmr3Hash", N = "marker" }},
{ 0x88, new EnumGroup { A=1, N="change color", STR = new Dictionary<int, string>()
{
{0, "none" },
{1, "primary" },
{2, "secondary" },
{3, "tertiary" },
{4, "quaternary" },
}}},
{ 0x89, new FlagGroup { A=1, N="flags", STR = new Dictionary<int, string>()
{
{0, "always create" },
{1, "effect size scale from object scale" },
{2, "update on create" },
{3, "always update" },
}}},
{ 0x8A, new C{ T="2Byte", N = "generated_padbd3f" }},
{ 0x8C, new C{ T="mmr3Hash", N = "primary scale" }},
{ 0x90, new C{ T="mmr3Hash", N = "secondary scale" }},
}, S=148}},
{ 0x25C, new C{ T="Tagblock", N = "indirect lighting data", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "Name" }},
{ 0x4, new C{ T="Tagblock", N = "Variant names", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "variant name" }},
}, S=4}},
{ 0x18, new C{ T="TagRef", N = "Object Lightmap" }},
{ 0x34, new C{ T="Tagblock", N = "Object Cubemap set", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "Name" }},
{ 0x4, new FlagGroup { A=4, N="Flags", STR = new Dictionary<int, string>()
{
{0, "Enable Intensity Correction" },
{1, "Capture With Effects" },
{2, "Affects Adjacent Bsps" },
{3, "Capture Dynamic Objects" },
}}},
{ 0x815920, new C{ T="Comment", N = "Dumpling" }},
{ 0x8, new C{ T="Tagblock", N = "inner points", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "position.X" }},
{ 0x4, new C{ T="Float", N = "position.Y" }},
{ 0x8, new C{ T="Float", N = "position.Z" }},
}, S=12}},
{ 0x1C, new C{ T="Tagblock", N = "outer points", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "position.X" }},
{ 0x4, new C{ T="Float", N = "position.Y" }},
{ 0x8, new C{ T="Float", N = "position.Z" }},
}, S=12}},
{ 0x30, new C{ T="Float", N = "height" }},
{ 0x34, new C{ T="Float", N = "sink" }},
{ 0x38, new C{ T="Float", N = "inner value" }},
{ 0x3C, new C{ T="Float", N = "outer value" }},
{ 0x40, new C{ T="Float", N = "center point.X" }},
{ 0x44, new C{ T="Float", N = "center point.Y" }},
{ 0x48, new C{ T="Float", N = "center point.Z" }},
{ 0x4C, new C{ T="Float", N = "trivial cull radius squared" }},
{ 0x50, new C{ T="Float", N = "bound volume" }},
{ 0x54, new C{ T="TagRef", N = "Cubemap Bitmap" }},
{ 0x70, new EnumGroup { A=2, N="Enable Parallax Correction", STR = new Dictionary<int, string>()
{
{0, "Off" },
{1, "On" },
}}},
{ 0x72, new C{ T="2Byte", N = "Cubemap Volume Priority" }},
{ 0x74, new C{ T="Float", N = "Cubemap Origin.X" }},
{ 0x78, new C{ T="Float", N = "Cubemap Origin.Y" }},
{ 0x7C, new C{ T="Float", N = "Cubemap Origin.Z" }},
{ 0x80, new C{ T="Float", N = "Depth Positive.X" }},
{ 0x84, new C{ T="Float", N = "Depth Positive.Y" }},
{ 0x88, new C{ T="Float", N = "Depth Positive.Z" }},
{ 0x8C, new C{ T="Float", N = "Depth Negative.X" }},
{ 0x90, new C{ T="Float", N = "Depth Negative.Y" }},
{ 0x94, new C{ T="Float", N = "Depth Negative.Z" }},
{ 0x98, new EnumGroup { A=2, N="Active Volume", STR = new Dictionary<int, string>()
{
{0, "Off" },
{1, "On" },
}}},
{ 0x9A, new EnumGroup { A=2, N="Maximum cubemap size", STR = new Dictionary<int, string>()
{
{0, "128x128" },
{1, "256x256" },
{2, "512x512" },
}}},
{ 0x9C, new C{ T="Float", N = "Intensity.X" }},
{ 0xA0, new C{ T="Float", N = "Intensity.Y" }},
{ 0xA4, new C{ T="Float", N = "Intensity.Z" }},
{ 0xA8, new C{ T="Float", N = "Self-illum Scale Down" }},
{ 0xAC, new C{ T="Tagblock", N = "EditorMetadata", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="String", N = "folder name" }},
{ 0x100, new C{ T="Float", N = "local space pivot point position.X" }},
{ 0x104, new C{ T="Float", N = "local space pivot point position.Y" }},
{ 0x108, new C{ T="Float", N = "local space pivot point position.Z" }},
}, S=268}},
{ 0xC0, new C{ T="TagRef", N = "owner bsp" }},
{ 0xDC, new C{ T="mmr3Hash", N = "owner variant" }},
{ 0xE0, new C{ T="2Byte", N = "runtime bsp index" }},
{ 0xE2, new C{ T="2Byte", N = "runtime variant index" }},
{ 0xE4, new C{ T="Float", N = "Blend Distance" }},
{ 0xE8, new EnumGroup { A=4, N="Cubemap Volume Type", STR = new Dictionary<int, string>()
{
{0, "Prism" },
{1, "Sphere" },
}}},
{ 0xEC, new C{ T="Float", N = "Orientation" }},
{ 0xF0, new C{ T="TagRef", N = "Cubemap Depth Bitmap" }},
{ 0x10C, new C{ T="Float", N = "Depth Blend Range" }},
{ 0x110, new C{ T="Float", N = "Intensity Scale" }},
{ 0x114, new EnumGroup { A=2, N="Tintable", STR = new Dictionary<int, string>()
{
{0, "Off" },
{1, "On" },
}}},
{ 0x116, new C{ T="2Byte", N = "generated_pad93d5" }},
{ 0x118, new C{ T="Float", N = "Relevancy Radius" }},
}, S=284}},
}, S=72}},
{ 0x270, new C{ T="Tagblock", N = "hull surfaces", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=2, N="flags", STR = new Dictionary<int, string>()
{
{0, "works on land" },
{1, "effects only" },
}}},
{ 0x2, new C{ T="2Byte", N = "generated_pad978b" }},
{ 0x415921, new C{ T="Comment", N = "" }},
{ 0x4, new C{ T="mmr3Hash", N = "marker name" }},
{ 0x8, new C{ T="Float", N = "radius" }},
{ 0xC, new C{ T="Tagblock", N = "drag", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "material" }},
{ 0x415922, new C{ T="Comment", N = "drag" }},
{ 0x415923, new C{ T="Comment", N = "Pressure" }},
{ 0x415924, new C{ T="Comment", N = "pressure" }},
{ 0x415925, new C{ T="Comment", N = "velocity to force" }},
{ 0x415926, new C{ T="Comment", N = "velocity to pressure" }},
{ 0x415927, new C{ T="Comment", N = "" }},
{ 0x4, new C{ T="Unmapped", N = "data" }},
{ 0x1C15928, new C{ T="Comment", N = "" }},
{ 0x1C, new C{ T="Float", N = "max velocity" }},
{ 0x2015929, new C{ T="Comment", N = "" }},
{ 0x2015930, new C{ T="Comment", N = "Suction" }},
{ 0x2015931, new C{ T="Comment", N = "suction" }},
{ 0x2015932, new C{ T="Comment", N = "velocity to force" }},
{ 0x2015933, new C{ T="Comment", N = "velocity to pressure" }},
{ 0x2015934, new C{ T="Comment", N = "" }},
{ 0x20, new C{ T="Unmapped", N = "data" }},
{ 0x3815935, new C{ T="Comment", N = "" }},
{ 0x38, new C{ T="Float", N = "max velocity" }},
{ 0x3C15936, new C{ T="Comment", N = "" }},
{ 0x3C, new C{ T="Float", N = "linear damping" }},
{ 0x40, new C{ T="Float", N = "angular damping" }},
}, S=68}},
}, S=32}},
{ 0x284, new C{ T="Tagblock", N = "jetwash", B = new Dictionary<long, C>
{
{ 0x015937, new C{ T="Comment", N = "" }},
{ 0x0, new C{ T="mmr3Hash", N = "marker name" }},
{ 0x4, new C{ T="Float", N = "radius" }},
{ 0x8, new C{ T="4Byte", N = "maximum traces" }},
{ 0xC, new C{ T="Float", N = "maximum emission length" }},
{ 0x10, new C{ T="Float", N = "trace yaw angle.min" }},
{ 0x14, new C{ T="Float", N = "trace yaw angle.max" }},
{ 0x18, new C{ T="Float", N = "trace pitch angle.min" }},
{ 0x1C, new C{ T="Float", N = "trace pitch angle.max" }},
{ 0x20, new C{ T="Float", N = "particle offset" }},
}, S=36}},
{ 0x298, new C{ T="Tagblock", N = "widgets", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "type" }},
}, S=28}},
{ 0x2AC, new C{ T="Tagblock", N = "change colors", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Tagblock", N = "initial permutations", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "weight" }},
{ 0x4, new C{ T="Unmapped", N = "color lower bound" }},
{ 0x10, new C{ T="Unmapped", N = "color upper bound" }},
{ 0x1C, new C{ T="mmr3Hash", N = "variant name" }},
}, S=32}},
{ 0x14, new C{ T="Tagblock", N = "functions", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="scale flags", STR = new Dictionary<int, string>()
{
{0, "blend in hsv" },
{1, "...more colors" },
}}},
{ 0x4, new C{ T="Unmapped", N = "color lower bound" }},
{ 0x10, new C{ T="Unmapped", N = "color upper bound" }},
{ 0x1C, new C{ T="mmr3Hash", N = "darken by" }},
{ 0x20, new C{ T="mmr3Hash", N = "scale by" }},
}, S=36}},
}, S=40}},
{ 0x2C0, new C{ T="Tagblock", N = "multiplayer object", B = new Dictionary<long, C>
{
{ 0x015938, new C{ T="Comment", N = "TYPE AND FLAGS" }},
{ 0x0, new EnumGroup { A=1, N="type", STR = new Dictionary<int, string>()
{
{0, "ordinary" },
{1, "weapon" },
{2, "grenade" },
{3, "projectile" },
{4, "powerup" },
{5, "equipment" },
{6, "ammo pack" },
{7, "light land vehicle" },
{8, "heavy land vehicle" },
{9, "flying vehicle" },
{10, "turret" },
{11, "device" },
{12, "dispenser" },
{13, "teleporter 2way" },
{14, "teleporter sender" },
{15, "teleporter receiver" },
{16, "player spawn location" },
{17, "player respawn zone" },
{18, "named location area" },
{19, "danger zone" },
{20, "safe volume" },
{21, "kill volume" },
{22, "cinematic camera" },
{23, "trait zone" },
{24, "powerup pad - deprecated" },
{25, "weapon pad" },
{26, "light" },
{27, "jumbotron" },
{28, "man cannon" },
{29, "cinematic marker" },
{30, "script brain" },
{31, "static io" },
{32, "fx" },
{33, "bot navigation marker" },
{34, "jump hint volume" },
}}},
{ 0x1, new FlagGroup { A=1, N="teleporter passability", STR = new Dictionary<int, string>()
{
{0, "disallow players" },
{1, "allow light land vehicles" },
{2, "allow heavy land vehicles" },
{3, "allow flying vehicles" },
{4, "allow projectiles" },
}}},
{ 0x2, new EnumGroup { A=1, N="spawn timer type", STR = new Dictionary<int, string>()
{
{0, "starts on death" },
{1, "starts on disturbance" },
}}},
{ 0x3, new C{ T="Byte", N = "generated_padd1ba" }},
{ 0x4, new C{ T="2Byte", N = "number of fx color overrides" }},
{ 0x6, new C{ T="2Byte", N = "generated_pad1e6f" }},
{ 0x815939, new C{ T="Comment", N = "GOAL AND RESPAWN ZONE OBJECT BOUNDARY" }},
{ 0x8, new C{ T="Float", N = "boundary width/radius" }},
{ 0xC, new C{ T="Float", N = "boundary box length" }},
{ 0x10, new C{ T="Float", N = "boundary +height" }},
{ 0x14, new C{ T="Float", N = "boundary -height" }},
{ 0x18, new EnumGroup { A=1, N="boundary shape", STR = new Dictionary<int, string>()
{
{0, "unused" },
{1, "sphere" },
{2, "cylinder" },
{3, "box" },
}}},
{ 0x19, new C{ T="Byte", N = "pad_shape1" }},
{ 0x1A, new C{ T="2Byte", N = "pad_shape2" }},
{ 0x1C15940, new C{ T="Comment", N = "SPAWNING DATA" }},
{ 0x1C, new C{ T="2Byte", N = "default spawn time" }},
{ 0x1E, new C{ T="2Byte", N = "default abandonment time" }},
{ 0x20, new FlagGroup { A=4, N="flags", STR = new Dictionary<int, string>()
{
{0, "Only render if editable" },
{1, "DEPRECATED phased physics in forge" },
{2, "valid initial player spawn" },
{3, "fixed boundary orientation" },
{4, "candy monitor should ignore" },
{5, "inherit owning team color" },
{6, "boundary volume doesn't kill immediately" },
{7, "Only collision if editable" },
{8, "Only physics if editable" },
{9, "Force render in Forge" },
{10, "respawn player spawn" },
{11, "fallback player spawn" },
{12, "jump hint volume is one-way" },
}}},
{ 0x2415941, new C{ T="Comment", N = "RESPAWN ZONE DATA" }},
{ 0x24, new C{ T="Float", N = "normal weight" }},
{ 0x28, new C{ T="Tagblock", N = "falloff function", B = new Dictionary<long, C>
{
{ 0x015942, new C{ T="Comment", N = "function" }},
{ 0x015943, new C{ T="Comment", N = "function" }},
{ 0x015944, new C{ T="Comment", N = "function" }},
{ 0x015945, new C{ T="Comment", N = "" }},
{ 0x0, new C{ T="Unmapped", N = "data" }},
{ 0x1815946, new C{ T="Comment", N = "" }},
}, S=24}},
{ 0x3C15947, new C{ T="Comment", N = "MARKER DATA" }},
{ 0x3C15948, new C{ T="Comment", N = "" }},
{ 0x3C, new C{ T="mmr3Hash", N = "boundary center marker" }},
{ 0x4015949, new C{ T="Comment", N = "" }},
{ 0x40, new C{ T="mmr3Hash", N = "spawned object marker name" }},
{ 0x4415950, new C{ T="Comment", N = "SPAWNED OBJECT" }},
{ 0x44, new C{ T="TagRef", N = "spawned object" }},
{ 0x60, new C{ T="mmr3Hash", N = "NYI boundary material" }},
{ 0x6415951, new C{ T="Comment", N = "BOUNDARY SHADER - DEFAULT" }},
{ 0x64, new C{ T="TagRef", N = "boundary standard shader" }},
{ 0x8015952, new C{ T="Comment", N = "BOUNDARY SHADER - SPHERE" }},
{ 0x80, new C{ T="TagRef", N = "sphere standard shader" }},
{ 0x9C15953, new C{ T="Comment", N = "BOUNDARY SHADER - CYLINDER" }},
{ 0x9C, new C{ T="TagRef", N = "cylinder standard shader" }},
{ 0xB815954, new C{ T="Comment", N = "BOUNDARY SHADER - BOX" }},
{ 0xB8, new C{ T="TagRef", N = "box standard shader" }},
{ 0xD415955, new C{ T="Comment", N = "FORGE DATA" }},
{ 0xD4, new FlagGroup { A=2, N="Forge Property Flags", STR = new Dictionary<int, string>()
{
{0, "Disable yaw" },
{1, "Can Only Be Rotated On Yaw" },
{2, "Allow In Game Variant Toggle" },
{3, "Disable primary color change" },
{4, "Disable secondary color change" },
{5, "Disable tertiary color change" },
{6, "Disable normal physics" },
{7, "Disable fixed physics" },
{8, "Disable phased physics" },
}}},
{ 0xD6, new EnumGroup { A=1, N="Default Physics Type", STR = new Dictionary<int, string>()
{
{0, "Normal" },
{1, "Fixed" },
{2, "Phased" },
}}},
{ 0xD7, new C{ T="Byte", N = "generated_pad6b24" }},
{ 0xD8, new C{ T="mmr3Hash", N = "Default Primary Color" }},
{ 0xDC, new C{ T="mmr3Hash", N = "Default Secondary Color" }},
{ 0xE0, new C{ T="mmr3Hash", N = "Default Tertiary Color" }},
{ 0xE4, new C{ T="Byte", N = "Default Primary Glossiness" }},
{ 0xE5, new C{ T="Byte", N = "Default Secondary Glossiness" }},
{ 0xE6, new C{ T="Byte", N = "Default Tertiary Glossiness" }},
{ 0xE7, new C{ T="Byte", N = "generated_padb7d9" }},
{ 0xE8, new C{ T="mmr3Hash", N = "Default Label [1]" }},
{ 0xEC, new C{ T="mmr3Hash", N = "Default Label [2]" }},
{ 0xF0, new C{ T="mmr3Hash", N = "Default Label [3]" }},
{ 0xF4, new C{ T="mmr3Hash", N = "Default Label [4]" }},
{ 0xF8, new C{ T="Pointer", N = "m_defaultBoundaryPipelineState" }},
{ 0x100, new C{ T="Pointer", N = "m_sphereBoundaryPipelineStates" }},
{ 0x108, new C{ T="Pointer", N = "m_cylinderBoundaryPipelineStates" }},
{ 0x110, new C{ T="Pointer", N = "m_boxBoundaryPipelineStates" }},
{ 0x118, new C{ T="Float", N = "Callout Radius" }},
{ 0x11C, new C{ T="4Byte", N = "generated_pad048e" }},
}, S=288}},
{ 0x2D4, new C{ T="Tagblock", N = "Forge data", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "Palette" }},
{ 0x1C, new C{ T="mmr3Hash", N = "Name" }},
{ 0x20, new C{ T="mmr3Hash", N = "Description" }},
{ 0x24, new C{ T="Float", N = "Placement Priority" }},
{ 0x28, new C{ T="mmr3Hash", N = "Variant Name" }},
{ 0x2C, new C{ T="TagRef", N = "Configuration" }},
{ 0x48, new C{ T="Float", N = "Starting yaw/pitch/roll.X" }},
{ 0x4C, new C{ T="Float", N = "Starting yaw/pitch/roll.Y" }},
{ 0x50, new C{ T="Float", N = "Starting yaw/pitch/roll.Z" }},
}, S=84}},
{ 0x2E8, new C{ T="TagRef", N = "simulation_interpolation" }},
{ 0x304, new C{ T="TagRef", N = "authority trust settings" }},
{ 0x320, new C{ T="Tagblock", N = "spawn effects", B = new Dictionary<long, C>
{
{ 0x015956, new C{ T="Comment", N = "Spawn Effects" }},
{ 0x0, new C{ T="TagRef", N = "multiplayer spawn effect" }},
{ 0x1C, new C{ T="TagRef", N = "campaign spawn effect" }},
}, S=56}},
{ 0x334, new C{ T="Tagblock", N = "model dissolve data", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "model dissolve data" }},
}, S=28}},
{ 0x348, new C{ T="String", N = "class name" }},
{ 0x448, new C{ T="Tagblock", N = "script tagalongs", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "reference" }},
}, S=28}},
{ 0x45C, new C{ T="TagRef", N = "prototype script" }},
{ 0x47815957, new C{ T="Comment", N = "Object Abandoment" }},
{ 0x47815958, new C{ T="Comment", N = "object abandonment" }},
{ 0x478, new C{ T="Float", N = "Vitality Limit To Start Countdown" }},
{ 0x47C, new C{ T="Float", N = "Countdown Time In Seconds" }},
{ 0x480, new FlagGroup { A=1, N="flags", STR = new Dictionary<int, string>()
{
{0, "Enable In Multiplayer" },
{1, "Enable In Single Player" },
}}},
{ 0x481, new C{ T="Comment", N = "generated_pade8bf" }},
{ 0x484, new C{ T="Tagblock", N = "Designer Metadata", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "meta label" }},
}, S=4}},
{ 0x49815959, new C{ T="Comment", N = "Object Function Smoothing" }},
{ 0x498, new C{ T="Tagblock", N = "Object Sound RTPCs", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="4Byte", N = "Attachment Index" }},
{ 0x4, new C{ T="mmr3Hash", N = "Function" }},
{ 0x8, new C{ T="mmr3Hash", N = "RTPC Name" }},
{ 0xC, new C{ T="4Byte", N = "RTPC name hash value" }},
}, S=16}},
{ 0x4AC, new C{ T="Tagblock", N = "Object Sound Sweeteners", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "Function" }},
{ 0x4, new C{ T="TagRef", N = "sound" }},
{ 0x20, new C{ T="Float", N = "Switch point" }},
{ 0x24, new C{ T="4Byte", N = "Mode" }},
}, S=40}},
{ 0x4C0, new C{ T="mmr3Hash", N = "Audio acoustics root marker override" }},
{ 0x4C4, new C{ T="Float", N = "Audio Acoustics Transparency" }},
{ 0x4C8, new C{ T="Tagblock", N = "Object function smoothing", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "id" }},
{ 0x4, new C{ T="mmr3Hash", N = "alias of" }},
{ 0x8, new C{ T="Float", N = "smoothing factor" }},
}, S=12}},
{ 0x4DC, new EnumGroup { A=1, N="Animated mesh animation type", STR = new Dictionary<int, string>()
{
{0, "None" },
{1, "One Time" },
{2, "Looping" },
}}},
{ 0x4DD, new C{ T="Comment", N = "generated_pad805e" }},
{ 0x4E0, new C{ T="Float", N = "Placement cost multiplier" }},
{ 0x4E4, new C{ T="TagRef", N = "Trigger volume component info" }},
{ 0x500, new C{ T="Tagblock", N = "Tracking Info", B = new Dictionary<long, C>
{
{ 0x015960, new C{ T="Comment", N = "Map these settings to a ping type" }},
{ 0x0, new FlagGroup { A=1, N="flags", STR = new Dictionary<int, string>()
{
{0, "trackable" },
{1, "enabled by default" },
{2, "outline" },
{3, "immediate response" },
{4, "follow offscreen" },
{5, "do not track children" },
{6, "do not outline children" },
}}},
{ 0x1, new EnumGroup { A=1, N="ping type", STR = new Dictionary<int, string>()
{
{0, "active" },
{1, "passive" },
{2, "custom active" },
{3, "target marking" },
}}},
{ 0x2, new EnumGroup { A=1, N="team visibility", STR = new Dictionary<int, string>()
{
{0, "visible to everyone" },
{1, "hidden from enemies" },
{2, "hidden from friends" },
}}},
{ 0x315961, new C{ T="Comment", N = "Misc" }},
{ 0x3, new EnumGroup { A=1, N="priority", STR = new Dictionary<int, string>()
{
{0, "critical" },
{1, "high" },
{2, "normal" },
{3, "low" },
}}},
{ 0x415962, new C{ T="Comment", N = "" }},
{ 0x4, new C{ T="mmr3Hash", N = "ping group" }},
{ 0x815963, new C{ T="Comment", N = "Nav Point" }},
{ 0x8, new C{ T="mmr3Hash", N = "nav point screen" }},
{ 0xC, new C{ T="mmr3Hash", N = "nav point label" }},
{ 0x10, new C{ T="Float", N = "nav point vertical offset" }},
{ 0x1415964, new C{ T="Comment", N = "" }},
{ 0x1415965, new C{ T="Comment", N = "Range Override" }},
{ 0x14, new C{ T="Float", N = "range" }},
{ 0x1815966, new C{ T="Comment", N = "Effects" }},
{ 0x18, new C{ T="TagRef", N = "ping hit instigator effect" }},
{ 0x34, new C{ T="TagRef", N = "ping hit effect" }},
{ 0x50, new C{ T="TagRef", N = "outline override" }},
{ 0x6C15967, new C{ T="Comment", N = "" }},
}, S=108}},
{ 0x514, new C{ T="TagRef", N = "Property Based Effects" }},
{ 0x530, new C{ T="Tagblock", N = "Interactions", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "Marker" }},
{ 0x4, new C{ T="Tagblock", N = "Ambient Info", B = new Dictionary<long, C>
{
{ 0x0, new EnumGroup { A=1, N="desire type", STR = new Dictionary<int, string>()
{
{0, "Scripted" },
{1, "Health" },
{2, "Defense" },
{3, "Attack Enemy" },
{4, "Weapon" },
{5, "Vehicle" },
}}},
{ 0x1, new C{ T="Comment", N = "generated_pad5f2a" }},
{ 0x4, new EnumGroup { A=4, N="action", STR = new Dictionary<int, string>()
{
{0, "Base (Do not use)" },
{1, "Ground" },
{2, "Crouch" },
{3, "Melee" },
{4, "Turn" },
{5, "Shoot" },
{6, "Airborne" },
{7, "Jump" },
{8, "WeaponReady" },
{9, "WeaponSwitch" },
{10, "WeaponPickup" },
{11, "WeaponDrop" },
{12, "Grenade" },
{13, "Dead" },
{14, "AnimatedMove" },
{15, "InteractWeaponPickup" },
{16, "InteractDevice" },
{17, "InteractLaunchObject" },
{18, "HardPing" },
{19, "Align" },
{20, "ShieldRaise" },
{21, "ActivateEquipment" },
{22, "PhysicsImpulse" },
{23, "DeathPing" },
{24, "MediumPing" },
{25, "SoftPing" },
{26, "ScriptedSequence" },
{27, "CustomAnimation" },
{28, "DeflectProjectile" },
{29, "VehicleEnter" },
{30, "VehicleExit" },
{31, "Vehicle" },
{32, "Brace" },
{33, "WeaponDraw" },
{34, "WeaponStow" },
{35, "HardStop" },
{36, "Hoist" },
{37, "PreCombatPointActivity" },
{38, "Stunned" },
{39, "ObstacleSmash" },
{40, "WeaponVent" },
{41, "SoftPingDefenseScreen" },
{42, "ThrowEquipment" },
{43, "Hijack" },
{44, "Kamikaze" },
{45, "CloseQuartersDefenseBlast" },
{46, "Search" },
{47, "SearchFound" },
{48, "Surprise" },
{49, "Hover" },
{50, "Alert" },
{51, "AlertCallout" },
{52, "WeaponFidget" },
{53, "WeaponReload" },
{54, "FullbodyAnimation" },
{55, "ActivateCamo" },
{56, "TradeWeapon" },
{57, "Flying" },
{58, "MultiTargetTrackedAttack" },
{59, "Berserk" },
{60, "LeapWindup" },
{61, "AnimatedTell" },
{62, "TeleportArrive" },
{63, "JinkFire" },
{64, "DialogueAnimation" },
{65, "Swoop" },
{66, "AirborneMelee" },
{67, "Land" },
{68, "Hunker" },
{69, "Launching" },
{70, "PreAndPostFire" },
{71, "AnimatedPosture" },
{72, "Boarding" },
}}},
{ 0x8, new C{ T="mmr3Hash", N = "Animation Token Override" }},
{ 0xC, new C{ T="Float", N = "Time playing animation" }},
{ 0x10, new C{ T="Float", N = "Cooldown time" }},
{ 0x14, new C{ T="mmr3Hash", N = "composition name" }},
{ 0x18, new C{ T="TagRef", N = "composition definition" }},
{ 0x34, new C{ T="Float", N = "Max distance agents will consider this opp from" }},
{ 0x38, new C{ T="Tagblock", N = "Ambient meta labels", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "meta label" }},
}, S=4}},
{ 0x4C, new C{ T="Tagblock", N = "Exclusion meta labels", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "meta label" }},
}, S=4}},
{ 0x60, new C{ T="Float", N = "Min Danger to Activate" }},
{ 0x64, new C{ T="Float", N = "Max Danger to Activate" }},
{ 0x68, new C{ T="Float", N = "Abort Danger Level" }},
{ 0x6C, new C{ T="Float", N = "Chance Per Second" }},
{ 0x70, new C{ T="Float", N = "Min Enemy Target Distance" }},
{ 0x74, new C{ T="Float", N = "Max Enemy Target Distance" }},
{ 0x78, new C{ T="Float", N = "Max Height Difference" }},
}, S=124}},
}, S=24}},
{ 0x54415968, new C{ T="Comment", N = "Motion tracker blips" }},
{ 0x544, new EnumGroup { A=1, N="blip sprite index override", STR = new Dictionary<int, string>()
{
{0, "Self" },
{1, "Vehicle Ally" },
{2, "Vehicle Enemy" },
{3, "Vehicle Ally Gutter" },
{4, "Vehicle Enemy Gutter" },
{5, "Vehicle Ally Vertical" },
{6, "Vehicle Enemy Vertical" },
{7, "Vehicle Ally Gutter Vertical" },
{8, "Vehicle Enemy Gutter Vertical" },
{9, "Human Ally" },
{10, "Human Enemy" },
{11, "Human Ally Gutter" },
{12, "Human Enemy Gutter" },
{13, "Human Ally Vertical" },
{14, "Human Enemy Vertical" },
{15, "Human Ally Gutter Vertical" },
{16, "Human Enemy Gutter Vertical" },
{17, "Major AI Ally" },
{18, "Major AI Enemy" },
{19, "Major AI Ally Gutter" },
{20, "Major AI Enemy Gutter" },
{21, "Major AI Ally Vertical" },
{22, "Major AI Enemy Vertical" },
{23, "Major AI Ally Gutter Vertical" },
{24, "Major AI Enemy Gutter Vertical" },
{25, "Minor AI Ally" },
{26, "Minor AI Enemy" },
{27, "Minor AI Ally Vertical" },
{28, "Minor AI Enemy Vertical" },
{29, "Unnamed sprite index29" },
{30, "Unnamed sprite index30" },
{31, "Unnamed sprite index31" },
}}},
{ 0x545, new C{ T="Comment", N = "generated_pad9a3f" }},
{ 0x54815969, new C{ T="Comment", N = "" }},
{ 0x548, new C{ T="Tagblock", N = "data driven scripted sequence actions definitions.", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="String", N = "Prototype trigger lua function name" }},
{ 0x20, new C{ T="Tagblock", N = "Component Actions", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="String", N = "Request action lua function name" }},
{ 0x20, new C{ T="String", N = "Go to next action condition lua function name" }},
}, S=64}},
}, S=52}},
{ 0x55C, new C{ T="TagRef", N = "Animation Node Graph" }},
{ 0x57815970, new C{ T="Comment", N = "Anim Set Table" }},
{ 0x578, new C{ T="Tagblock", N = "channels", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "channel" }},
}, S=4}},
{ 0x58C, new C{ T="Tagblock", N = "table entries", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "token" }},
{ 0x4, new C{ T="TagRef", N = "animset" }},
{ 0x20, new C{ T="TagRef", N = "Runtime animset (used by code only)" }},
{ 0x3C, new C{ T="Byte", N = "is default" }},
{ 0x3D, new C{ T="Byte", N = "generated_padca09" }},
{ 0x3E, new FlagGroup { A=2, N="flags", STR = new Dictionary<int, string>()
{
{0, "is default" },
}}},
{ 0x40, new C{ T="Tagblock", N = "Variants", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "Variant" }},
}, S=4}},
}, S=84}},
{ 0x5A0, new C{ T="Float", N = "Inertialization Duration" }},
{ 0x5A4, new C{ T="Float", N = "Pill Offset Blend Rate For Ground IK" }},
{ 0x5A8, new C{ T="Float", N = "Stationary Root Offset Limit.min" }},
{ 0x5AC, new C{ T="Float", N = "Stationary Root Offset Limit.max" }},
{ 0x5B0, new C{ T="Float", N = "Moving Root Offset Limit.min" }},
{ 0x5B4, new C{ T="Float", N = "Moving Root Offset Limit.max" }},
{ 0x5B8, new C{ T="Float", N = "Ground IK marker above ground tolerance" }},
{ 0x5BC, new C{ T="Float", N = "Ground Probe Start Position Height Scale for Ground IK" }},
{ 0x5C0, new C{ T="Float", N = "Ground Probe Additional Height Distance" }},
{ 0x5C4, new C{ T="Unmapped", N = "Anim Set Nodegraph Metadata" }},
{ 0x5DC15971, new C{ T="Comment", N = "Root Bone Correction Settings" }},
{ 0x5DC15972, new C{ T="Comment", N = "RootBoneCorrectionSettings" }},
{ 0x5DC, new FlagGroup { A=1, N="flags", STR = new Dictionary<int, string>()
{
{0, "AnimEventFunctionOverrideCorrectionType" },
}}},
{ 0x5DD, new EnumGroup { A=1, N="Root Bone Correction Type", STR = new Dictionary<int, string>()
{
{0, "Off" },
{1, "FractionOfAnimationDuration" },
{2, "StaticDuration" },
}}},
{ 0x5DE, new C{ T="2Byte", N = "generated_pad0a63" }},
{ 0x5E0, new C{ T="Float", N = "Root Bone Correction Duration" }},
{ 0x5E4, new EnumGroup { A=1, N="Root Bone Correction Bone Index", STR = new Dictionary<int, string>()
{
{0, "RootBone" },
{1, "Pelvis" },
}}},
{ 0x5E5, new C{ T="Comment", N = "generated_padbdae" }},
{ 0x5E815973, new C{ T="Comment", N = "" }},
{ 0x5E8, new C{ T="Tagblock", N = "Leg Grounding Settings", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "Marker" }},
{ 0x4, new C{ T="Float", N = "Planted Threshold" }},
{ 0x8, new C{ T="Float", N = "Lifted Threshold" }},
{ 0xC, new C{ T="Float", N = "Lifted Minimum Time" }},
{ 0x10, new EnumGroup { A=2, N="Event", STR = new Dictionary<int, string>()
{
{0, "none" },
{1, "primary_keyframe" },
{2, "secondary_keyframe" },
{3, "tertiary_keyframe" },
{4, "left_foot" },
{5, "right_foot" },
{6, "allow_interruption" },
{7, "do_not_allow_interruption" },
{8, "both_feet_shuffle" },
{9, "body_impact" },
{10, "left_foot_lock" },
{11, "left_foot_unlock" },
{12, "right_foot_lock" },
{13, "right_foot_unlock" },
{14, "blend_range_marker" },
{15, "stride_expansion" },
{16, "stride_contraction" },
{17, "ragdoll_keyframe" },
{18, "drop_weapon_keyframe" },
{19, "match_a" },
{20, "match_b" },
{21, "match_c" },
{22, "match_d" },
{23, "jetpack_closed" },
{24, "jetpack_open" },
{25, "sound_event" },
{26, "effect_event" },
{27, "left_hand" },
{28, "right_hand" },
{29, "grenade" },
{30, "melee" },
{31, "interact_device" },
{32, "shield_raise" },
{33, "activate_equipment" },
{34, "aoe_attack" },
{35, "equipment" },
{36, "jink_fire" },
{37, "align_to_target" },
{38, "block_exiting" },
{39, "set_interruptable" },
{40, "disable_shooting" },
{41, "re_enable_shooting" },
{42, "skip_crouch_transition" },
{43, "start_bamf" },
{44, "end_bamf" },
{45, "hide" },
{46, "frame_attachment_objects_show" },
{47, "frame_attachment_objects_hide" },
{48, "creature_physics_mode_change" },
{49, "melee_range" },
{50, "frame_attachment_switch_to_secondary_parent_marker" },
{51, "frame_attachment_switch_to_default_parent_marker" },
{52, "allow_sprint_interrupt" },
}}},
{ 0x12, new C{ T="2Byte", N = "generated_paddc16" }},
}, S=20}},
{ 0x5FC15974, new C{ T="Comment", N = "Wrist Break Fixup" }},
{ 0x5FC, new C{ T="Float", N = "Wrist Break Interp Time" }},
{ 0x600, new C{ T="Float", N = "Wrist Break Angle Limit" }},
{ 0x604, new C{ T="Float", N = "Wrist Break Fixup Scale" }},
{ 0x60815975, new C{ T="Comment", N = "" }},
{ 0x608, new FlagGroup { A=1, N="Flags", STR = new Dictionary<int, string>()
{
{0, "Use Procedural Footstep Events" },
{1, "Use Wrist Break IK Fixup" },
}}},
{ 0x609, new C{ T="Comment", N = "generated_pad6f99" }},
{ 0x60C15976, new C{ T="Comment", N = "Object Node Graph" }},
{ 0x60C, new C{ T="Tagblock", N = "Object Node Graphs", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "Name" }},
{ 0x4, new C{ T="TagRef", N = "Exported Node Graph" }},
{ 0x20, new FlagGroup { A=1, N="Flags", STR = new Dictionary<int, string>()
{
{0, "Runs on Server" },
{1, "Runs on Client" },
{2, "Start updating on the first frame" },
}}},
{ 0x21, new EnumGroup { A=1, N="Enable Node Graph", STR = new Dictionary<int, string>()
{
{0, "Default" },
{1, "Yes" },
{2, "No" },
}}},
{ 0x22, new C{ T="2Byte", N = "generated_pad8671" }},
}, S=36}},
{ 0x62015977, new C{ T="Comment", N = "" }},
{ 0x620, new C{ T="Tagblock", N = "parent animation matching", B = new Dictionary<long, C>
{
{ 0x015978, new C{ T="Comment", N = "ANIMATION REMAPPING" }},
{ 0x0, new C{ T="mmr3Hash", N = "animation on parent" }},
{ 0x4, new C{ T="mmr3Hash", N = "animation to play on object" }},
{ 0x8, new C{ T="mmr3Hash", N = "animation set to use with the child object's animation" }},
}, S=12}},
{ 0x63415979, new C{ T="Comment", N = "model variant switching" }},
{ 0x63415980, new C{ T="Comment", N = "MODEL VARIANT SWITCHING" }},
{ 0x634, new C{ T="mmr3Hash", N = "model variant switching function" }},
{ 0x638, new C{ T="Tagblock", N = "model variant switching table", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "function result range.min" }},
{ 0x4, new C{ T="Float", N = "function result range.max" }},
{ 0x8, new C{ T="mmr3Hash", N = "model variant name" }},
}, S=12}},
{ 0x64C15981, new C{ T="Comment", N = "" }},
{ 0x64C15982, new C{ T="Comment", N = "knockback" }},
{ 0x64C, new C{ T="Float", N = "knockback impulse scalar" }},
{ 0x65015983, new C{ T="Comment", N = "" }},
{ 0x65015984, new C{ T="Comment", N = "Ability Components" }},
{ 0x650, new C{ T="Tagblock", N = "location sensor", B = new Dictionary<long, C>
{
{ 0x015985, new C{ T="Comment", N = "Sensor Parameters" }},
{ 0x0, new FlagGroup { A=4, N="sensor flags", STR = new Dictionary<int, string>()
{
{0, "use proximity activation" },
{1, "use reveal duration inside detection radius" },
{2, "use order based reveal delays" },
{3, "don't reveal targets to the motion tracker" },
{4, "only play radius effect for owner" },
{5, "show player name instead of health" },
}}},
{ 0x4, new C{ T="Float", N = "ping frequency" }},
{ 0x8, new C{ T="Float", N = "ping radius" }},
{ 0xC, new C{ T="Float", N = "reveal duration" }},
{ 0x10, new C{ T="Float", N = "scanning duration" }},
{ 0x14, new C{ T="Float", N = "minimum delay between marks" }},
{ 0x18, new C{ T="Float", N = "delay per distance" }},
{ 0x1C15986, new C{ T="Comment", N = "" }},
{ 0x1C15987, new C{ T="Comment", N = "Sensor Visuals" }},
{ 0x1C, new C{ T="TagRef", N = "sensor radius effect" }},
{ 0x38, new C{ T="mmr3Hash", N = "sensor radius effect marker" }},
{ 0x3C, new C{ T="TagRef", N = "sensor ping effect" }},
{ 0x5815988, new C{ T="Comment", N = "" }},
{ 0x5815989, new C{ T="Comment", N = "Target Visuals" }},
{ 0x58, new C{ T="TagRef", N = "target outline" }},
{ 0x74, new C{ T="TagRef", N = "target visor ping effect" }},
{ 0x90, new C{ T="mmr3Hash", N = "target visor ping effect marker" }},
{ 0x9415990, new C{ T="Comment", N = "" }},
{ 0x9415991, new C{ T="Comment", N = "Navpoints" }},
{ 0x94, new C{ T="mmr3Hash", N = "sensor navpoint name" }},
{ 0x98, new C{ T="mmr3Hash", N = "sensor navpoint marker" }},
{ 0x9C, new C{ T="mmr3Hash", N = "target navpoint name" }},
{ 0xA0, new C{ T="mmr3Hash", N = "target navpoint marker" }},
{ 0xA415992, new C{ T="Comment", N = "" }},
}, S=164}},
{ 0x664, new C{ T="Tagblock", N = "shroud generator", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "outer radius" }},
{ 0x4, new C{ T="mmr3Hash", N = "edge effect marker" }},
{ 0x8, new C{ T="TagRef", N = "biped enter effect" }},
{ 0x24, new C{ T="TagRef", N = "biped inside effect" }},
{ 0x40, new C{ T="TagRef", N = "biped leave effect" }},
{ 0x5C15993, new C{ T="Comment", N = "Mapping function" }},
{ 0x5C15994, new C{ T="Comment", N = "inside shrouded mapping" }},
{ 0x5C15995, new C{ T="Comment", N = "" }},
{ 0x5C, new C{ T="Unmapped", N = "data" }},
{ 0x7415996, new C{ T="Comment", N = "" }},
{ 0x74, new C{ T="Float", N = "max distance inside for shroud" }},
{ 0x7815997, new C{ T="Comment", N = "Mapping function" }},
{ 0x7815998, new C{ T="Comment", N = "outside shrouded mapping" }},
{ 0x7815999, new C{ T="Comment", N = "" }},
{ 0x78, new C{ T="Unmapped", N = "data" }},
{ 0x9016000, new C{ T="Comment", N = "" }},
{ 0x90, new C{ T="Float", N = "max distance outside for shroud" }},
{ 0x9416001, new C{ T="Comment", N = "Blocker" }},
{ 0x94, new C{ T="TagRef", N = "blocker object" }},
{ 0xB0, new C{ T="mmr3Hash", N = "blocker attach marker" }},
{ 0xB4, new C{ T="mmr3Hash", N = "blocker attach child marker" }},
{ 0xB8, new C{ T="Float", N = "blocker scale" }},
{ 0xBC16002, new C{ T="Comment", N = "" }},
}, S=188}},
{ 0x67816003, new C{ T="Comment", N = "" }},
{ 0x678, new C{ T="Tagblock", N = "Power Component", B = new Dictionary<long, C>
{
{ 0x016004, new C{ T="Comment", N = "Power Component System" }},
{ 0x0, new C{ T="Tagblock", N = "power source configurations", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "name" }},
{ 0x4, new C{ T="Float", N = "capacity" }},
}, S=8}},
{ 0x14, new C{ T="Tagblock", N = "power sources", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "region name" }},
{ 0x4, new C{ T="4Byte", N = "runtime region index" }},
{ 0x816005, new C{ T="Comment", N = "Model Region Damage State Configurations" }},
{ 0x8, new C{ T="Tagblock", N = "state configurations", B = new Dictionary<long, C>
{
{ 0x0, new EnumGroup { A=2, N="region state", STR = new Dictionary<int, string>()
{
{0, "default" },
{1, "minor damage" },
{2, "medium damage" },
{3, "major damage" },
{4, "destroyed" },
}}},
{ 0x2, new C{ T="2Byte", N = "configuration" }},
}, S=4}},
}, S=28}},
{ 0x2816006, new C{ T="Comment", N = "communication node capacity" }},
{ 0x28, new C{ T="Tagblock", N = "communication node power sources", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="2Byte", N = "component" }},
}, S=2}},
{ 0x3C, new C{ T="mmr3Hash", N = "communication node power modifier id" }},
{ 0x4016007, new C{ T="Comment", N = "" }},
{ 0x4016008, new C{ T="Comment", N = "locomotion capacity" }},
{ 0x40, new C{ T="Tagblock", N = "locomotion power sources", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="2Byte", N = "component" }},
}, S=2}},
{ 0x54, new C{ T="mmr3Hash", N = "locomotion power modifier id" }},
{ 0x5816009, new C{ T="Comment", N = "locomotion power modifier" }},
{ 0x5816010, new C{ T="Comment", N = "locomotion power modifier" }},
{ 0x58, new C{ T="Float", N = "Base Value" }},
{ 0x5C, new C{ T="Float", N = "Value Bounds.min" }},
{ 0x60, new C{ T="Float", N = "Value Bounds.max" }},
{ 0x6416011, new C{ T="Comment", N = "" }},
{ 0x6416012, new C{ T="Comment", N = "weapon capacity" }},
{ 0x64, new C{ T="Tagblock", N = "weapon power sources", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="2Byte", N = "component" }},
}, S=2}},
{ 0x78, new C{ T="mmr3Hash", N = "weapon power modifier id" }},
{ 0x7C16013, new C{ T="Comment", N = "" }},
}, S=124}},
{ 0x68C, new C{ T="Tagblock", N = "self destruct handler", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Tagblock", N = "Self destruct sounds", B = new Dictionary<long, C>
{
{ 0x016014, new C{ T="Comment", N = "SELF DESTRUCTION SOUNDS" }},
{ 0x0, new C{ T="4Byte", N = "active damage section count" }},
{ 0x4, new C{ T="TagRef", N = "sound to play" }},
}, S=32}},
}, S=20}},
{ 0x6A0, new C{ T="Tagblock", N = "Indirect Lighting Component", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "Lightmap attachment bone" }},
}, S=4}},
{ 0x6B416015, new C{ T="Comment", N = "" }},
{ 0x6B4, new C{ T="4Byte", N = "generated_paddd0c" }},
{ 0x6B816016, new C{ T="Comment", N = "$$$ UNIT $$$" }},
{ 0x6B8, new FlagGroup { A=4, N="unit flags", STR = new Dictionary<int, string>()
{
{0, "circular aiming" },
{1, "destroyed after dying" },
{2, "half-speed interpolation" },
{3, "fires from camera" },
{4, "entrance inside bounding sphere" },
{5, "doesn't show readied weapon" },
{6, "causes passenger dialogue" },
{7, "resists pings" },
{8, "melee attack is fatal" },
{9, "don't reface during pings" },
{10, "has no aiming" },
{11, "impact melee attaches to unit" },
{12, "impact melee dies on shields" },
{13, "cannot open doors automatically" },
{14, "melee attackers cannot attach" },
{15, "not instantly killed by melee" },
{16, "flashlight power doesnt transfer to weapon" },
{17, "runs around flaming" },
{18, "top level for AOE damage" },
{19, "special cinematic unit" },
{20, "ignored by autoaiming" },
{21, "shields fry infection forms" },
{22, "use velocity as acceleration" },
{23, "can dual wield" },
{24, "acts as gunner for parent" },
{25, "controlled by parent gunner" },
{26, "parent's primary weapon" },
{27, "parent's secondary weapon" },
{28, "unit has vectored thrust" },
{29, "allow aim while opening or closing" },
{30, "compute acceleration from aiming" },
{31, "override all pings" },
}}},
{ 0x6BC, new FlagGroup { A=4, N="flags2", STR = new Dictionary<int, string>()
{
{0, "unit supports bailout" },
{1, "flying_or_vehicle_hard_pings_allowed" },
{2, "attempt to fire from weapon matching camera" },
{3, "treat as vehicle " },
{4, "dropped weapons can dissolve" },
{5, "hard pings not allowed for driver-less vehicle" },
{6, "No friendly bump damage " },
{7, "ignores attachment feedback forced hard pings" },
{8, "unit appears on radar as dot not sprite" },
{9, "suppress radar blip" },
{10, "do not ignore parents for line of sight tests" },
{11, "do not pass attached AOE damage to children" },
{12, "do not generate AI line of fire pill for unit" },
{13, "allows procedural soft pings" },
{14, "allows procedural recoils" },
{15, "hide unreadied weapons" },
{16, "disable collision at death" },
{17, "always hard ping at death" },
{18, "component required - active camo" },
{19, "component required - power up" },
{20, "Preserve controlled aim and look directions, after/while unit is no longer controlled" },
{21, "Disable Damage Effect Sounds on this unit (defer to material effects)" },
{22, "Always play material effect sounds" },
{23, "Bucket unit audio priority based on distance" },
{24, "Play a minor lethal sound upon death" },
{25, "Allow children to play damage effect sounds" },
{26, "Disallow Lunge" },
}}},
{ 0x6C0, new EnumGroup { A=2, N="default team", STR = new Dictionary<int, string>()
{
{0, "default" },
{1, "player" },
{2, "human" },
{3, "covenant" },
{4, "brute" },
{5, "mule" },
{6, "wild_captive" },
{7, "wild_free" },
{8, "spare" },
{9, "covenant_player" },
{10, "forerunner" },
{11, "neutral" },
}}},
{ 0x6C2, new EnumGroup { A=2, N="constant sound volume", STR = new Dictionary<int, string>()
{
{0, "silent" },
{1, "quiet" },
{2, "medium" },
{3, "shout" },
{4, "loud" },
}}},
{ 0x6C4, new C{ T="TagRef", N = "hologram unit reference" }},
{ 0x6E0, new C{ T="Tagblock", N = "campaign metagame bucket", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=1, N="flags", STR = new Dictionary<int, string>()
{
{0, "only counts with riders" },
}}},
{ 0x1, new EnumGroup { A=1, N="type", STR = new Dictionary<int, string>()
{
{0, "grunt" },
{1, "jackal" },
{2, "skirmisher" },
{3, "marine" },
{4, "spartan" },
{5, "bugger" },
{6, "hunter" },
{7, "flood_infection" },
{8, "flood_carrier" },
{9, "flood_combat" },
{10, "flood_pure" },
{11, "sentinel" },
{12, "elite" },
{13, "engineer" },
{14, "mule" },
{15, "turret" },
{16, "mongoose" },
{17, "warthog" },
{18, "scorpion" },
{19, "hornet" },
{20, "pelican" },
{21, "revenant" },
{22, "seraph" },
{23, "shade" },
{24, "watchtower" },
{25, "ghost" },
{26, "chopper" },
{27, "mauler" },
{28, "wraith" },
{29, "banshee" },
{30, "phantom" },
{31, "scarab" },
{32, "guntower" },
{33, "tuning_fork" },
{34, "broadsword" },
{35, "mammoth" },
{36, "lich" },
{37, "mantis" },
{38, "wasp" },
{39, "phaeton" },
{40, "bishop" },
{41, "knight" },
{42, "pawn" },
{43, "soldier" },
{44, "packmaster" },
{45, "cavalier" },
{46, "brute" },
{47, "hoverer" },
{48, "crusher" },
}}},
{ 0x2, new EnumGroup { A=1, N="class", STR = new Dictionary<int, string>()
{
{0, "infantry" },
{1, "leader" },
{2, "hero" },
{3, "specialist" },
{4, "light vehicle" },
{5, "heavy vehicle" },
{6, "giant vehicle" },
{7, "standard vehicle" },
}}},
{ 0x3, new C{ T="Byte", N = "generated_pad6695" }},
{ 0x4, new C{ T="2Byte", N = "point count" }},
}, S=6}},
{ 0x6F4, new C{ T="Tagblock", N = "screen effects", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "screen effect" }},
}, S=28}},
{ 0x708, new C{ T="Float", N = "camera stiffness" }},
{ 0x70C16017, new C{ T="Comment", N = "unit camera" }},
{ 0x70C16018, new C{ T="Comment", N = "Unit Camera" }},
{ 0x70C, new FlagGroup { A=2, N="flags", STR = new Dictionary<int, string>()
{
{0, "pitch bounds absolute space" },
{1, "only collides with environment" },
{2, "hides player-unit from camera" },
{3, "use aiming vector instead of marker forward" },
}}},
{ 0x70E, new C{ T="2Byte", N = "generated_padc79e" }},
{ 0x71016019, new C{ T="Comment", N = "" }},
{ 0x710, new C{ T="mmr3Hash", N = "camera marker name" }},
{ 0x714, new C{ T="Float", N = "pitch auto-level" }},
{ 0x718, new C{ T="Float", N = "pitch range.min" }},
{ 0x71C, new C{ T="Float", N = "pitch range.max" }},
{ 0x720, new C{ T="Tagblock", N = "camera tracks", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "track" }},
{ 0x1C, new C{ T="TagRef", N = "screen effect" }},
{ 0x38, new C{ T="Float", N = "transition time in" }},
{ 0x3C, new C{ T="Float", N = "transition time out" }},
}, S=64}},
{ 0x734, new C{ T="Float", N = "pitch minimum spring" }},
{ 0x738, new C{ T="Float", N = "pitch mmaximum spring" }},
{ 0x73C, new C{ T="Float", N = "spring velocity" }},
{ 0x740, new C{ T="Float", N = "look acceleration" }},
{ 0x744, new C{ T="Float", N = "look deceleration" }},
{ 0x748, new C{ T="Float", N = "look acc smoothing fraction" }},
{ 0x74C, new C{ T="Float", N = "field of view bias" }},
{ 0x75016020, new C{ T="Comment", N = "camera obstruction" }},
{ 0x750, new C{ T="Float", N = "cylinder fraction" }},
{ 0x754, new C{ T="Float", N = "obstruction test angle" }},
{ 0x758, new C{ T="Float", N = "obstruction max inward accel" }},
{ 0x75C, new C{ T="Float", N = "obstruction max outward accel" }},
{ 0x760, new C{ T="Float", N = "obstruction max velocity" }},
{ 0x764, new C{ T="Float", N = "obstruction return delay" }},
{ 0x768, new C{ T="Tagblock", N = "camera acceleration", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "maximum camera velocity" }},
{ 0x416021, new C{ T="Comment", N = "" }},
{ 0x416022, new C{ T="Comment", N = "forward/back" }},
{ 0x4, new EnumGroup { A=1, N="Input Variable", STR = new Dictionary<int, string>()
{
{0, "linear velocity" },
{1, "linear acceleration" },
{2, "yaw" },
{3, "pitch" },
{4, "roll" },
}}},
{ 0x5, new C{ T="Comment", N = "generated_padd066" }},
{ 0x816023, new C{ T="Comment", N = "mapping" }},
{ 0x816024, new C{ T="Comment", N = "mapping" }},
{ 0x816025, new C{ T="Comment", N = "" }},
{ 0x8, new C{ T="Unmapped", N = "data" }},
{ 0x2016026, new C{ T="Comment", N = "" }},
{ 0x20, new C{ T="Float", N = "maximum value" }},
{ 0x24, new C{ T="Float", N = "camera scale (axial)" }},
{ 0x28, new C{ T="Float", N = "camera scale (perpendicular)" }},
{ 0x2C16027, new C{ T="Comment", N = "left/right" }},
{ 0x2C, new EnumGroup { A=1, N="Input Variable", STR = new Dictionary<int, string>()
{
{0, "linear velocity" },
{1, "linear acceleration" },
{2, "yaw" },
{3, "pitch" },
{4, "roll" },
}}},
{ 0x2D, new C{ T="Comment", N = "generated_padd066" }},
{ 0x3016028, new C{ T="Comment", N = "mapping" }},
{ 0x3016029, new C{ T="Comment", N = "mapping" }},
{ 0x3016030, new C{ T="Comment", N = "" }},
{ 0x30, new C{ T="Unmapped", N = "data" }},
{ 0x4816031, new C{ T="Comment", N = "" }},
{ 0x48, new C{ T="Float", N = "maximum value" }},
{ 0x4C, new C{ T="Float", N = "camera scale (axial)" }},
{ 0x50, new C{ T="Float", N = "camera scale (perpendicular)" }},
{ 0x5416032, new C{ T="Comment", N = "up/down" }},
{ 0x54, new EnumGroup { A=1, N="Input Variable", STR = new Dictionary<int, string>()
{
{0, "linear velocity" },
{1, "linear acceleration" },
{2, "yaw" },
{3, "pitch" },
{4, "roll" },
}}},
{ 0x55, new C{ T="Comment", N = "generated_padd066" }},
{ 0x5816033, new C{ T="Comment", N = "mapping" }},
{ 0x5816034, new C{ T="Comment", N = "mapping" }},
{ 0x5816035, new C{ T="Comment", N = "" }},
{ 0x58, new C{ T="Unmapped", N = "data" }},
{ 0x7016036, new C{ T="Comment", N = "" }},
{ 0x70, new C{ T="Float", N = "maximum value" }},
{ 0x74, new C{ T="Float", N = "camera scale (axial)" }},
{ 0x78, new C{ T="Float", N = "camera scale (perpendicular)" }},
}, S=124}},
{ 0x77C16037, new C{ T="Comment", N = "" }},
{ 0x77C16038, new C{ T="Comment", N = "sync action camera fields" }},
{ 0x77C16039, new C{ T="Comment", N = "sync action camera" }},
{ 0x77C16040, new C{ T="Comment", N = "Unit Camera" }},
{ 0x77C, new FlagGroup { A=2, N="flags", STR = new Dictionary<int, string>()
{
{0, "pitch bounds absolute space" },
{1, "only collides with environment" },
{2, "hides player-unit from camera" },
{3, "use aiming vector instead of marker forward" },
}}},
{ 0x77E, new C{ T="2Byte", N = "generated_padc79e" }},
{ 0x78016041, new C{ T="Comment", N = "" }},
{ 0x780, new C{ T="mmr3Hash", N = "camera marker name" }},
{ 0x784, new C{ T="Float", N = "pitch auto-level" }},
{ 0x788, new C{ T="Float", N = "pitch range.min" }},
{ 0x78C, new C{ T="Float", N = "pitch range.max" }},
{ 0x790, new C{ T="Tagblock", N = "camera tracks", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "track" }},
{ 0x1C, new C{ T="TagRef", N = "screen effect" }},
{ 0x38, new C{ T="Float", N = "transition time in" }},
{ 0x3C, new C{ T="Float", N = "transition time out" }},
}, S=64}},
{ 0x7A4, new C{ T="Float", N = "pitch minimum spring" }},
{ 0x7A8, new C{ T="Float", N = "pitch mmaximum spring" }},
{ 0x7AC, new C{ T="Float", N = "spring velocity" }},
{ 0x7B0, new C{ T="Float", N = "look acceleration" }},
{ 0x7B4, new C{ T="Float", N = "look deceleration" }},
{ 0x7B8, new C{ T="Float", N = "look acc smoothing fraction" }},
{ 0x7BC, new C{ T="Float", N = "field of view bias" }},
{ 0x7C016042, new C{ T="Comment", N = "camera obstruction" }},
{ 0x7C0, new C{ T="Float", N = "cylinder fraction" }},
{ 0x7C4, new C{ T="Float", N = "obstruction test angle" }},
{ 0x7C8, new C{ T="Float", N = "obstruction max inward accel" }},
{ 0x7CC, new C{ T="Float", N = "obstruction max outward accel" }},
{ 0x7D0, new C{ T="Float", N = "obstruction max velocity" }},
{ 0x7D4, new C{ T="Float", N = "obstruction return delay" }},
{ 0x7D8, new C{ T="Tagblock", N = "camera acceleration", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "maximum camera velocity" }},
{ 0x416043, new C{ T="Comment", N = "" }},
{ 0x416044, new C{ T="Comment", N = "forward/back" }},
{ 0x4, new EnumGroup { A=1, N="Input Variable", STR = new Dictionary<int, string>()
{
{0, "linear velocity" },
{1, "linear acceleration" },
{2, "yaw" },
{3, "pitch" },
{4, "roll" },
}}},
{ 0x5, new C{ T="Comment", N = "generated_padd066" }},
{ 0x816045, new C{ T="Comment", N = "mapping" }},
{ 0x816046, new C{ T="Comment", N = "mapping" }},
{ 0x816047, new C{ T="Comment", N = "" }},
{ 0x8, new C{ T="Unmapped", N = "data" }},
{ 0x2016048, new C{ T="Comment", N = "" }},
{ 0x20, new C{ T="Float", N = "maximum value" }},
{ 0x24, new C{ T="Float", N = "camera scale (axial)" }},
{ 0x28, new C{ T="Float", N = "camera scale (perpendicular)" }},
{ 0x2C16049, new C{ T="Comment", N = "left/right" }},
{ 0x2C, new EnumGroup { A=1, N="Input Variable", STR = new Dictionary<int, string>()
{
{0, "linear velocity" },
{1, "linear acceleration" },
{2, "yaw" },
{3, "pitch" },
{4, "roll" },
}}},
{ 0x2D, new C{ T="Comment", N = "generated_padd066" }},
{ 0x3016050, new C{ T="Comment", N = "mapping" }},
{ 0x3016051, new C{ T="Comment", N = "mapping" }},
{ 0x3016052, new C{ T="Comment", N = "" }},
{ 0x30, new C{ T="Unmapped", N = "data" }},
{ 0x4816053, new C{ T="Comment", N = "" }},
{ 0x48, new C{ T="Float", N = "maximum value" }},
{ 0x4C, new C{ T="Float", N = "camera scale (axial)" }},
{ 0x50, new C{ T="Float", N = "camera scale (perpendicular)" }},
{ 0x5416054, new C{ T="Comment", N = "up/down" }},
{ 0x54, new EnumGroup { A=1, N="Input Variable", STR = new Dictionary<int, string>()
{
{0, "linear velocity" },
{1, "linear acceleration" },
{2, "yaw" },
{3, "pitch" },
{4, "roll" },
}}},
{ 0x55, new C{ T="Comment", N = "generated_padd066" }},
{ 0x5816055, new C{ T="Comment", N = "mapping" }},
{ 0x5816056, new C{ T="Comment", N = "mapping" }},
{ 0x5816057, new C{ T="Comment", N = "" }},
{ 0x58, new C{ T="Unmapped", N = "data" }},
{ 0x7016058, new C{ T="Comment", N = "" }},
{ 0x70, new C{ T="Float", N = "maximum value" }},
{ 0x74, new C{ T="Float", N = "camera scale (axial)" }},
{ 0x78, new C{ T="Float", N = "camera scale (perpendicular)" }},
}, S=124}},
{ 0x7EC16059, new C{ T="Comment", N = "" }},
{ 0x7EC, new C{ T="mmr3Hash", N = "unit markup name for weapon class override" }},
{ 0x7F0, new C{ T="TagRef", N = "seat acceleration" }},
{ 0x80C, new C{ T="Float", N = "pain major total damage threshold" }},
{ 0x81016060, new C{ T="Comment", N = "pings" }},
{ 0x810, new C{ T="Float", N = "soft ping threshold" }},
{ 0x814, new C{ T="Float", N = "soft ping interrupt time" }},
{ 0x818, new C{ T="Float", N = "hard ping threshold" }},
{ 0x81C, new C{ T="Float", N = "hard ping interrupt time" }},
{ 0x820, new C{ T="Float", N = "soft death direction speed threshold" }},
{ 0x824, new C{ T="Float", N = "hard death threshold" }},
{ 0x828, new C{ T="Float", N = "feign death threshold" }},
{ 0x82C, new C{ T="Float", N = "feign death time" }},
{ 0x830, new C{ T="Float", N = "pain screen duration" }},
{ 0x834, new C{ T="Float", N = "pain screen region fade out duration" }},
{ 0x838, new C{ T="Float", N = "pain screen region fade out weight threshold" }},
{ 0x83C, new C{ T="Float", N = "pain screen angle tolerance" }},
{ 0x840, new C{ T="Float", N = "pain screen angle randomness" }},
{ 0x844, new C{ T="Float", N = "defensive screen duration" }},
{ 0x848, new C{ T="Float", N = "defensive screen scrub fallback fraction" }},
{ 0x84C16061, new C{ T="Comment", N = "" }},
{ 0x84C, new C{ T="Float", N = "distance of dive anim" }},
{ 0x850, new C{ T="Float", N = "terminal velocity fall ratio" }},
{ 0x85416062, new C{ T="Comment", N = "stun" }},
{ 0x854, new C{ T="Float", N = "stun movement penalty" }},
{ 0x858, new C{ T="Float", N = "stun turning penalty" }},
{ 0x85C, new C{ T="Float", N = "stun jumping penalty" }},
{ 0x860, new C{ T="Float", N = "minimum stun time" }},
{ 0x864, new C{ T="Float", N = "maximum stun time" }},
{ 0x86816063, new C{ T="Comment", N = "" }},
{ 0x868, new C{ T="Float", N = "feign death chance" }},
{ 0x86C, new C{ T="Float", N = "feign repeat chance" }},
{ 0x870, new C{ T="TagRef", N = "spawned turret character" }},
{ 0x88C16064, new C{ T="Comment", N = "aiming/looking" }},
{ 0x88C, new C{ T="mmr3Hash", N = "target aiming pivot marker name" }},
{ 0x890, new C{ T="Float", N = "aiming velocity maximum" }},
{ 0x894, new C{ T="Float", N = "aiming acceleration maximum" }},
{ 0x898, new C{ T="Float", N = "casual aiming modifier" }},
{ 0x89C, new C{ T="Float", N = "looking velocity maximum" }},
{ 0x8A0, new C{ T="Float", N = "looking acceleration maximum" }},
{ 0x8A4, new C{ T="Float", N = "Dropped ability object velocity" }},
{ 0x8A816065, new C{ T="Comment", N = "" }},
{ 0x8A8, new C{ T="Float", N = "object velocity maximum" }},
{ 0x8AC, new C{ T="mmr3Hash", N = "right_hand_node" }},
{ 0x8B0, new C{ T="mmr3Hash", N = "left_hand_node" }},
{ 0x8B416066, new C{ T="Comment", N = "more damn nodes" }},
{ 0x8B4, new C{ T="mmr3Hash", N = "preferred_gun_node" }},
{ 0x8B816067, new C{ T="Comment", N = "" }},
{ 0x8B8, new C{ T="mmr3Hash", N = "preferred_grenade_marker" }},
{ 0x8BC16068, new C{ T="Comment", N = "Weapon Specific Markers" }},
{ 0x8BC, new C{ T="Tagblock", N = "weapon specific markers", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "complete weapon name" }},
{ 0x4, new C{ T="mmr3Hash", N = "weapon class" }},
{ 0x8, new C{ T="mmr3Hash", N = "weapon name" }},
{ 0xC16069, new C{ T="Comment", N = "" }},
{ 0xC, new C{ T="mmr3Hash", N = "right hand marker" }},
{ 0x1016070, new C{ T="Comment", N = "" }},
{ 0x10, new C{ T="mmr3Hash", N = "left hand marker" }},
}, S=20}},
{ 0x8D016071, new C{ T="Comment", N = "melee damage" }},
{ 0x8D0, new C{ T="TagRef", N = "melee damage" }},
{ 0x8EC, new C{ T="TagRef", N = "native melee override" }},
{ 0x90816072, new C{ T="Comment", N = "your momma" }},
{ 0x908, new C{ T="TagRef", N = "boarding melee damage" }},
{ 0x924, new C{ T="TagRef", N = "boarding melee response" }},
{ 0x940, new C{ T="TagRef", N = "eviction melee damage" }},
{ 0x95C, new C{ T="TagRef", N = "eviction melee response" }},
{ 0x978, new C{ T="TagRef", N = "landing melee damage" }},
{ 0x994, new C{ T="TagRef", N = "flurry melee damage" }},
{ 0x9B0, new C{ T="TagRef", N = "obstacle smash damage" }},
{ 0x9CC16073, new C{ T="Comment", N = "" }},
{ 0x9CC, new EnumGroup { A=2, N="motion sensor blip style enemy", STR = new Dictionary<int, string>()
{
{0, "major" },
{1, "minor" },
}}},
{ 0x9CE, new EnumGroup { A=2, N="motion sensor blip style friendly", STR = new Dictionary<int, string>()
{
{0, "major" },
{1, "minor" },
}}},
{ 0x9D0, new EnumGroup { A=2, N="item owner size", STR = new Dictionary<int, string>()
{
{0, "small" },
{1, "medium" },
{2, "large" },
{3, "huge" },
}}},
{ 0x9D2, new C{ T="2Byte", N = "generated_pad9055" }},
{ 0x9D4, new C{ T="Float", N = "motion tracker range modifier" }},
{ 0x9D8, new C{ T="mmr3Hash", N = "equipment variant name" }},
{ 0x9DC, new C{ T="mmr3Hash", N = "grounded equipment variant name" }},
{ 0x9E0, new C{ T="Tagblock", N = "Hud audio cues", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Tagblock", N = "Hud audio cues", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "sound" }},
{ 0x1C, new FlagGroup { A=4, N="latched to", STR = new Dictionary<int, string>()
{
{0, "health recharging" },
{1, "health recharging - from healing" },
{2, "health minor damaged" },
{3, "health major damaged" },
{4, "health critical damaged" },
{5, "health minor" },
{6, "health major" },
{7, "health critical" },
{8, "shield recharging" },
{9, "shield recharging - from healing" },
{10, "shield minor damaged" },
{11, "shield major damaged" },
{12, "shield critical damaged" },
{13, "shield minor" },
{14, "shield major" },
{15, "shield critical" },
{16, "player tracked" },
{17, "player locked" },
{18, "player downed" },
}}},
{ 0x20, new C{ T="Float", N = "scale" }},
}, S=36}},
{ 0x1416074, new C{ T="Comment", N = "health thresholds" }},
{ 0x14, new C{ T="Float", N = "health minor" }},
{ 0x18, new C{ T="Float", N = "health major" }},
{ 0x1C, new C{ T="Float", N = "health critical" }},
{ 0x2016075, new C{ T="Comment", N = "" }},
{ 0x2016076, new C{ T="Comment", N = "shield thresholds" }},
{ 0x20, new C{ T="Float", N = "shield minor" }},
{ 0x24, new C{ T="Float", N = "shield major" }},
{ 0x28, new C{ T="Float", N = "shield critical" }},
{ 0x2C16077, new C{ T="Comment", N = "" }},
}, S=44}},
{ 0x9F4, new C{ T="Tagblock", N = "dialogue variants", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="2Byte", N = "variant number" }},
{ 0x2, new C{ T="2Byte", N = "generated_padef78" }},
{ 0x4, new C{ T="TagRef", N = "dialogue" }},
}, S=32}},
{ 0xA0816078, new C{ T="Comment", N = "standard grenade throw" }},
{ 0xA08, new C{ T="Float", N = "grenade angle" }},
{ 0xA0C, new C{ T="Float", N = "grenade angle max elevation" }},
{ 0xA10, new C{ T="Float", N = "grenade angle min elevation" }},
{ 0xA14, new C{ T="Float", N = "grenade velocity" }},
{ 0xA18, new C{ T="Float", N = "grenade rotational velocity min.X" }},
{ 0xA1C, new C{ T="Float", N = "grenade rotational velocity min.Y" }},
{ 0xA20, new C{ T="Float", N = "grenade rotational velocity min.Z" }},
{ 0xA24, new C{ T="Float", N = "greande rotational velocity max.X" }},
{ 0xA28, new C{ T="Float", N = "greande rotational velocity max.Y" }},
{ 0xA2C, new C{ T="Float", N = "greande rotational velocity max.Z" }},
{ 0xA3016079, new C{ T="Comment", N = "grenade throw speed scalar" }},
{ 0xA3016080, new C{ T="Comment", N = "grenade throw speed scalar" }},
{ 0xA30, new C{ T="Float", N = "Base Value" }},
{ 0xA34, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xA38, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xA3C16081, new C{ T="Comment", N = "" }},
{ 0xA3C16082, new C{ T="Comment", N = "primary weapon toss" }},
{ 0xA3C, new C{ T="Float", N = "weapon angle" }},
{ 0xA40, new C{ T="Float", N = "weapon angle max elevation" }},
{ 0xA44, new C{ T="Float", N = "weapon angle min elevation" }},
{ 0xA48, new C{ T="Float", N = "weapon velocity" }},
{ 0xA4C, new C{ T="Float", N = "weapon rotational velocity min.X" }},
{ 0xA50, new C{ T="Float", N = "weapon rotational velocity min.Y" }},
{ 0xA54, new C{ T="Float", N = "weapon rotational velocity min.Z" }},
{ 0xA58, new C{ T="Float", N = "weapon rotational velocity max.X" }},
{ 0xA5C, new C{ T="Float", N = "weapon rotational velocity max.Y" }},
{ 0xA60, new C{ T="Float", N = "weapon rotational velocity max.Z" }},
{ 0xA6416083, new C{ T="Comment", N = "" }},
{ 0xA64, new C{ T="Tagblock", N = "powered seats", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "driver powerup time" }},
{ 0x4, new C{ T="Float", N = "driver powerdown time" }},
}, S=8}},
{ 0xA78, new C{ T="Tagblock", N = "weapons", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "weapon" }},
{ 0x1C, new C{ T="mmr3Hash", N = "weapon name" }},
{ 0x20, new C{ T="mmr3Hash", N = "variant name" }},
{ 0x24, new EnumGroup { A=4, N="position", STR = new Dictionary<int, string>()
{
{0, "primary or backpack" },
{1, "secondary" },
}}},
{ 0x28, new FlagGroup { A=1, N="weapon flags", STR = new Dictionary<int, string>()
{
{0, "Cannot fire any weapon while boosting" },
}}},
{ 0x29, new C{ T="Comment", N = "generated_paddad2" }},
{ 0x2C, new C{ T="Float", N = "maximum firing cone angle" }},
{ 0x30, new C{ T="Float", N = "max firing cone angle cosine" }},
{ 0x34, new C{ T="Float", N = "minimum retarget time" }},
{ 0x38, new C{ T="Float", N = "blind fire time" }},
{ 0x3C, new C{ T="Float", N = "lead fraction" }},
{ 0x40, new C{ T="Float", N = "engagement range.min" }},
{ 0x44, new C{ T="Float", N = "engagement range.max" }},
{ 0x48, new C{ T="Float", N = "proximity score multiplier" }},
{ 0x4C, new C{ T="Float", N = "direction score multiplier" }},
{ 0x50, new C{ T="Float", N = "attacker score multiplier" }},
{ 0x54, new C{ T="Float", N = "targeting weight hologram" }},
{ 0x58, new C{ T="Float", N = "targeting weight auto turret" }},
{ 0x5C, new C{ T="Float", N = "primary fire delay from idle" }},
{ 0x60, new C{ T="Float", N = "secondary fire delay from idle" }},
{ 0x64, new C{ T="Float", N = "caution duration" }},
{ 0x68, new C{ T="Float", N = "alert angular speed max" }},
{ 0x6C, new C{ T="Float", N = "idle angular speed max" }},
{ 0x70, new C{ T="Float", N = "targeting yaw min" }},
{ 0x74, new C{ T="Float", N = "targeting yaw max" }},
{ 0x78, new C{ T="Float", N = "targeting pitch min" }},
{ 0x7C, new C{ T="Float", N = "targeting pitch max" }},
{ 0x80, new C{ T="Float", N = "idle scanning yaw min" }},
{ 0x84, new C{ T="Float", N = "idle scanning yaw max" }},
{ 0x88, new C{ T="Float", N = "idle scanning pitch min" }},
{ 0x8C, new C{ T="Float", N = "idle scanning pitch max" }},
{ 0x90, new C{ T="Float", N = "idle scanning min interest distance" }},
{ 0x94, new C{ T="TagRef", N = "alert mode effect" }},
{ 0xB016084, new C{ T="Comment", N = "" }},
{ 0xB0, new C{ T="mmr3Hash", N = "alert mode effect marker" }},
{ 0xB4, new C{ T="mmr3Hash", N = "alert mode effect primary scale" }},
{ 0xB8, new C{ T="mmr3Hash", N = "alert mode effect secondary scale" }},
{ 0xBC, new C{ T="Tagblock", N = "sentry properties", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=1, N="behavior", STR = new Dictionary<int, string>()
{
{0, "performs yaw scanning" },
{1, "secondary barrel starts enabled" },
{2, "only use vehicle range scale if secondary barrel active" },
{3, "only use vehicle score bonus if secondary barrel active" },
}}},
{ 0x1, new C{ T="Comment", N = "generated_pad4624" }},
{ 0x4, new C{ T="Float", N = "sight cone angle" }},
{ 0x8, new C{ T="Float", N = "sight cone cosine" }},
{ 0xC, new C{ T="Float", N = "alert range" }},
{ 0x10, new C{ T="Float", N = "attack range" }},
{ 0x14, new C{ T="Float", N = "attack range score multiplier" }},
{ 0x18, new C{ T="Float", N = "light vehicle range scale" }},
{ 0x1C, new C{ T="Float", N = "heavy vehicle range scale" }},
{ 0x20, new C{ T="Float", N = "flying vehicle range scale" }},
{ 0x24, new C{ T="Float", N = "light vehicle score bonus" }},
{ 0x28, new C{ T="Float", N = "heavy vehicle score bonus" }},
{ 0x2C, new C{ T="Float", N = "flying vehicle score bonus" }},
{ 0x30, new C{ T="Float", N = "current target score bonus" }},
{ 0x34, new C{ T="Float", N = "startup time" }},
{ 0x38, new C{ T="Float", N = "primary fire time" }},
{ 0x3C, new C{ T="Float", N = "secondary fire time" }},
{ 0x40, new C{ T="TagRef", N = "player entered alert range sound" }},
{ 0x5C, new C{ T="TagRef", N = "player exited alert range sound" }},
{ 0x7816085, new C{ T="Comment", N = "Node graph events" }},
{ 0x7816086, new C{ T="Comment", N = "Events to fire on state transitions" }},
{ 0x78, new C{ T="Tagblock", N = "Transition Events", B = new Dictionary<long, C>
{
{ 0x0, new EnumGroup { A=4, N="From state", STR = new Dictionary<int, string>()
{
{0, "Startup" },
{1, "Idle" },
{2, "Alert" },
{3, "Attack" },
{4, "Inactive" },
{5, "Any state" },
}}},
{ 0x4, new EnumGroup { A=4, N="To state", STR = new Dictionary<int, string>()
{
{0, "Startup" },
{1, "Idle" },
{2, "Alert" },
{3, "Attack" },
{4, "Inactive" },
{5, "Any state" },
}}},
{ 0x8, new C{ T="mmr3Hash", N = "Event" }},
}, S=12}},
{ 0x8C16087, new C{ T="Comment", N = "" }},
}, S=140}},
{ 0xD0, new C{ T="Float", N = "target camouflage threshold" }},
}, S=212}},
{ 0xA8C, new C{ T="Tagblock", N = "target tracking", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=1, N="target tracking flags", STR = new Dictionary<int, string>()
{
{0, "only enable when aimed down sight" },
{1, "never lose target lock" },
{2, "only enable when in alt fire" },
}}},
{ 0x1, new C{ T="Comment", N = "generated_pada390" }},
{ 0x4, new C{ T="Tagblock", N = "tracking types", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "tracking type" }},
}, S=4}},
{ 0x18, new C{ T="Float", N = "acquire time" }},
{ 0x1C, new C{ T="Float", N = "grace time" }},
{ 0x20, new C{ T="Float", N = "decay time" }},
{ 0x24, new C{ T="Byte", N = "max target locks" }},
{ 0x25, new C{ T="Comment", N = "generated_padbd71" }},
{ 0x28, new C{ T="TagRef", N = "tracking sound" }},
{ 0x44, new C{ T="TagRef", N = "locked sound" }},
}, S=96}},
{ 0xAA0, new C{ T="Tagblock", N = "seats", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="flags", STR = new Dictionary<int, string>()
{
{0, "invisible" },
{1, "locked" },
{2, "driver" },
{3, "gunner" },
{4, "third person camera" },
{5, "allows weapons" },
{6, "third person on enter" },
{7, "first person camera slaved to gun." },
{8, "not valid without driver" },
{9, "allow AI noncombatants" },
{10, "boarding seat" },
{11, "ai firing disabled by max acceleration" },
{12, "boarding enters seat" },
{13, "boarding need any passenger" },
{14, "invalid for player" },
{15, "invalid for non-player" },
{16, "invalid for hero" },
{17, "gunner (player only)" },
{18, "invisible under major damage" },
{19, "melee instant killable" },
{20, "leader preference" },
{21, "allows exit and detach" },
{22, "blocks headshots" },
{23, "exits to ground" },
{24, "forward from attachment" },
{25, "disallow AI shooting" },
{26, "prevents weapon stowing" },
{27, "takes top level aoe damage" },
{28, "disallow exit" },
{29, "local aiming" },
{30, "pelvis relative attachment" },
{31, "apply velocity on death exit" },
}}},
{ 0x4, new FlagGroup { A=4, N="secondary flags", STR = new Dictionary<int, string>()
{
{0, "skip obstacle check" },
{1, "search parent for entry marker" },
{2, "gunner release aim on exit" },
{3, "fully open before allowing exit" },
{4, "finish melee before allowing exit" },
{5, "kill parent if unit in seat dies" },
{6, "co-pilot" },
{7, "ejectable seat" },
{8, "kill on ejection" },
{9, "use head marker for navpoint" },
{10, "allows equipment and grenade switching" },
}}},
{ 0x8, new EnumGroup { A=4, N="passenger seat designator", STR = new Dictionary<int, string>()
{
{0, "MidCenter" },
{1, "LeftBack" },
{2, "LeftFront" },
{3, "MidLeftBack" },
{4, "MidLeft" },
{5, "MidLeftFront" },
{6, "RightBack" },
{7, "RightFront" },
{8, "MidRightBack" },
{9, "MidRight" },
{10, "MidRightFront" },
{11, "LeftFrontRow1" },
{12, "LeftFrontRow2" },
{13, "LeftFrontRow3" },
{14, "LeftFrontRow4" },
{15, "LeftBackRow1" },
{16, "LeftBackRow2" },
{17, "LeftBackRow3" },
{18, "LeftBackRow4" },
{19, "RightFrontRow1" },
{20, "RightFrontRow2" },
{21, "RightFrontRow3" },
{22, "RightFrontRow4" },
{23, "RightBackRow1" },
{24, "RightBackRow2" },
{25, "RightBackRow3" },
{26, "RightBackRow4" },
}}},
{ 0xC, new EnumGroup { A=1, N="seat has infinite grenades of type", STR = new Dictionary<int, string>()
{
{0, "none" },
{1, "fragmentation grenade" },
{2, "plasma grenade" },
{3, "lightning grenade" },
{4, "spike grenade" },
{5, "sapper grenade" },
{6, "stasis grenade" },
}}},
{ 0xD, new EnumGroup { A=1, N="seat selection priority", STR = new Dictionary<int, string>()
{
{0, "normal" },
{1, "high" },
}}},
{ 0xE, new C{ T="2Byte", N = "generated_pad811e" }},
{ 0x10, new C{ T="mmr3Hash", N = "label text" }},
{ 0x14, new C{ T="String", N = "label" }},
{ 0x3416088, new C{ T="Comment", N = "" }},
{ 0x34, new C{ T="mmr3Hash", N = "marker name" }},
{ 0x3816089, new C{ T="Comment", N = "" }},
{ 0x38, new C{ T="mmr3Hash", N = "entry marker(s) name" }},
{ 0x3C16090, new C{ T="Comment", N = "" }},
{ 0x3C, new C{ T="mmr3Hash", N = "exit marker name" }},
{ 0x4016091, new C{ T="Comment", N = "" }},
{ 0x40, new C{ T="mmr3Hash", N = "ui marker name" }},
{ 0x44, new C{ T="mmr3Hash", N = "ui navpoint name" }},
{ 0x4816092, new C{ T="Comment", N = "" }},
{ 0x48, new C{ T="mmr3Hash", N = "boarding grenade marker" }},
{ 0x4C, new C{ T="mmr3Hash", N = "boarding grenade string" }},
{ 0x50, new C{ T="mmr3Hash", N = "boarding melee string" }},
{ 0x54, new C{ T="mmr3Hash", N = "in-seat string" }},
{ 0x58, new C{ T="Tagblock", N = "ai model targets", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "model target name" }},
}, S=4}},
{ 0x6C, new C{ T="Float", N = "ping scale" }},
{ 0x70, new C{ T="Float", N = "turnover time" }},
{ 0x7416093, new C{ T="Comment", N = "seat acceleration spring" }},
{ 0x74, new C{ T="TagRef", N = "seat acceleration" }},
{ 0x90, new C{ T="Float", N = "AI scariness" }},
{ 0x94, new EnumGroup { A=2, N="ai seat type", STR = new Dictionary<int, string>()
{
{0, "NONE" },
{1, "passenger" },
{2, "gunner" },
{3, "small cargo" },
{4, "large cargo" },
{5, "driver" },
}}},
{ 0x96, new C{ T="2Byte", N = "boarding seat" }},
{ 0x98, new C{ T="Tagblock", N = "additional boarding seats", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="2Byte", N = "seat" }},
}, S=2}},
{ 0xAC16094, new C{ T="Comment", N = "seat switching" }},
{ 0xAC16095, new C{ T="Comment", N = "explanation" }},
{ 0xAC16096, new C{ T="Comment", N = "seat switching" }},
{ 0xAC16097, new C{ T="Comment", N = "up" }},
{ 0xAC16098, new C{ T="Comment", N = "up" }},
{ 0xAC, new C{ T="mmr3Hash", N = "destinationSeat" }},
{ 0xB0, new C{ T="mmr3Hash", N = "animation" }},
{ 0xB4, new C{ T="Float", N = "seat switch cooldown time" }},
{ 0xB816099, new C{ T="Comment", N = "" }},
{ 0xB816100, new C{ T="Comment", N = "down" }},
{ 0xB816101, new C{ T="Comment", N = "down" }},
{ 0xB8, new C{ T="mmr3Hash", N = "destinationSeat" }},
{ 0xBC, new C{ T="mmr3Hash", N = "animation" }},
{ 0xC0, new C{ T="Float", N = "seat switch cooldown time" }},
{ 0xC416102, new C{ T="Comment", N = "" }},
{ 0xC416103, new C{ T="Comment", N = "left" }},
{ 0xC416104, new C{ T="Comment", N = "left" }},
{ 0xC4, new C{ T="mmr3Hash", N = "destinationSeat" }},
{ 0xC8, new C{ T="mmr3Hash", N = "animation" }},
{ 0xCC, new C{ T="Float", N = "seat switch cooldown time" }},
{ 0xD016105, new C{ T="Comment", N = "" }},
{ 0xD016106, new C{ T="Comment", N = "right" }},
{ 0xD016107, new C{ T="Comment", N = "right" }},
{ 0xD0, new C{ T="mmr3Hash", N = "destinationSeat" }},
{ 0xD4, new C{ T="mmr3Hash", N = "animation" }},
{ 0xD8, new C{ T="Float", N = "seat switch cooldown time" }},
{ 0xDC16108, new C{ T="Comment", N = "" }},
{ 0xDC16109, new C{ T="Comment", N = "" }},
{ 0xDC, new C{ T="Float", N = "listener interpolation factor" }},
{ 0xE0, new C{ T="Float", N = "listener orientation interpolation" }},
{ 0xE4, new C{ T="Float", N = "listener blend towards locked axis" }},
{ 0xE816110, new C{ T="Comment", N = "speed dependent turn rates" }},
{ 0xE8, new C{ T="Float", N = "yaw rate bounds.min" }},
{ 0xEC, new C{ T="Float", N = "yaw rate bounds.max" }},
{ 0xF0, new C{ T="Float", N = "pitch rate bounds.min" }},
{ 0xF4, new C{ T="Float", N = "pitch rate bounds.max" }},
{ 0xF8, new C{ T="Float", N = "pitch interpolation time" }},
{ 0xFC, new C{ T="Float", N = "min speed reference" }},
{ 0x100, new C{ T="Float", N = "max speed reference" }},
{ 0x104, new C{ T="Float", N = "speed exponent" }},
{ 0x10816111, new C{ T="Comment", N = "camera fields" }},
{ 0x10816112, new C{ T="Comment", N = "unit camera" }},
{ 0x10816113, new C{ T="Comment", N = "Unit Camera" }},
{ 0x108, new FlagGroup { A=2, N="flags", STR = new Dictionary<int, string>()
{
{0, "pitch bounds absolute space" },
{1, "only collides with environment" },
{2, "hides player-unit from camera" },
{3, "use aiming vector instead of marker forward" },
}}},
{ 0x10A, new C{ T="2Byte", N = "generated_padc79e" }},
{ 0x10C16114, new C{ T="Comment", N = "" }},
{ 0x10C, new C{ T="mmr3Hash", N = "camera marker name" }},
{ 0x110, new C{ T="Float", N = "pitch auto-level" }},
{ 0x114, new C{ T="Float", N = "pitch range.min" }},
{ 0x118, new C{ T="Float", N = "pitch range.max" }},
{ 0x11C, new C{ T="Tagblock", N = "camera tracks", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "track" }},
{ 0x1C, new C{ T="TagRef", N = "screen effect" }},
{ 0x38, new C{ T="Float", N = "transition time in" }},
{ 0x3C, new C{ T="Float", N = "transition time out" }},
}, S=64}},
{ 0x130, new C{ T="Float", N = "pitch minimum spring" }},
{ 0x134, new C{ T="Float", N = "pitch mmaximum spring" }},
{ 0x138, new C{ T="Float", N = "spring velocity" }},
{ 0x13C, new C{ T="Float", N = "look acceleration" }},
{ 0x140, new C{ T="Float", N = "look deceleration" }},
{ 0x144, new C{ T="Float", N = "look acc smoothing fraction" }},
{ 0x148, new C{ T="Float", N = "field of view bias" }},
{ 0x14C16115, new C{ T="Comment", N = "camera obstruction" }},
{ 0x14C, new C{ T="Float", N = "cylinder fraction" }},
{ 0x150, new C{ T="Float", N = "obstruction test angle" }},
{ 0x154, new C{ T="Float", N = "obstruction max inward accel" }},
{ 0x158, new C{ T="Float", N = "obstruction max outward accel" }},
{ 0x15C, new C{ T="Float", N = "obstruction max velocity" }},
{ 0x160, new C{ T="Float", N = "obstruction return delay" }},
{ 0x164, new C{ T="Tagblock", N = "camera acceleration", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "maximum camera velocity" }},
{ 0x416116, new C{ T="Comment", N = "" }},
{ 0x416117, new C{ T="Comment", N = "forward/back" }},
{ 0x4, new EnumGroup { A=1, N="Input Variable", STR = new Dictionary<int, string>()
{
{0, "linear velocity" },
{1, "linear acceleration" },
{2, "yaw" },
{3, "pitch" },
{4, "roll" },
}}},
{ 0x5, new C{ T="Comment", N = "generated_padd066" }},
{ 0x816118, new C{ T="Comment", N = "mapping" }},
{ 0x816119, new C{ T="Comment", N = "mapping" }},
{ 0x816120, new C{ T="Comment", N = "" }},
{ 0x8, new C{ T="Unmapped", N = "data" }},
{ 0x2016121, new C{ T="Comment", N = "" }},
{ 0x20, new C{ T="Float", N = "maximum value" }},
{ 0x24, new C{ T="Float", N = "camera scale (axial)" }},
{ 0x28, new C{ T="Float", N = "camera scale (perpendicular)" }},
{ 0x2C16122, new C{ T="Comment", N = "left/right" }},
{ 0x2C, new EnumGroup { A=1, N="Input Variable", STR = new Dictionary<int, string>()
{
{0, "linear velocity" },
{1, "linear acceleration" },
{2, "yaw" },
{3, "pitch" },
{4, "roll" },
}}},
{ 0x2D, new C{ T="Comment", N = "generated_padd066" }},
{ 0x3016123, new C{ T="Comment", N = "mapping" }},
{ 0x3016124, new C{ T="Comment", N = "mapping" }},
{ 0x3016125, new C{ T="Comment", N = "" }},
{ 0x30, new C{ T="Unmapped", N = "data" }},
{ 0x4816126, new C{ T="Comment", N = "" }},
{ 0x48, new C{ T="Float", N = "maximum value" }},
{ 0x4C, new C{ T="Float", N = "camera scale (axial)" }},
{ 0x50, new C{ T="Float", N = "camera scale (perpendicular)" }},
{ 0x5416127, new C{ T="Comment", N = "up/down" }},
{ 0x54, new EnumGroup { A=1, N="Input Variable", STR = new Dictionary<int, string>()
{
{0, "linear velocity" },
{1, "linear acceleration" },
{2, "yaw" },
{3, "pitch" },
{4, "roll" },
}}},
{ 0x55, new C{ T="Comment", N = "generated_padd066" }},
{ 0x5816128, new C{ T="Comment", N = "mapping" }},
{ 0x5816129, new C{ T="Comment", N = "mapping" }},
{ 0x5816130, new C{ T="Comment", N = "" }},
{ 0x58, new C{ T="Unmapped", N = "data" }},
{ 0x7016131, new C{ T="Comment", N = "" }},
{ 0x70, new C{ T="Float", N = "maximum value" }},
{ 0x74, new C{ T="Float", N = "camera scale (axial)" }},
{ 0x78, new C{ T="Float", N = "camera scale (perpendicular)" }},
}, S=124}},
{ 0x17816132, new C{ T="Comment", N = "" }},
{ 0x178, new C{ T="TagRef", N = "hud screen reference" }},
{ 0x194, new C{ T="TagRef", N = "alt hud screen reference" }},
{ 0x1B0, new C{ T="mmr3Hash", N = "enter seat string" }},
{ 0x1B4, new C{ T="Tagblock", N = "button callouts", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "text" }},
}, S=4}},
{ 0x1C8, new C{ T="Float", N = "pitch minimum" }},
{ 0x1CC, new C{ T="Float", N = "pitch maximum" }},
{ 0x1D0, new C{ T="Float", N = "pitch minimum for AI operator" }},
{ 0x1D4, new C{ T="Float", N = "pitch maximum for AI operator" }},
{ 0x1D8, new C{ T="Float", N = "yaw minimum" }},
{ 0x1DC, new C{ T="Float", N = "yaw maximum" }},
{ 0x1E0, new C{ T="Float", N = "yaw minimum for AI operator" }},
{ 0x1E4, new C{ T="Float", N = "yaw maximum for AI operator" }},
{ 0x1E8, new C{ T="TagRef", N = "built-in gunner" }},
{ 0x20416133, new C{ T="Comment", N = "entry fields" }},
{ 0x204, new C{ T="Float", N = "entry radius" }},
{ 0x208, new C{ T="Float", N = "entry marker cone angle" }},
{ 0x20C, new C{ T="Float", N = "entry marker facing angle" }},
{ 0x210, new C{ T="Float", N = "maximum relative velocity" }},
{ 0x214, new C{ T="TagRef", N = "equipment" }},
{ 0x230, new C{ T="Float", N = "open time" }},
{ 0x234, new C{ T="Float", N = "close time" }},
{ 0x238, new C{ T="mmr3Hash", N = "open function name" }},
{ 0x23C, new C{ T="mmr3Hash", N = "opening function name" }},
{ 0x240, new C{ T="mmr3Hash", N = "closing function name" }},
{ 0x244, new C{ T="mmr3Hash", N = "invisible seat region" }},
{ 0x248, new C{ T="4Byte", N = "runtime invisible seat region index" }},
{ 0x24C16134, new C{ T="Comment", N = "seat death grab crate" }},
{ 0x24C, new C{ T="TagRef", N = "seat death grab crate" }},
{ 0x268, new C{ T="mmr3Hash", N = "Seat Selection String" }},
{ 0x26C, new C{ T="Float", N = "bailout velocity" }},
{ 0x27016135, new C{ T="Comment", N = "Seat Ejection Fields" }},
{ 0x270, new C{ T="Float", N = "maximum acceleration" }},
{ 0x274, new C{ T="Float", N = "maximum centrifugal force" }},
}, S=632}},
{ 0xAB4, new C{ T="Float", N = "maximum seat switch linear velocity" }},
{ 0xAB8, new C{ T="Float", N = "maximum seat switch angular velocity" }},
{ 0xABC, new EnumGroup { A=2, N="empty mount behavior", STR = new Dictionary<int, string>()
{
{0, "Reset Team when empty and parentless" },
{1, "Keep last team when empty and parentless" },
}}},
{ 0xABE, new C{ T="2Byte", N = "generated_pad7674" }},
{ 0xAC016136, new C{ T="Comment", N = "open/close" }},
{ 0xAC0, new C{ T="Float", N = "opening time" }},
{ 0xAC4, new C{ T="Float", N = "closing time" }},
{ 0xAC816137, new C{ T="Comment", N = "" }},
{ 0xAC8, new C{ T="TagRef", N = "docking site" }},
{ 0xAE416138, new C{ T="Comment", N = "Deprecated Unit Power Component settings.  Please use the new settings in the OBJECT section above." }},
{ 0xAE4, new C{ T="Tagblock", N = "power component", B = new Dictionary<long, C>
{
{ 0x016139, new C{ T="Comment", N = "Power Component System" }},
{ 0x0, new C{ T="Tagblock", N = "power source configurations", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "name" }},
{ 0x4, new C{ T="Float", N = "capacity" }},
}, S=8}},
{ 0x14, new C{ T="Tagblock", N = "power sources", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "region name" }},
{ 0x4, new C{ T="4Byte", N = "runtime region index" }},
{ 0x816140, new C{ T="Comment", N = "Model Region Damage State Configurations" }},
{ 0x8, new C{ T="Tagblock", N = "state configurations", B = new Dictionary<long, C>
{
{ 0x0, new EnumGroup { A=2, N="region state", STR = new Dictionary<int, string>()
{
{0, "default" },
{1, "minor damage" },
{2, "medium damage" },
{3, "major damage" },
{4, "destroyed" },
}}},
{ 0x2, new C{ T="2Byte", N = "configuration" }},
}, S=4}},
}, S=28}},
{ 0x2816141, new C{ T="Comment", N = "communication node capacity" }},
{ 0x28, new C{ T="Tagblock", N = "communication node power sources", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="2Byte", N = "component" }},
}, S=2}},
{ 0x3C, new C{ T="mmr3Hash", N = "communication node power modifier id" }},
{ 0x4016142, new C{ T="Comment", N = "" }},
{ 0x4016143, new C{ T="Comment", N = "locomotion capacity" }},
{ 0x40, new C{ T="Tagblock", N = "locomotion power sources", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="2Byte", N = "component" }},
}, S=2}},
{ 0x54, new C{ T="mmr3Hash", N = "locomotion power modifier id" }},
{ 0x5816144, new C{ T="Comment", N = "locomotion power modifier" }},
{ 0x5816145, new C{ T="Comment", N = "locomotion power modifier" }},
{ 0x58, new C{ T="Float", N = "Base Value" }},
{ 0x5C, new C{ T="Float", N = "Value Bounds.min" }},
{ 0x60, new C{ T="Float", N = "Value Bounds.max" }},
{ 0x6416146, new C{ T="Comment", N = "" }},
{ 0x6416147, new C{ T="Comment", N = "weapon capacity" }},
{ 0x64, new C{ T="Tagblock", N = "weapon power sources", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="2Byte", N = "component" }},
}, S=2}},
{ 0x78, new C{ T="mmr3Hash", N = "weapon power modifier id" }},
{ 0x7C16148, new C{ T="Comment", N = "" }},
}, S=124}},
{ 0xAF816149, new C{ T="Comment", N = "Boost" }},
{ 0xAF8, new C{ T="TagRef", N = "boost definition" }},
{ 0xB1416150, new C{ T="Comment", N = "Deprecated Boost Fields.  Please use the Boost Definition field above." }},
{ 0xB1416151, new C{ T="Comment", N = "boost" }},
{ 0xB14, new C{ T="TagRef", N = "boost collision damage" }},
{ 0xB30, new FlagGroup { A=4, N="flags", STR = new Dictionary<int, string>()
{
{0, "pegs throttle" },
}}},
{ 0xB34, new C{ T="Float", N = "boost peak power" }},
{ 0xB38, new C{ T="Float", N = "boost rise time" }},
{ 0xB3C, new C{ T="Float", N = "boost fall time" }},
{ 0xB40, new C{ T="Float", N = "boost power per second" }},
{ 0xB44, new C{ T="Float", N = "boost low warning threshold" }},
{ 0xB48, new C{ T="Float", N = "recharge rate" }},
{ 0xB4C, new C{ T="Float", N = "recharge delay" }},
{ 0xB50, new C{ T="Float", N = "post boost weapon delay" }},
{ 0xB5416152, new C{ T="Comment", N = "trigger to boost" }},
{ 0xB5416153, new C{ T="Comment", N = "trigger to boost" }},
{ 0xB5416154, new C{ T="Comment", N = "" }},
{ 0xB54, new C{ T="Unmapped", N = "data" }},
{ 0xB6C16155, new C{ T="Comment", N = "" }},
{ 0xB6C, new EnumGroup { A=4, N="tutorial id", STR = new Dictionary<int, string>()
{
{0, "None" },
{1, "Assassination" },
{2, "Camera" },
{3, "Crouch" },
{4, "Grenade" },
{5, "Jump" },
{6, "Melee" },
{7, "Movement" },
{8, "Shoot" },
{9, "Tracking" },
{10, "Clamber" },
{11, "Slide" },
{12, "Sprint" },
{13, "Thruster" },
{14, "Zoom" },
{15, "BansheeBoost" },
{16, "BansheeTrick" },
{17, "BansheeSwitchWeapons" },
{18, "GhostBoost" },
{19, "MantisRockets" },
{20, "MantisStomp" },
{21, "VTOLAscend" },
{22, "VTOLDescend" },
{23, "VTOLEvade" },
{24, "VTOLSwitchWeapons" },
{25, "VTOLShoot" },
{26, "JeepDrive" },
{27, "JeepHandbrake" },
{28, "JeepShoot" },
{29, "WraithBoost" },
{30, "SeatSwitch" },
{31, "OrdersGeneral" },
{32, "OrdersClear" },
{33, "OrdersEnemy" },
{34, "OrdersMove" },
{35, "OrdersVehicle" },
{36, "OrdersWeapon" },
}}},
{ 0xB7016156, new C{ T="Comment", N = "" }},
{ 0xB70, new EnumGroup { A=4, N="tutorial weapon swap id", STR = new Dictionary<int, string>()
{
{0, "None" },
{1, "Assassination" },
{2, "Camera" },
{3, "Crouch" },
{4, "Grenade" },
{5, "Jump" },
{6, "Melee" },
{7, "Movement" },
{8, "Shoot" },
{9, "Tracking" },
{10, "Clamber" },
{11, "Slide" },
{12, "Sprint" },
{13, "Thruster" },
{14, "Zoom" },
{15, "BansheeBoost" },
{16, "BansheeTrick" },
{17, "BansheeSwitchWeapons" },
{18, "GhostBoost" },
{19, "MantisRockets" },
{20, "MantisStomp" },
{21, "VTOLAscend" },
{22, "VTOLDescend" },
{23, "VTOLEvade" },
{24, "VTOLSwitchWeapons" },
{25, "VTOLShoot" },
{26, "JeepDrive" },
{27, "JeepHandbrake" },
{28, "JeepShoot" },
{29, "WraithBoost" },
{30, "SeatSwitch" },
{31, "OrdersGeneral" },
{32, "OrdersClear" },
{33, "OrdersEnemy" },
{34, "OrdersMove" },
{35, "OrdersVehicle" },
{36, "OrdersWeapon" },
}}},
{ 0xB7416157, new C{ T="Comment", N = "Lipsync" }},
{ 0xB7416158, new C{ T="Comment", N = "lipsync" }},
{ 0xB74, new C{ T="Float", N = "attack weight" }},
{ 0xB78, new C{ T="Float", N = "decay weight" }},
{ 0xB7C16159, new C{ T="Comment", N = "Exit and Detach" }},
{ 0xB7C, new C{ T="TagRef", N = "exit and detach damage" }},
{ 0xB98, new C{ T="TagRef", N = "exit and detach weapon" }},
{ 0xBB4, new C{ T="Tagblock", N = "exit and detach variants", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "variant name" }},
{ 0x4, new C{ T="TagRef", N = "exit and detach weapon" }},
{ 0x20, new C{ T="TagRef", N = "exit and detach damage" }},
}, S=60}},
{ 0xBC816160, new C{ T="Comment", N = "Vehicle Death Telemetry Rule" }},
{ 0xBC8, new EnumGroup { A=1, N="Death Telemetry Rule", STR = new Dictionary<int, string>()
{
{0, "Default" },
{1, "Always Send Event" },
{2, "Never Send Event" },
}}},
{ 0xBC9, new C{ T="Byte", N = "generated_pad29bf" }},
{ 0xBCA16161, new C{ T="Comment", N = "Experience" }},
{ 0xBCA, new C{ T="2Byte", N = "experience for kill" }},
{ 0xBCC, new C{ T="2Byte", N = "experience for assist" }},
{ 0xBCE, new C{ T="2Byte", N = "generated_pad0fde" }},
{ 0xBD0, new C{ T="Float", N = "bailout threshold" }},
{ 0xBD4, new C{ T="Float", N = "iron sight weapon dampening" }},
{ 0xBD816162, new C{ T="Comment", N = "Birthing" }},
{ 0xBD816163, new C{ T="Comment", N = "birth" }},
{ 0xBD8, new C{ T="2Byte", N = "seat" }},
{ 0xBDA, new C{ T="2Byte", N = "generated_pada2d2" }},
{ 0xBDC, new C{ T="mmr3Hash", N = "birthing region" }},
{ 0xBE016164, new C{ T="Comment", N = "" }},
{ 0xBE0, new C{ T="Float", N = "procedural recoil scaler" }},
{ 0xBE4, new C{ T="TagRef", N = "flinch system" }},
{ 0xC0016165, new C{ T="Comment", N = "Active Camouflage Malleable Properties" }},
{ 0xC0016166, new C{ T="Comment", N = "active camouflage properties" }},
{ 0xC00, new EnumGroup { A=1, N="camo level", STR = new Dictionary<int, string>()
{
{0, "poor" },
{1, "good" },
{2, "excellent" },
{3, "invisible" },
{4, "ai" },
}}},
{ 0xC01, new FlagGroup { A=1, N="flags", STR = new Dictionary<int, string>()
{
{0, "No speed scaling" },
}}},
{ 0xC02, new C{ T="2Byte", N = "generated_pad06e4" }},
{ 0xC0416167, new C{ T="Comment", N = "grenade throw penalty" }},
{ 0xC0416168, new C{ T="Comment", N = "grenade throw penalty" }},
{ 0xC04, new C{ T="Float", N = "Base Value" }},
{ 0xC08, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xC0C, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xC1016169, new C{ T="Comment", N = "interpolation time" }},
{ 0xC1016170, new C{ T="Comment", N = "interpolation time" }},
{ 0xC10, new C{ T="Float", N = "Base Value" }},
{ 0xC14, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xC18, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xC1C16171, new C{ T="Comment", N = "melee penalty" }},
{ 0xC1C16172, new C{ T="Comment", N = "melee penalty" }},
{ 0xC1C, new C{ T="Float", N = "Base Value" }},
{ 0xC20, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xC24, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xC2816173, new C{ T="Comment", N = "minimum dinged amount" }},
{ 0xC2816174, new C{ T="Comment", N = "minimum dinged amount" }},
{ 0xC28, new C{ T="Float", N = "Base Value" }},
{ 0xC2C, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xC30, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xC3416175, new C{ T="Comment", N = "maximum duration" }},
{ 0xC3416176, new C{ T="Comment", N = "maximum duration" }},
{ 0xC34, new C{ T="Float", N = "Base Value" }},
{ 0xC38, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xC3C, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xC40, new C{ T="TagRef", N = "active camouflage energy gain effect" }},
{ 0xC5C16177, new C{ T="Comment", N = "damage properties" }},
{ 0xC5C16178, new C{ T="Comment", N = "Damage scaling malleable properties" }},
{ 0xC5C16179, new C{ T="Comment", N = "Weapon damage scalar" }},
{ 0xC5C16180, new C{ T="Comment", N = "Weapon damage scalar" }},
{ 0xC5C, new C{ T="Float", N = "Base Value" }},
{ 0xC60, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xC64, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xC6816181, new C{ T="Comment", N = "Melee damage scalar" }},
{ 0xC6816182, new C{ T="Comment", N = "Melee damage scalar" }},
{ 0xC68, new C{ T="Float", N = "Base Value" }},
{ 0xC6C, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xC70, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xC7416183, new C{ T="Comment", N = "Melee knockback scalar" }},
{ 0xC7416184, new C{ T="Comment", N = "Melee knockback scalar" }},
{ 0xC74, new C{ T="Float", N = "Base Value" }},
{ 0xC78, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xC7C, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xC8016185, new C{ T="Comment", N = "Melee recovery speed scalar" }},
{ 0xC8016186, new C{ T="Comment", N = "Melee recovery speed scalar" }},
{ 0xC80, new C{ T="Float", N = "Base Value" }},
{ 0xC84, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xC88, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xC8C16187, new C{ T="Comment", N = "Grenade damage scalar" }},
{ 0xC8C16188, new C{ T="Comment", N = "Grenade damage scalar" }},
{ 0xC8C, new C{ T="Float", N = "Base Value" }},
{ 0xC90, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xC94, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xC9816189, new C{ T="Comment", N = "Grenade knockback scalar" }},
{ 0xC9816190, new C{ T="Comment", N = "Grenade knockback scalar" }},
{ 0xC98, new C{ T="Float", N = "Base Value" }},
{ 0xC9C, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xCA0, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xCA416191, new C{ T="Comment", N = "Body vampirism scalar" }},
{ 0xCA416192, new C{ T="Comment", N = "Body vampirism scalar" }},
{ 0xCA4, new C{ T="Float", N = "Base Value" }},
{ 0xCA8, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xCAC, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xCB016193, new C{ T="Comment", N = "Shield vampirism scalar" }},
{ 0xCB016194, new C{ T="Comment", N = "Shield vampirism scalar" }},
{ 0xCB0, new C{ T="Float", N = "Base Value" }},
{ 0xCB4, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xCB8, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xCBC16195, new C{ T="Comment", N = "Area of effect radius scalar" }},
{ 0xCBC16196, new C{ T="Comment", N = "Area of effect radius scalar" }},
{ 0xCBC, new C{ T="Float", N = "Base Value" }},
{ 0xCC0, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xCC4, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xCC816197, new C{ T="Comment", N = "weapon properties" }},
{ 0xCC816198, new C{ T="Comment", N = "Weapon trait malleable properties" }},
{ 0xCC816199, new C{ T="Comment", N = "weapon switch speed scalar" }},
{ 0xCC816200, new C{ T="Comment", N = "weapon switch speed scalar" }},
{ 0xCC8, new C{ T="Float", N = "Base Value" }},
{ 0xCCC, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xCD0, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xCD416201, new C{ T="Comment", N = "weapon empty reload speed scalar" }},
{ 0xCD416202, new C{ T="Comment", N = "weapon empty reload speed scalar" }},
{ 0xCD4, new C{ T="Float", N = "Base Value" }},
{ 0xCD8, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xCDC, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xCE016203, new C{ T="Comment", N = "weapon overheat loss scalar" }},
{ 0xCE016204, new C{ T="Comment", N = "weapon overheat loss scalar" }},
{ 0xCE0, new C{ T="Float", N = "Base Value" }},
{ 0xCE4, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xCE8, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xCEC16205, new C{ T="Comment", N = "weapon tactical reload speed scalar" }},
{ 0xCEC16206, new C{ T="Comment", N = "weapon tactical reload speed scalar" }},
{ 0xCEC, new C{ T="Float", N = "Base Value" }},
{ 0xCF0, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xCF4, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xCF816207, new C{ T="Comment", N = "weapon tactical cooling scalar" }},
{ 0xCF816208, new C{ T="Comment", N = "weapon tactical cooling scalar" }},
{ 0xCF8, new C{ T="Float", N = "Base Value" }},
{ 0xCFC, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xD00, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xD0416209, new C{ T="Comment", N = "movement speed (with turret) scalar" }},
{ 0xD0416210, new C{ T="Comment", N = "movement speed (with turret) scalar" }},
{ 0xD04, new C{ T="Float", N = "Base Value" }},
{ 0xD08, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xD0C, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xD1016211, new C{ T="Comment", N = "emp properties" }},
{ 0xD1016212, new C{ T="Comment", N = "EMP malleable properties" }},
{ 0xD1016213, new C{ T="Comment", N = "EMP disable duration scalar " }},
{ 0xD1016214, new C{ T="Comment", N = "EMP disable duration scalar " }},
{ 0xD10, new C{ T="Float", N = "Base Value" }},
{ 0xD14, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xD18, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xD1C16215, new C{ T="Comment", N = "EMP disable duration MP scalar " }},
{ 0xD1C16216, new C{ T="Comment", N = "EMP disable duration MP scalar " }},
{ 0xD1C, new C{ T="Float", N = "Base Value" }},
{ 0xD20, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xD24, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xD28, new C{ T="TagRef", N = "EMP unit modifiers" }},
{ 0xD44, new C{ T="TagRef", N = "emp disabled effect" }},
{ 0xD60, new C{ T="mmr3Hash", N = "recording unit type" }},
{ 0xD6416217, new C{ T="Comment", N = "" }},
{ 0xD64, new C{ T="TagRef", N = "knockback collision damage override" }},
{ 0xD8016218, new C{ T="Comment", N = "$$$ VEHICLE $$$" }},
{ 0xD80, new C{ T="TagRef", N = "parent" }},
{ 0xD9C, new FlagGroup { A=4, N="flags", STR = new Dictionary<int, string>()
{
{0, "no friction w/driver" },
{1, "autoaim when teamless" },
{2, "ai weapon cannot rotate" },
{3, "ai does not require driver" },
{4, "ai driver enable" },
{5, "ai driver flying" },
{6, "ai driver can-sidestep" },
{7, "ai driver hovering" },
{8, "noncombat vehicle" },
{9, "does not cause collision damage" },
{10, "huge vehicle physics group" },
{11, "ai auto turret" },
{12, "ai sentry turret" },
{13, "ignore camera pitch" },
{14, "auto turret" },
{15, "ignore kill volumes" },
{16, "targetable when open" },
{17, "vehicle wants to recieve reduced weapon acceleration when on ground" },
{18, "vehicle wants to recieve reduced weapon acceleration when airborne" },
{19, "do not force units to exit when upside down" },
{20, "vehicle creates enemy spawn influencers" },
{21, "driver cannot take damage" },
{22, "player cannot flip vehicle" },
{23, "do not kill riders at terminal velocity" },
{24, "people in this vehicle use radio only" },
{25, "Treat the offhand dual wielded weapon as a secondary primary weapon" },
{26, "Override the player's nav point while they are in this vehicle" },
}}},
{ 0xDA016219, new C{ T="Comment", N = "physics type" }},
{ 0xDA016220, new C{ T="Comment", N = "physics types" }},
{ 0xDA016221, new C{ T="Comment", N = "" }},
{ 0xDA0, new C{ T="Tagblock", N = "type-human_tank", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "forward arc" }},
{ 0x4, new C{ T="Float", N = "perpendicular forward arc" }},
{ 0x8, new C{ T="Float", N = "flip window" }},
{ 0xC, new C{ T="Float", N = "pegged fraction" }},
{ 0x10, new C{ T="Float", N = "forward turn scale" }},
{ 0x14, new C{ T="Float", N = "reverse turn scale" }},
{ 0x1816222, new C{ T="Comment", N = "forward differential" }},
{ 0x18, new C{ T="Float", N = "maximum left differential" }},
{ 0x1C, new C{ T="Float", N = "maximum right differential" }},
{ 0x20, new C{ T="Float", N = "differential acceleration" }},
{ 0x24, new C{ T="Float", N = "differential deceleration" }},
{ 0x2816223, new C{ T="Comment", N = "reverse differential" }},
{ 0x28, new C{ T="Float", N = "maximum left reverse differential" }},
{ 0x2C, new C{ T="Float", N = "maximum right reverse differential" }},
{ 0x30, new C{ T="Float", N = "differential reverse acceleration" }},
{ 0x34, new C{ T="Float", N = "differential reverse deceleration" }},
{ 0x3816224, new C{ T="Comment", N = "engine" }},
{ 0x3816225, new C{ T="Comment", N = "engine" }},
{ 0x38, new C{ T="Float", N = "engine moment" }},
{ 0x3C, new C{ T="Float", N = "engine min angular velocity" }},
{ 0x40, new C{ T="Float", N = "engine max angular velocity" }},
{ 0x44, new C{ T="Tagblock", N = "gears", B = new Dictionary<long, C>
{
{ 0x016226, new C{ T="Comment", N = "loaded torque" }},
{ 0x016227, new C{ T="Comment", N = "loaded torque curve" }},
{ 0x016228, new C{ T="Comment", N = "function" }},
{ 0x016229, new C{ T="Comment", N = "function" }},
{ 0x016230, new C{ T="Comment", N = "function" }},
{ 0x016231, new C{ T="Comment", N = "" }},
{ 0x0, new C{ T="Unmapped", N = "data" }},
{ 0x1816232, new C{ T="Comment", N = "" }},
{ 0x1816233, new C{ T="Comment", N = "cruising torque" }},
{ 0x1816234, new C{ T="Comment", N = "cruising torque curve" }},
{ 0x1816235, new C{ T="Comment", N = "function" }},
{ 0x1816236, new C{ T="Comment", N = "function" }},
{ 0x1816237, new C{ T="Comment", N = "function" }},
{ 0x1816238, new C{ T="Comment", N = "" }},
{ 0x18, new C{ T="Unmapped", N = "data" }},
{ 0x3016239, new C{ T="Comment", N = "" }},
{ 0x3016240, new C{ T="Comment", N = "gearing" }},
{ 0x30, new C{ T="Float", N = "min time to upshift" }},
{ 0x34, new C{ T="Float", N = "engine up-shift scale" }},
{ 0x38, new C{ T="Float", N = "gear ratio" }},
{ 0x3C, new C{ T="Float", N = "min time to downshift" }},
{ 0x40, new C{ T="Float", N = "engine down-shift scale" }},
{ 0x44, new C{ T="Float", N = "audio engine uprev rate" }},
{ 0x48, new C{ T="Float", N = "audio engine shift up RPM value" }},
{ 0x4C, new C{ T="Float", N = "audio engine downrev rate" }},
{ 0x50, new C{ T="Float", N = "audio engine shift down RPM value" }},
{ 0x54, new C{ T="TagRef", N = "gear shift sound - shifting up" }},
{ 0x70, new C{ T="TagRef", N = "gear shift sound - shifting down" }},
}, S=140}},
{ 0x58, new C{ T="TagRef", N = "gear shift sound" }},
{ 0x74, new C{ T="Tagblock", N = "load and cruise sound", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "load cruise function" }},
{ 0x4, new C{ T="4Byte", N = "attachment index" }},
}, S=8}},
{ 0x8816241, new C{ T="Comment", N = "wheel circumferance" }},
{ 0x88, new C{ T="Float", N = "wheel circumferance" }},
{ 0x8C, new C{ T="Float", N = "gravity adjust" }},
{ 0x9016242, new C{ T="Comment", N = "New Tank Controls" }},
{ 0x90, new FlagGroup { A=1, N="control flags", STR = new Dictionary<int, string>()
{
{0, "Enable New Control" },
{1, "Use Linear Velocity" },
{2, "Use Angular Velocity" },
}}},
{ 0x91, new C{ T="Comment", N = "generated_pad4b05" }},
{ 0x94, new C{ T="Float", N = "at rest forward angle(purple)" }},
{ 0x98, new C{ T="Float", N = "at rest reverse angle(violet)" }},
{ 0x9C, new C{ T="Float", N = "at rest side on reverse angle closest to front(green)" }},
{ 0xA0, new C{ T="Float", N = "at rest side on reverse angle furthest from front(blue)" }},
{ 0xA4, new C{ T="Float", N = "at rest facing forward reverse angle(yellow)" }},
{ 0xA8, new C{ T="Float", N = "at rest facing backward reverse angle(pink)" }},
{ 0xAC, new C{ T="Float", N = "in motion opposing direction angle" }},
{ 0xB0, new C{ T="Float", N = "in motion speed" }},
}, S=180}},
{ 0xDB4, new C{ T="Tagblock", N = "type-human_jeep", B = new Dictionary<long, C>
{
{ 0x016243, new C{ T="Comment", N = "steering control" }},
{ 0x016244, new C{ T="Comment", N = "steering overdampening" }},
{ 0x0, new C{ T="Float", N = "overdampen cusp angle" }},
{ 0x4, new C{ T="Float", N = "overdampen exponent" }},
{ 0x8, new C{ T="Float", N = "ebrake overdampen cusp angle" }},
{ 0xC, new C{ T="Float", N = "ebrake overdampen exponent" }},
{ 0x1016245, new C{ T="Comment", N = "Throttle Steering" }},
{ 0x10, new C{ T="Float", N = "throttle steering angle" }},
{ 0x14, new C{ T="Float", N = "throttle steering interpolation rate" }},
{ 0x1816246, new C{ T="Comment", N = "" }},
{ 0x1816247, new C{ T="Comment", N = "turning control" }},
{ 0x1816248, new C{ T="Comment", N = "turning" }},
{ 0x18, new C{ T="Float", N = "maximum left turn" }},
{ 0x1C, new C{ T="Float", N = "maximum right turn (negative)" }},
{ 0x20, new C{ T="Float", N = "turn rate" }},
{ 0x2416249, new C{ T="Comment", N = "engine" }},
{ 0x2416250, new C{ T="Comment", N = "engine" }},
{ 0x24, new C{ T="Float", N = "engine moment" }},
{ 0x28, new C{ T="Float", N = "engine min angular velocity" }},
{ 0x2C, new C{ T="Float", N = "engine max angular velocity" }},
{ 0x30, new C{ T="Tagblock", N = "gears", B = new Dictionary<long, C>
{
{ 0x016251, new C{ T="Comment", N = "loaded torque" }},
{ 0x016252, new C{ T="Comment", N = "loaded torque curve" }},
{ 0x016253, new C{ T="Comment", N = "function" }},
{ 0x016254, new C{ T="Comment", N = "function" }},
{ 0x016255, new C{ T="Comment", N = "function" }},
{ 0x016256, new C{ T="Comment", N = "" }},
{ 0x0, new C{ T="Unmapped", N = "data" }},
{ 0x1816257, new C{ T="Comment", N = "" }},
{ 0x1816258, new C{ T="Comment", N = "cruising torque" }},
{ 0x1816259, new C{ T="Comment", N = "cruising torque curve" }},
{ 0x1816260, new C{ T="Comment", N = "function" }},
{ 0x1816261, new C{ T="Comment", N = "function" }},
{ 0x1816262, new C{ T="Comment", N = "function" }},
{ 0x1816263, new C{ T="Comment", N = "" }},
{ 0x18, new C{ T="Unmapped", N = "data" }},
{ 0x3016264, new C{ T="Comment", N = "" }},
{ 0x3016265, new C{ T="Comment", N = "gearing" }},
{ 0x30, new C{ T="Float", N = "min time to upshift" }},
{ 0x34, new C{ T="Float", N = "engine up-shift scale" }},
{ 0x38, new C{ T="Float", N = "gear ratio" }},
{ 0x3C, new C{ T="Float", N = "min time to downshift" }},
{ 0x40, new C{ T="Float", N = "engine down-shift scale" }},
{ 0x44, new C{ T="Float", N = "audio engine uprev rate" }},
{ 0x48, new C{ T="Float", N = "audio engine shift up RPM value" }},
{ 0x4C, new C{ T="Float", N = "audio engine downrev rate" }},
{ 0x50, new C{ T="Float", N = "audio engine shift down RPM value" }},
{ 0x54, new C{ T="TagRef", N = "gear shift sound - shifting up" }},
{ 0x70, new C{ T="TagRef", N = "gear shift sound - shifting down" }},
}, S=140}},
{ 0x44, new C{ T="TagRef", N = "gear shift sound" }},
{ 0x60, new C{ T="Tagblock", N = "load and cruise sound", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "load cruise function" }},
{ 0x4, new C{ T="4Byte", N = "attachment index" }},
}, S=8}},
{ 0x7416266, new C{ T="Comment", N = "wheel circumferance" }},
{ 0x74, new C{ T="Float", N = "wheel circumferance" }},
{ 0x78, new C{ T="Float", N = "gravity adjust" }},
{ 0x7C, new C{ T="Float", N = "antiroll torque factor" }},
{ 0x8016267, new C{ T="Comment", N = "air control torque function" }},
{ 0x8016268, new C{ T="Comment", N = "function" }},
{ 0x8016269, new C{ T="Comment", N = "function" }},
{ 0x8016270, new C{ T="Comment", N = "" }},
{ 0x80, new C{ T="Unmapped", N = "data" }},
{ 0x9816271, new C{ T="Comment", N = "" }},
{ 0x98, new C{ T="Float", N = "air control torque max" }},
{ 0x9C16272, new C{ T="Comment", N = "Wheel Identification" }},
{ 0x9C, new C{ T="2Byte", N = "front left wheel" }},
{ 0x9E, new C{ T="2Byte", N = "front right wheel" }},
{ 0xA0, new C{ T="2Byte", N = "back left wheel" }},
{ 0xA2, new C{ T="2Byte", N = "back right wheel" }},
{ 0xA416273, new C{ T="Comment", N = "" }},
}, S=164}},
{ 0xDC8, new C{ T="Tagblock", N = "type-human_plane", B = new Dictionary<long, C>
{
{ 0x016274, new C{ T="Comment", N = "velocity control variables" }},
{ 0x0, new C{ T="Float", N = "maximum forward speed" }},
{ 0x4, new C{ T="Float", N = "maximum reverse speed" }},
{ 0x8, new C{ T="Float", N = "speed acceleration" }},
{ 0xC, new C{ T="Float", N = "speed deceleration" }},
{ 0x10, new C{ T="Float", N = "speed accel against direction" }},
{ 0x14, new C{ T="Float", N = "maximum forward speed during boost" }},
{ 0x18, new C{ T="Float", N = "maximum left slide" }},
{ 0x1C, new C{ T="Float", N = "maximum right slide" }},
{ 0x20, new C{ T="Float", N = "slide acceleration" }},
{ 0x24, new C{ T="Float", N = "slide deceleration" }},
{ 0x28, new C{ T="Float", N = "slide accel against direction" }},
{ 0x2C, new C{ T="Float", N = "maximum slide speed during boost" }},
{ 0x30, new C{ T="Float", N = "maximum up rise" }},
{ 0x34, new C{ T="Float", N = "maximum down rise" }},
{ 0x38, new C{ T="Float", N = "rise acceleration" }},
{ 0x3C, new C{ T="Float", N = "rise deceleration" }},
{ 0x40, new C{ T="Float", N = "rise accel against direction" }},
{ 0x44, new C{ T="Float", N = "maximum rise speed during boost" }},
{ 0x4816275, new C{ T="Comment", N = "human plane tuning variables" }},
{ 0x48, new C{ T="Float", N = "flying torque scale" }},
{ 0x4C, new C{ T="Float", N = "air friction deceleration" }},
{ 0x50, new C{ T="Float", N = "thrust scale" }},
{ 0x54, new C{ T="Float", N = "turn rate scale when boosting" }},
{ 0x58, new C{ T="Float", N = "maximum roll" }},
{ 0x5C16276, new C{ T="Comment", N = "steering animation" }},
{ 0x5C16277, new C{ T="Comment", N = "steering animation and interpolation" }},
{ 0x5C, new C{ T="Float", N = "interpolation scale" }},
{ 0x60, new C{ T="Float", N = "max angle" }},
}, S=100}},
{ 0xDDC, new C{ T="Tagblock", N = "type-alien_scout", B = new Dictionary<long, C>
{
{ 0x016278, new C{ T="Comment", N = "steering control" }},
{ 0x016279, new C{ T="Comment", N = "steering overdampening" }},
{ 0x0, new C{ T="Float", N = "overdampen cusp angle" }},
{ 0x4, new C{ T="Float", N = "overdampen exponent" }},
{ 0x8, new C{ T="Float", N = "ebrake overdampen cusp angle" }},
{ 0xC, new C{ T="Float", N = "ebrake overdampen exponent" }},
{ 0x1016280, new C{ T="Comment", N = "Throttle Steering" }},
{ 0x10, new C{ T="Float", N = "throttle steering angle" }},
{ 0x14, new C{ T="Float", N = "throttle steering interpolation rate" }},
{ 0x1816281, new C{ T="Comment", N = "" }},
{ 0x1816282, new C{ T="Comment", N = "velocity control variables" }},
{ 0x18, new C{ T="Float", N = "maximum forward speed" }},
{ 0x1C, new C{ T="Float", N = "maximum reverse speed" }},
{ 0x20, new C{ T="Float", N = "speed acceleration" }},
{ 0x24, new C{ T="Float", N = "speed deceleration" }},
{ 0x28, new C{ T="Float", N = "maximum left slide" }},
{ 0x2C, new C{ T="Float", N = "maximum right slide" }},
{ 0x30, new C{ T="Float", N = "slide acceleration" }},
{ 0x34, new C{ T="Float", N = "slide deceleration" }},
{ 0x38, new C{ T="Float", N = "AI deceleration multiplier" }},
{ 0x3C, new C{ T="Float", N = "slide accel against direction" }},
{ 0x40, new C{ T="Float", N = "slide speed at top speed" }},
{ 0x44, new FlagGroup { A=1, N="flags", STR = new Dictionary<int, string>()
{
{0, "locked camera" },
}}},
{ 0x45, new C{ T="Comment", N = "generated_pad1c8d" }},
{ 0x48, new C{ T="Float", N = "drag coeficient" }},
{ 0x4C, new C{ T="Float", N = "constant deceleration" }},
{ 0x50, new C{ T="Float", N = "torque scale" }},
{ 0x5416283, new C{ T="Comment", N = "engine object function" }},
{ 0x5416284, new C{ T="Comment", N = "engine gravity function" }},
{ 0x54, new C{ T="mmr3Hash", N = "object function damage region" }},
{ 0x58, new C{ T="Float", N = "min anti gravity engine speed" }},
{ 0x5C, new C{ T="Float", N = "max anti gravity engine speed" }},
{ 0x60, new C{ T="Float", N = "engine speed acceleration" }},
{ 0x64, new C{ T="Float", N = "maximum vehicle speed" }},
{ 0x6816285, new C{ T="Comment", N = "contrail object function" }},
{ 0x6816286, new C{ T="Comment", N = "contrail gravity function" }},
{ 0x68, new C{ T="mmr3Hash", N = "object function damage region" }},
{ 0x6C, new C{ T="Float", N = "min anti gravity engine speed" }},
{ 0x70, new C{ T="Float", N = "max anti gravity engine speed" }},
{ 0x74, new C{ T="Float", N = "engine speed acceleration" }},
{ 0x78, new C{ T="Float", N = "maximum vehicle speed" }},
{ 0x7C16287, new C{ T="Comment", N = "engine rotation function" }},
{ 0x7C, new C{ T="Float", N = "gear rotation speed.min" }},
{ 0x80, new C{ T="Float", N = "gear rotation speed.max" }},
{ 0x8416288, new C{ T="Comment", N = "steering animation" }},
{ 0x8416289, new C{ T="Comment", N = "steering animation and interpolation" }},
{ 0x84, new C{ T="Float", N = "interpolation scale" }},
{ 0x88, new C{ T="Float", N = "max angle" }},
{ 0x8C16290, new C{ T="Comment", N = "scout physics" }},
{ 0x8C, new FlagGroup { A=1, N="flags", STR = new Dictionary<int, string>()
{
{0, "hovercraft" },
{1, "slope scales speed" },
}}},
{ 0x8D, new C{ T="Comment", N = "generated_padddec" }},
{ 0x9016291, new C{ T="Comment", N = "Air control" }},
{ 0x90, new C{ T="Float", N = "air control angular velocity factor" }},
{ 0x94, new C{ T="Float", N = "air control throttle acceleration" }},
{ 0x98, new C{ T="Float", N = "air control throttle bonus clamp min" }},
{ 0x9C, new C{ T="Float", N = "air control throttle bonus clamp max" }},
{ 0xA0, new C{ T="Float", N = "air control angular acceleration" }},
{ 0xA4, new C{ T="Float", N = "air control auto level strength" }},
{ 0xA816292, new C{ T="Comment", N = "Brake control" }},
{ 0xA8, new C{ T="Float", N = "brake lift angular acceleration" }},
{ 0xAC, new C{ T="Float", N = "brake lift acceleration up" }},
{ 0xB0, new C{ T="Float", N = "brake airborne lift acceleration forward" }},
{ 0xB4, new C{ T="Float", N = "brake airborne lift acceleration up" }},
}, S=184}},
{ 0xDF0, new C{ T="Tagblock", N = "type-alien_fighter", B = new Dictionary<long, C>
{
{ 0x016293, new C{ T="Comment", N = "steering control" }},
{ 0x016294, new C{ T="Comment", N = "steering overdampening" }},
{ 0x0, new C{ T="Float", N = "overdampen cusp angle" }},
{ 0x4, new C{ T="Float", N = "overdampen exponent" }},
{ 0x8, new C{ T="Float", N = "ebrake overdampen cusp angle" }},
{ 0xC, new C{ T="Float", N = "ebrake overdampen exponent" }},
{ 0x1016295, new C{ T="Comment", N = "Throttle Steering" }},
{ 0x10, new C{ T="Float", N = "throttle steering angle" }},
{ 0x14, new C{ T="Float", N = "throttle steering interpolation rate" }},
{ 0x1816296, new C{ T="Comment", N = "" }},
{ 0x1816297, new C{ T="Comment", N = "turning control" }},
{ 0x1816298, new C{ T="Comment", N = "turning" }},
{ 0x18, new C{ T="Float", N = "maximum left turn" }},
{ 0x1C, new C{ T="Float", N = "maximum right turn (negative)" }},
{ 0x20, new C{ T="Float", N = "turn rate" }},
{ 0x2416299, new C{ T="Comment", N = "velocity control variables" }},
{ 0x24, new C{ T="Float", N = "maximum forward speed" }},
{ 0x28, new C{ T="Float", N = "maximum reverse speed" }},
{ 0x2C, new C{ T="Float", N = "speed acceleration" }},
{ 0x30, new C{ T="Float", N = "speed deceleration" }},
{ 0x34, new C{ T="Float", N = "boost maximum forward speed" }},
{ 0x38, new C{ T="Float", N = "boost maximum reverse speed" }},
{ 0x3C, new C{ T="Float", N = "boost speed acceleration" }},
{ 0x40, new C{ T="Float", N = "boost speed deceleration" }},
{ 0x44, new C{ T="Float", N = "maximum left slide" }},
{ 0x48, new C{ T="Float", N = "maximum right slide" }},
{ 0x4C, new C{ T="Float", N = "slide acceleration" }},
{ 0x50, new C{ T="Float", N = "slide deceleration" }},
{ 0x54, new C{ T="Float", N = "slide accel against direction" }},
{ 0x5816300, new C{ T="Comment", N = "torque scale" }},
{ 0x58, new C{ T="Float", N = "flying torque scale" }},
{ 0x5C, new C{ T="Float", N = "flying torque cap cusp" }},
{ 0x60, new C{ T="Float", N = "flying torque cap exponent" }},
{ 0x6416301, new C{ T="Comment", N = "fixed gun offset" }},
{ 0x64, new C{ T="Float", N = "fixed gun yaw" }},
{ 0x68, new C{ T="Float", N = "fixed gun pitch" }},
{ 0x6C16302, new C{ T="Comment", N = "alien fighter trick variables" }},
{ 0x6C, new C{ T="Float", N = "maximum trick frequency" }},
{ 0x70, new C{ T="Float", N = "loop trick duration" }},
{ 0x74, new C{ T="Float", N = "roll trick duration" }},
{ 0x7816303, new C{ T="Comment", N = "alien fighter fake flight control" }},
{ 0x78, new C{ T="Float", N = "zero gravity speed" }},
{ 0x7C, new C{ T="Float", N = "full gravity speed" }},
{ 0x80, new C{ T="Float", N = "strafe boost scale" }},
{ 0x84, new C{ T="Float", N = "off stick deceleration scale" }},
{ 0x88, new C{ T="Float", N = "cruising throttle" }},
{ 0x8C, new C{ T="Float", N = "dive speed scale" }},
}, S=144}},
{ 0xE04, new C{ T="Tagblock", N = "type-turret", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=2, N="flags", STR = new Dictionary<int, string>()
{
{0, "powered by parent" },
{1, "idles in default position" },
{2, "reverse yaw motor direction" },
{3, "reverse pitch motor direction" },
{4, "reverse elevate motor direction" },
{5, "targetable when open" },
}}},
{ 0x2, new C{ T="2Byte", N = "generated_pad4605" }},
{ 0x4, new C{ T="mmr3Hash", N = "physical yaw node" }},
{ 0x8, new C{ T="mmr3Hash", N = "physical pitch node" }},
{ 0xC, new C{ T="mmr3Hash", N = "physical elevate node" }},
{ 0x10, new C{ T="Float", N = "operating elevation angle" }},
}, S=20}},
{ 0xE18, new C{ T="Tagblock", N = "type-vtol", B = new Dictionary<long, C>
{
{ 0x016304, new C{ T="Comment", N = "turning control" }},
{ 0x016305, new C{ T="Comment", N = "turning" }},
{ 0x0, new C{ T="Float", N = "maximum left turn" }},
{ 0x4, new C{ T="Float", N = "maximum right turn (negative)" }},
{ 0x8, new C{ T="Float", N = "turn rate" }},
{ 0xC16306, new C{ T="Comment", N = "" }},
{ 0xC, new C{ T="mmr3Hash", N = "left lift marker" }},
{ 0x1016307, new C{ T="Comment", N = "" }},
{ 0x10, new C{ T="mmr3Hash", N = "right lift marker" }},
{ 0x1416308, new C{ T="Comment", N = "" }},
{ 0x14, new C{ T="mmr3Hash", N = "thrust marker" }},
{ 0x1816309, new C{ T="Comment", N = "trigger to throttle" }},
{ 0x1816310, new C{ T="Comment", N = "function" }},
{ 0x1816311, new C{ T="Comment", N = "function" }},
{ 0x1816312, new C{ T="Comment", N = "" }},
{ 0x18, new C{ T="Unmapped", N = "data" }},
{ 0x3016313, new C{ T="Comment", N = "" }},
{ 0x3016314, new C{ T="Comment", N = "descent to boost" }},
{ 0x3016315, new C{ T="Comment", N = "descent to boost" }},
{ 0x3016316, new C{ T="Comment", N = "function" }},
{ 0x3016317, new C{ T="Comment", N = "function" }},
{ 0x3016318, new C{ T="Comment", N = "" }},
{ 0x30, new C{ T="Unmapped", N = "data" }},
{ 0x4816319, new C{ T="Comment", N = "" }},
{ 0x48, new C{ T="Float", N = "max downward speed" }},
{ 0x4C16320, new C{ T="Comment", N = "minimum and maximum up acceleration" }},
{ 0x4C, new C{ T="Float", N = "maximum up acceleration" }},
{ 0x50, new C{ T="Float", N = "maximum down acceleration" }},
{ 0x54, new C{ T="Float", N = "vertical deceleration time" }},
{ 0x5816321, new C{ T="Comment", N = "lift arm pivot" }},
{ 0x58, new C{ T="Float", N = "lift arm pivot length" }},
{ 0x5C, new C{ T="Float", N = "lift arm pivot length negative z" }},
{ 0x6016322, new C{ T="Comment", N = "turn, left and forward accelerations" }},
{ 0x60, new C{ T="Float", N = "maximum turn acceleration" }},
{ 0x64, new C{ T="Float", N = "turn acceleration gain" }},
{ 0x6816323, new C{ T="Comment", N = "interpolation parameters" }},
{ 0x68, new C{ T="Float", N = "interpolation speed domain" }},
{ 0x6C16324, new C{ T="Comment", N = "function explanation" }},
{ 0x6C16325, new C{ T="Comment", N = "SPEED_TROTTLE_CEILING()" }},
{ 0x6C16326, new C{ T="Comment", N = "function" }},
{ 0x6C16327, new C{ T="Comment", N = "function" }},
{ 0x6C16328, new C{ T="Comment", N = "" }},
{ 0x6C, new C{ T="Unmapped", N = "data" }},
{ 0x8416329, new C{ T="Comment", N = "" }},
{ 0x8416330, new C{ T="Comment", N = "INTERPOLATION_ACC()" }},
{ 0x8416331, new C{ T="Comment", N = "function" }},
{ 0x8416332, new C{ T="Comment", N = "function" }},
{ 0x8416333, new C{ T="Comment", N = "" }},
{ 0x84, new C{ T="Unmapped", N = "data" }},
{ 0x9C16334, new C{ T="Comment", N = "" }},
{ 0x9C16335, new C{ T="Comment", N = "A_B_INTERPOLATION() interpolation mapping" }},
{ 0x9C16336, new C{ T="Comment", N = "function" }},
{ 0x9C16337, new C{ T="Comment", N = "function" }},
{ 0x9C16338, new C{ T="Comment", N = "" }},
{ 0x9C, new C{ T="Unmapped", N = "data" }},
{ 0xB416339, new C{ T="Comment", N = "" }},
{ 0xB4, new C{ T="Tagblock", N = "speed interpolated parameters", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "rotor damping" }},
{ 0x4, new C{ T="Float", N = "maximum left acceleration" }},
{ 0x8, new C{ T="Float", N = "maximum forward acceleration" }},
{ 0xC, new C{ T="Float", N = "drag coeficient" }},
{ 0x10, new C{ T="Float", N = "constant deceleration" }},
{ 0x14, new C{ T="Float", N = "magic angular acc exp" }},
{ 0x18, new C{ T="Float", N = "magic angular acc scale" }},
{ 0x1C, new C{ T="Float", N = "magic angular acc k" }},
}, S=32}},
{ 0xC8, new C{ T="Float", N = "lift angles acc" }},
{ 0xCC, new C{ T="Float", N = "alt. lock offset coefficient" }},
{ 0xD0, new C{ T="Float", N = "alt. lock velocity coefficient" }},
{ 0xD416340, new C{ T="Comment", N = "prop rotation" }},
{ 0xD4, new C{ T="Float", N = "prop rotation speed.min" }},
{ 0xD8, new C{ T="Float", N = "prop rotation speed.max" }},
{ 0xDC16341, new C{ T="Comment", N = "landing" }},
{ 0xDC, new C{ T="Float", N = "landing time" }},
{ 0xE0, new C{ T="Float", N = "takeoff time" }},
{ 0xE4, new C{ T="Float", N = "landing linear velocity" }},
{ 0xE8, new C{ T="Float", N = "landing angular velocity" }},
{ 0xEC, new C{ T="Float", N = "auto take off height offset" }},
{ 0xF0, new FlagGroup { A=2, N="flags", STR = new Dictionary<int, string>()
{
{0, "dodge overloaded on boost trigger" },
{1, "disable weapons when boosting" },
{2, "allow boost in z" },
{3, "manual altitude lock" },
}}},
{ 0xF2, new C{ T="2Byte", N = "generated_padac32" }},
{ 0xF416342, new C{ T="Comment", N = "dodge boost" }},
{ 0xF416343, new C{ T="Comment", N = "dodge boost force application" }},
{ 0xF416344, new C{ T="Comment", N = "function" }},
{ 0xF416345, new C{ T="Comment", N = "function" }},
{ 0xF416346, new C{ T="Comment", N = "" }},
{ 0xF4, new C{ T="Unmapped", N = "data" }},
{ 0x10C16347, new C{ T="Comment", N = "" }},
{ 0x10C16348, new C{ T="Comment", N = "dodge boost velocity" }},
{ 0x10C16349, new C{ T="Comment", N = "function" }},
{ 0x10C16350, new C{ T="Comment", N = "function" }},
{ 0x10C16351, new C{ T="Comment", N = "" }},
{ 0x10C, new C{ T="Unmapped", N = "data" }},
{ 0x12416352, new C{ T="Comment", N = "" }},
{ 0x124, new C{ T="Float", N = "dodge boost trigger time" }},
{ 0x128, new C{ T="Float", N = "dodge boost duration" }},
{ 0x12C, new C{ T="Float", N = "dodge boost recharge duration" }},
{ 0x130, new C{ T="TagRef", N = "dodge boost damage response" }},
{ 0x14C16353, new C{ T="Comment", N = "steering overdampening" }},
{ 0x14C16354, new C{ T="Comment", N = "steering control" }},
{ 0x14C16355, new C{ T="Comment", N = "steering overdampening" }},
{ 0x14C, new C{ T="Float", N = "overdampen cusp angle" }},
{ 0x150, new C{ T="Float", N = "overdampen exponent" }},
{ 0x154, new C{ T="Float", N = "ebrake overdampen cusp angle" }},
{ 0x158, new C{ T="Float", N = "ebrake overdampen exponent" }},
{ 0x15C16356, new C{ T="Comment", N = "Throttle Steering" }},
{ 0x15C, new C{ T="Float", N = "throttle steering angle" }},
{ 0x160, new C{ T="Float", N = "throttle steering interpolation rate" }},
{ 0x16416357, new C{ T="Comment", N = "" }},
}, S=356}},
{ 0xE2C, new C{ T="Tagblock", N = "type-chopper", B = new Dictionary<long, C>
{
{ 0x016358, new C{ T="Comment", N = "steering control" }},
{ 0x016359, new C{ T="Comment", N = "steering overdampening" }},
{ 0x0, new C{ T="Float", N = "overdampen cusp angle" }},
{ 0x4, new C{ T="Float", N = "overdampen exponent" }},
{ 0x8, new C{ T="Float", N = "ebrake overdampen cusp angle" }},
{ 0xC, new C{ T="Float", N = "ebrake overdampen exponent" }},
{ 0x1016360, new C{ T="Comment", N = "Throttle Steering" }},
{ 0x10, new C{ T="Float", N = "throttle steering angle" }},
{ 0x14, new C{ T="Float", N = "throttle steering interpolation rate" }},
{ 0x1816361, new C{ T="Comment", N = "" }},
{ 0x1816362, new C{ T="Comment", N = "turning control" }},
{ 0x1816363, new C{ T="Comment", N = "turning" }},
{ 0x18, new C{ T="Float", N = "maximum left turn" }},
{ 0x1C, new C{ T="Float", N = "maximum right turn (negative)" }},
{ 0x20, new C{ T="Float", N = "turn rate" }},
{ 0x2416364, new C{ T="Comment", N = "engine" }},
{ 0x2416365, new C{ T="Comment", N = "engine" }},
{ 0x24, new C{ T="Float", N = "engine moment" }},
{ 0x28, new C{ T="Float", N = "engine min angular velocity" }},
{ 0x2C, new C{ T="Float", N = "engine max angular velocity" }},
{ 0x30, new C{ T="Tagblock", N = "gears", B = new Dictionary<long, C>
{
{ 0x016366, new C{ T="Comment", N = "loaded torque" }},
{ 0x016367, new C{ T="Comment", N = "loaded torque curve" }},
{ 0x016368, new C{ T="Comment", N = "function" }},
{ 0x016369, new C{ T="Comment", N = "function" }},
{ 0x016370, new C{ T="Comment", N = "function" }},
{ 0x016371, new C{ T="Comment", N = "" }},
{ 0x0, new C{ T="Unmapped", N = "data" }},
{ 0x1816372, new C{ T="Comment", N = "" }},
{ 0x1816373, new C{ T="Comment", N = "cruising torque" }},
{ 0x1816374, new C{ T="Comment", N = "cruising torque curve" }},
{ 0x1816375, new C{ T="Comment", N = "function" }},
{ 0x1816376, new C{ T="Comment", N = "function" }},
{ 0x1816377, new C{ T="Comment", N = "function" }},
{ 0x1816378, new C{ T="Comment", N = "" }},
{ 0x18, new C{ T="Unmapped", N = "data" }},
{ 0x3016379, new C{ T="Comment", N = "" }},
{ 0x3016380, new C{ T="Comment", N = "gearing" }},
{ 0x30, new C{ T="Float", N = "min time to upshift" }},
{ 0x34, new C{ T="Float", N = "engine up-shift scale" }},
{ 0x38, new C{ T="Float", N = "gear ratio" }},
{ 0x3C, new C{ T="Float", N = "min time to downshift" }},
{ 0x40, new C{ T="Float", N = "engine down-shift scale" }},
{ 0x44, new C{ T="Float", N = "audio engine uprev rate" }},
{ 0x48, new C{ T="Float", N = "audio engine shift up RPM value" }},
{ 0x4C, new C{ T="Float", N = "audio engine downrev rate" }},
{ 0x50, new C{ T="Float", N = "audio engine shift down RPM value" }},
{ 0x54, new C{ T="TagRef", N = "gear shift sound - shifting up" }},
{ 0x70, new C{ T="TagRef", N = "gear shift sound - shifting down" }},
}, S=140}},
{ 0x44, new C{ T="TagRef", N = "gear shift sound" }},
{ 0x60, new C{ T="Tagblock", N = "load and cruise sound", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "load cruise function" }},
{ 0x4, new C{ T="4Byte", N = "attachment index" }},
}, S=8}},
{ 0x74, new C{ T="Float", N = "wheel circumferance" }},
{ 0x78, new C{ T="Float", N = "pivot offset.X" }},
{ 0x7C, new C{ T="Float", N = "pivot offset.Y" }},
{ 0x80, new C{ T="Float", N = "pivot offset.Z" }},
{ 0x8416381, new C{ T="Comment", N = "Yaw Correction" }},
{ 0x84, new C{ T="Float", N = "yaw correction coefficient 2" }},
{ 0x88, new C{ T="Float", N = "yaw correction coefficient 1" }},
{ 0x8C, new C{ T="Float", N = "yaw correction coefficient 0" }},
{ 0x90, new C{ T="Float", N = "bank to slide ratio" }},
{ 0x94, new C{ T="Float", N = "bank slide exponent" }},
{ 0x98, new C{ T="Float", N = "bank to turn ratio" }},
{ 0x9C, new C{ T="Float", N = "bank turn exponent" }},
{ 0xA0, new C{ T="Float", N = "bank fraction" }},
{ 0xA4, new C{ T="Float", N = "bank rate" }},
{ 0xA8, new C{ T="Float", N = "wheel accel" }},
{ 0xAC, new C{ T="Float", N = "gyroscopic damping" }},
}, S=176}},
{ 0xE40, new C{ T="Tagblock", N = "type-guardian", B = new Dictionary<long, C>
{
{ 0x016382, new C{ T="Comment", N = "steering control" }},
{ 0x016383, new C{ T="Comment", N = "steering overdampening" }},
{ 0x0, new C{ T="Float", N = "overdampen cusp angle" }},
{ 0x4, new C{ T="Float", N = "overdampen exponent" }},
{ 0x8, new C{ T="Float", N = "ebrake overdampen cusp angle" }},
{ 0xC, new C{ T="Float", N = "ebrake overdampen exponent" }},
{ 0x1016384, new C{ T="Comment", N = "Throttle Steering" }},
{ 0x10, new C{ T="Float", N = "throttle steering angle" }},
{ 0x14, new C{ T="Float", N = "throttle steering interpolation rate" }},
{ 0x1816385, new C{ T="Comment", N = "" }},
{ 0x18, new C{ T="Float", N = "maximum forward speed" }},
{ 0x1C, new C{ T="Float", N = "maximum reverse speed" }},
{ 0x20, new C{ T="Float", N = "speed acceleration" }},
{ 0x24, new C{ T="Float", N = "speed deceleration" }},
{ 0x28, new C{ T="Float", N = "maximum left slide" }},
{ 0x2C, new C{ T="Float", N = "maximum right slide" }},
{ 0x30, new C{ T="Float", N = "slide acceleration" }},
{ 0x34, new C{ T="Float", N = "slide deceleration" }},
{ 0x38, new C{ T="Float", N = "torque scale" }},
{ 0x3C, new C{ T="Float", N = "anti-gravity force z-offset" }},
}, S=64}},
{ 0xE54, new C{ T="Tagblock", N = "type-jackal-glider", B = new Dictionary<long, C>
{
{ 0x016386, new C{ T="Comment", N = "steering control" }},
{ 0x016387, new C{ T="Comment", N = "steering overdampening" }},
{ 0x0, new C{ T="Float", N = "overdampen cusp angle" }},
{ 0x4, new C{ T="Float", N = "overdampen exponent" }},
{ 0x8, new C{ T="Float", N = "ebrake overdampen cusp angle" }},
{ 0xC, new C{ T="Float", N = "ebrake overdampen exponent" }},
{ 0x1016388, new C{ T="Comment", N = "Throttle Steering" }},
{ 0x10, new C{ T="Float", N = "throttle steering angle" }},
{ 0x14, new C{ T="Float", N = "throttle steering interpolation rate" }},
{ 0x1816389, new C{ T="Comment", N = "" }},
{ 0x1816390, new C{ T="Comment", N = "velocity control variables" }},
{ 0x18, new C{ T="Float", N = "maximum forward speed" }},
{ 0x1C, new C{ T="Float", N = "maximum reverse speed" }},
{ 0x20, new C{ T="Float", N = "speed acceleration" }},
{ 0x24, new C{ T="Float", N = "speed deceleration" }},
{ 0x28, new C{ T="Float", N = "maximum left slide" }},
{ 0x2C, new C{ T="Float", N = "maximum right slide" }},
{ 0x30, new C{ T="Float", N = "slide acceleration" }},
{ 0x34, new C{ T="Float", N = "slide deceleration" }},
{ 0x38, new C{ T="Float", N = "torque scale" }},
{ 0x3C16391, new C{ T="Comment", N = "engine object function" }},
{ 0x3C16392, new C{ T="Comment", N = "engine object function" }},
{ 0x3C, new C{ T="mmr3Hash", N = "object function damage region" }},
{ 0x40, new C{ T="Float", N = "min anti gravity engine speed" }},
{ 0x44, new C{ T="Float", N = "max anti gravity engine speed" }},
{ 0x48, new C{ T="Float", N = "engine speed acceleration" }},
{ 0x4C, new C{ T="Float", N = "maximum vehicle speed" }},
{ 0x5016393, new C{ T="Comment", N = "contrail object function" }},
{ 0x5016394, new C{ T="Comment", N = "contrail object function" }},
{ 0x50, new C{ T="mmr3Hash", N = "object function damage region" }},
{ 0x54, new C{ T="Float", N = "min anti gravity engine speed" }},
{ 0x58, new C{ T="Float", N = "max anti gravity engine speed" }},
{ 0x5C, new C{ T="Float", N = "engine speed acceleration" }},
{ 0x60, new C{ T="Float", N = "maximum vehicle speed" }},
{ 0x6416395, new C{ T="Comment", N = "steering animation" }},
{ 0x6416396, new C{ T="Comment", N = "steering animation and interpolation" }},
{ 0x64, new C{ T="Float", N = "interpolation scale" }},
{ 0x68, new C{ T="Float", N = "max angle" }},
{ 0x6C, new C{ T="Float", N = "flying velocity threshold" }},
{ 0x70, new C{ T="Float", N = "flying look threshold" }},
{ 0x74, new C{ T="Float", N = "flying hover threshold" }},
{ 0x78, new C{ T="Float", N = "grounded hover threshold" }},
{ 0x7C, new C{ T="Float", N = "landing grounded time" }},
{ 0x80, new C{ T="Float", N = "ground turn radius" }},
{ 0x84, new C{ T="Float", N = "ground acceleration" }},
{ 0x8816397, new C{ T="Comment", N = "wing lift" }},
{ 0x88, new C{ T="Float", N = "wing lift q" }},
{ 0x8C, new C{ T="Float", N = "wing lift k" }},
{ 0x90, new C{ T="Float", N = "wing lift function ceiling" }},
{ 0x94, new C{ T="Float", N = "aileron to angular acceleartion scale" }},
{ 0x98, new C{ T="Float", N = "aileron yaw tilt angle" }},
{ 0x9C16398, new C{ T="Comment", N = "wing" }},
{ 0x9C16399, new C{ T="Comment", N = "wing surface" }},
{ 0x9C, new EnumGroup { A=1, N="offset axis", STR = new Dictionary<int, string>()
{
{0, "foward" },
{1, "left" },
{2, "up" },
}}},
{ 0x9D, new EnumGroup { A=1, N="pivot axis", STR = new Dictionary<int, string>()
{
{0, "foward" },
{1, "left" },
{2, "up" },
}}},
{ 0x9E, new EnumGroup { A=1, N="rotation axis", STR = new Dictionary<int, string>()
{
{0, "foward" },
{1, "left" },
{2, "up" },
}}},
{ 0x9F, new EnumGroup { A=1, N="normal axis", STR = new Dictionary<int, string>()
{
{0, "foward" },
{1, "left" },
{2, "up" },
}}},
{ 0xA0, new C{ T="Float", N = "offset distance" }},
{ 0xA4, new C{ T="Float", N = "pivot distance" }},
{ 0xA816400, new C{ T="Comment", N = "normal force" }},
{ 0xA8, new C{ T="Float", N = "q" }},
{ 0xAC, new C{ T="Float", N = "k" }},
{ 0xB0, new C{ T="Float", N = "function ceiling" }},
{ 0xB4, new C{ T="Float", N = "maximum angle" }},
{ 0xB8, new C{ T="Float", N = "render debug radius" }},
{ 0xBC16401, new C{ T="Comment", N = "ailerons" }},
{ 0xBC16402, new C{ T="Comment", N = "aileron surface" }},
{ 0xBC, new EnumGroup { A=1, N="offset axis", STR = new Dictionary<int, string>()
{
{0, "foward" },
{1, "left" },
{2, "up" },
}}},
{ 0xBD, new EnumGroup { A=1, N="pivot axis", STR = new Dictionary<int, string>()
{
{0, "foward" },
{1, "left" },
{2, "up" },
}}},
{ 0xBE, new EnumGroup { A=1, N="rotation axis", STR = new Dictionary<int, string>()
{
{0, "foward" },
{1, "left" },
{2, "up" },
}}},
{ 0xBF, new EnumGroup { A=1, N="normal axis", STR = new Dictionary<int, string>()
{
{0, "foward" },
{1, "left" },
{2, "up" },
}}},
{ 0xC0, new C{ T="Float", N = "offset distance" }},
{ 0xC4, new C{ T="Float", N = "pivot distance" }},
{ 0xC816403, new C{ T="Comment", N = "normal force" }},
{ 0xC8, new C{ T="Float", N = "q" }},
{ 0xCC, new C{ T="Float", N = "k" }},
{ 0xD0, new C{ T="Float", N = "function ceiling" }},
{ 0xD4, new C{ T="Float", N = "maximum angle" }},
{ 0xD8, new C{ T="Float", N = "render debug radius" }},
{ 0xDC16404, new C{ T="Comment", N = "elevator" }},
{ 0xDC16405, new C{ T="Comment", N = "elevator surface" }},
{ 0xDC, new EnumGroup { A=1, N="offset axis", STR = new Dictionary<int, string>()
{
{0, "foward" },
{1, "left" },
{2, "up" },
}}},
{ 0xDD, new EnumGroup { A=1, N="pivot axis", STR = new Dictionary<int, string>()
{
{0, "foward" },
{1, "left" },
{2, "up" },
}}},
{ 0xDE, new EnumGroup { A=1, N="rotation axis", STR = new Dictionary<int, string>()
{
{0, "foward" },
{1, "left" },
{2, "up" },
}}},
{ 0xDF, new EnumGroup { A=1, N="normal axis", STR = new Dictionary<int, string>()
{
{0, "foward" },
{1, "left" },
{2, "up" },
}}},
{ 0xE0, new C{ T="Float", N = "offset distance" }},
{ 0xE4, new C{ T="Float", N = "pivot distance" }},
{ 0xE816406, new C{ T="Comment", N = "normal force" }},
{ 0xE8, new C{ T="Float", N = "q" }},
{ 0xEC, new C{ T="Float", N = "k" }},
{ 0xF0, new C{ T="Float", N = "function ceiling" }},
{ 0xF4, new C{ T="Float", N = "maximum angle" }},
{ 0xF8, new C{ T="Float", N = "render debug radius" }},
{ 0xFC16407, new C{ T="Comment", N = "tail" }},
{ 0xFC16408, new C{ T="Comment", N = "tail surface" }},
{ 0xFC, new EnumGroup { A=1, N="offset axis", STR = new Dictionary<int, string>()
{
{0, "foward" },
{1, "left" },
{2, "up" },
}}},
{ 0xFD, new EnumGroup { A=1, N="pivot axis", STR = new Dictionary<int, string>()
{
{0, "foward" },
{1, "left" },
{2, "up" },
}}},
{ 0xFE, new EnumGroup { A=1, N="rotation axis", STR = new Dictionary<int, string>()
{
{0, "foward" },
{1, "left" },
{2, "up" },
}}},
{ 0xFF, new EnumGroup { A=1, N="normal axis", STR = new Dictionary<int, string>()
{
{0, "foward" },
{1, "left" },
{2, "up" },
}}},
{ 0x100, new C{ T="Float", N = "offset distance" }},
{ 0x104, new C{ T="Float", N = "pivot distance" }},
{ 0x10816409, new C{ T="Comment", N = "normal force" }},
{ 0x108, new C{ T="Float", N = "q" }},
{ 0x10C, new C{ T="Float", N = "k" }},
{ 0x110, new C{ T="Float", N = "function ceiling" }},
{ 0x114, new C{ T="Float", N = "maximum angle" }},
{ 0x118, new C{ T="Float", N = "render debug radius" }},
{ 0x11C16410, new C{ T="Comment", N = "rudder" }},
{ 0x11C16411, new C{ T="Comment", N = "rudder surface" }},
{ 0x11C, new EnumGroup { A=1, N="offset axis", STR = new Dictionary<int, string>()
{
{0, "foward" },
{1, "left" },
{2, "up" },
}}},
{ 0x11D, new EnumGroup { A=1, N="pivot axis", STR = new Dictionary<int, string>()
{
{0, "foward" },
{1, "left" },
{2, "up" },
}}},
{ 0x11E, new EnumGroup { A=1, N="rotation axis", STR = new Dictionary<int, string>()
{
{0, "foward" },
{1, "left" },
{2, "up" },
}}},
{ 0x11F, new EnumGroup { A=1, N="normal axis", STR = new Dictionary<int, string>()
{
{0, "foward" },
{1, "left" },
{2, "up" },
}}},
{ 0x120, new C{ T="Float", N = "offset distance" }},
{ 0x124, new C{ T="Float", N = "pivot distance" }},
{ 0x12816412, new C{ T="Comment", N = "normal force" }},
{ 0x128, new C{ T="Float", N = "q" }},
{ 0x12C, new C{ T="Float", N = "k" }},
{ 0x130, new C{ T="Float", N = "function ceiling" }},
{ 0x134, new C{ T="Float", N = "maximum angle" }},
{ 0x138, new C{ T="Float", N = "render debug radius" }},
{ 0x13C16413, new C{ T="Comment", N = "taxi" }},
{ 0x13C16414, new C{ T="Comment", N = "taxi surface" }},
{ 0x13C, new EnumGroup { A=1, N="offset axis", STR = new Dictionary<int, string>()
{
{0, "foward" },
{1, "left" },
{2, "up" },
}}},
{ 0x13D, new EnumGroup { A=1, N="pivot axis", STR = new Dictionary<int, string>()
{
{0, "foward" },
{1, "left" },
{2, "up" },
}}},
{ 0x13E, new EnumGroup { A=1, N="rotation axis", STR = new Dictionary<int, string>()
{
{0, "foward" },
{1, "left" },
{2, "up" },
}}},
{ 0x13F, new EnumGroup { A=1, N="normal axis", STR = new Dictionary<int, string>()
{
{0, "foward" },
{1, "left" },
{2, "up" },
}}},
{ 0x140, new C{ T="Float", N = "offset distance" }},
{ 0x144, new C{ T="Float", N = "pivot distance" }},
{ 0x14816415, new C{ T="Comment", N = "normal force" }},
{ 0x148, new C{ T="Float", N = "q" }},
{ 0x14C, new C{ T="Float", N = "k" }},
{ 0x150, new C{ T="Float", N = "function ceiling" }},
{ 0x154, new C{ T="Float", N = "maximum angle" }},
{ 0x158, new C{ T="Float", N = "render debug radius" }},
{ 0x15C16416, new C{ T="Comment", N = "ground drag" }},
{ 0x15C16417, new C{ T="Comment", N = "ground drag struct" }},
{ 0x15C16418, new C{ T="Comment", N = "drag" }},
{ 0x15C, new C{ T="Float", N = "q" }},
{ 0x160, new C{ T="Float", N = "k" }},
{ 0x164, new C{ T="Float", N = "constant deceleration" }},
{ 0x16816419, new C{ T="Comment", N = "air drag" }},
{ 0x16816420, new C{ T="Comment", N = "air drag struct" }},
{ 0x16816421, new C{ T="Comment", N = "drag" }},
{ 0x168, new C{ T="Float", N = "q" }},
{ 0x16C, new C{ T="Float", N = "k" }},
{ 0x170, new C{ T="Float", N = "constant deceleration" }},
{ 0x17416422, new C{ T="Comment", N = "takeoff drag" }},
{ 0x17416423, new C{ T="Comment", N = "takeoff drag struct" }},
{ 0x17416424, new C{ T="Comment", N = "drag" }},
{ 0x174, new C{ T="Float", N = "q" }},
{ 0x178, new C{ T="Float", N = "k" }},
{ 0x17C, new C{ T="Float", N = "constant deceleration" }},
}, S=384}},
{ 0xE68, new C{ T="Tagblock", N = "type-space-fighter", B = new Dictionary<long, C>
{
{ 0x016425, new C{ T="Comment", N = "steering control" }},
{ 0x016426, new C{ T="Comment", N = "steering overdampening" }},
{ 0x0, new C{ T="Float", N = "overdampen cusp angle" }},
{ 0x4, new C{ T="Float", N = "overdampen exponent" }},
{ 0x8, new C{ T="Float", N = "ebrake overdampen cusp angle" }},
{ 0xC, new C{ T="Float", N = "ebrake overdampen exponent" }},
{ 0x1016427, new C{ T="Comment", N = "Throttle Steering" }},
{ 0x10, new C{ T="Float", N = "throttle steering angle" }},
{ 0x14, new C{ T="Float", N = "throttle steering interpolation rate" }},
{ 0x1816428, new C{ T="Comment", N = "" }},
{ 0x1816429, new C{ T="Comment", N = "turning control" }},
{ 0x1816430, new C{ T="Comment", N = "turning" }},
{ 0x18, new C{ T="Float", N = "maximum left turn" }},
{ 0x1C, new C{ T="Float", N = "maximum right turn (negative)" }},
{ 0x20, new C{ T="Float", N = "turn rate" }},
{ 0x2416431, new C{ T="Comment", N = "velocity control variables" }},
{ 0x24, new C{ T="Float", N = "full throttle speed" }},
{ 0x28, new C{ T="Float", N = "neutral throttle speed" }},
{ 0x2C, new C{ T="Float", N = "reverse throttle speed" }},
{ 0x30, new C{ T="Float", N = "speed acceleration" }},
{ 0x34, new C{ T="Float", N = "speed deceleration" }},
{ 0x38, new C{ T="Float", N = "maximum left slide" }},
{ 0x3C, new C{ T="Float", N = "maximum right slide" }},
{ 0x40, new C{ T="Float", N = "slide acceleration" }},
{ 0x44, new C{ T="Float", N = "slide deceleration" }},
{ 0x48, new C{ T="Float", N = "slide accel against direction" }},
{ 0x4C16432, new C{ T="Comment", N = "torque scale" }},
{ 0x4C, new C{ T="Float", N = "flying torque scale" }},
{ 0x5016433, new C{ T="Comment", N = "fixed gun offset" }},
{ 0x50, new C{ T="Float", N = "fixed gun yaw" }},
{ 0x54, new C{ T="Float", N = "fixed gun pitch" }},
{ 0x5816434, new C{ T="Comment", N = "alien fighter trick variables" }},
{ 0x58, new C{ T="Float", N = "maximum trick frequency" }},
{ 0x5C, new C{ T="Float", N = "loop trick duration" }},
{ 0x60, new C{ T="Float", N = "roll trick duration" }},
{ 0x6416435, new C{ T="Comment", N = "alien fighter fake flight control" }},
{ 0x64, new C{ T="Float", N = "strafe boost scale" }},
{ 0x68, new C{ T="Float", N = "off stick deceleration scale" }},
{ 0x6C, new C{ T="Float", N = "dive speed scale" }},
{ 0x70, new C{ T="Float", N = "roll max velocity" }},
{ 0x74, new C{ T="Float", N = "roll acceleration" }},
{ 0x78, new C{ T="Float", N = "roll deceleration" }},
{ 0x7C, new C{ T="Float", N = "roll smoothing fraction" }},
{ 0x8016436, new C{ T="Comment", N = "autolevel" }},
{ 0x80, new C{ T="Float", N = "autolevel time" }},
{ 0x84, new C{ T="Float", N = "autolevel pitch cutoff" }},
{ 0x88, new C{ T="Float", N = "autolevel max velocity" }},
{ 0x8C, new C{ T="Float", N = "autolevel max acceleration" }},
{ 0x90, new C{ T="Float", N = "autolevel max user ang. vel." }},
{ 0x94, new C{ T="Float", N = "autolevel spring k" }},
{ 0x98, new C{ T="Float", N = "autolevel spring c" }},
{ 0x9C16437, new C{ T="Comment", N = "cosmetic roll" }},
{ 0x9C, new C{ T="Float", N = "cosmetic roll scale" }},
{ 0xA0, new C{ T="Float", N = "cosmetic roll max bank" }},
{ 0xA4, new C{ T="Float", N = "cosmetic roll max velocity" }},
{ 0xA8, new C{ T="Float", N = "cosmetic roll acceleration" }},
{ 0xAC, new C{ T="Float", N = "cosmetic roll spring k" }},
{ 0xB0, new C{ T="Float", N = "cosmetic roll spring c" }},
{ 0xB416438, new C{ T="Comment", N = "new roll" }},
{ 0xB4, new FlagGroup { A=4, N="roll flags", STR = new Dictionary<int, string>()
{
{0, "use new roll" },
}}},
{ 0xB8, new C{ T="Float", N = "maximum left stick roll angle" }},
{ 0xBC, new C{ T="Float", N = "left stick rate smoothing" }},
{ 0xC0, new C{ T="Float", N = "left stick trend smoothing" }},
{ 0xC4, new C{ T="Float", N = "maximum right stick roll angle" }},
{ 0xC8, new C{ T="Float", N = "right stick rate smoothing" }},
{ 0xCC, new C{ T="Float", N = "right stick trend smoothing" }},
{ 0xD016439, new C{ T="Comment", N = "turn deceleration" }},
{ 0xD0, new C{ T="Float", N = "turn deceleration threshold" }},
{ 0xD4, new C{ T="Float", N = "turn deceleration fraction" }},
{ 0xD816440, new C{ T="Comment", N = "soft ceiling turn back" }},
{ 0xD8, new FlagGroup { A=4, N="turn back flags", STR = new Dictionary<int, string>()
{
{0, "turn back to tangent" },
}}},
{ 0xDC, new C{ T="Float", N = "turn back latched period" }},
{ 0xE016441, new C{ T="Comment", N = "turn back distance to turn rate" }},
{ 0xE016442, new C{ T="Comment", N = "function" }},
{ 0xE016443, new C{ T="Comment", N = "function" }},
{ 0xE016444, new C{ T="Comment", N = "" }},
{ 0xE0, new C{ T="Unmapped", N = "data" }},
{ 0xF816445, new C{ T="Comment", N = "" }},
{ 0xF816446, new C{ T="Comment", N = "thrust params" }},
{ 0xF8, new C{ T="Float", N = "ideal thrust decay" }},
{ 0xFC, new C{ T="Float", N = "ideal thrust increase" }},
{ 0x100, new C{ T="Float", N = "minimum thrust decay" }},
{ 0x104, new C{ T="Float", N = "minimum thrust increase" }},
{ 0x108, new C{ T="Float", N = "maximum thrust increase" }},
{ 0x10C16447, new C{ T="Comment", N = "dive params" }},
{ 0x10C, new C{ T="Float", N = "minimum dive angle" }},
{ 0x110, new C{ T="Float", N = "maximum dive angle" }},
{ 0x11416448, new C{ T="Comment", N = "strafe params" }},
{ 0x114, new C{ T="Float", N = "strafe boost power" }},
{ 0x11816449, new C{ T="Comment", N = "wingtip params" }},
{ 0x118, new C{ T="Float", N = "wingtip contrail turn" }},
{ 0x11C, new C{ T="Float", N = "wingtip min turn" }},
{ 0x12016450, new C{ T="Comment", N = "Safety" }},
{ 0x120, new C{ T="Float", N = "dangerous trajectory prediction time" }},
}, S=292}},
{ 0xE7C, new C{ T="Tagblock", N = "type-revenant", B = new Dictionary<long, C>
{
{ 0x016451, new C{ T="Comment", N = "tank block" }},
{ 0x0, new C{ T="Float", N = "forward arc" }},
{ 0x4, new C{ T="Float", N = "perpendicular forward arc" }},
{ 0x8, new C{ T="Float", N = "flip window" }},
{ 0xC, new C{ T="Float", N = "pegged fraction" }},
{ 0x10, new C{ T="Float", N = "forward turn scale" }},
{ 0x14, new C{ T="Float", N = "reverse turn scale" }},
{ 0x1816452, new C{ T="Comment", N = "forward differential" }},
{ 0x18, new C{ T="Float", N = "maximum left differential" }},
{ 0x1C, new C{ T="Float", N = "maximum right differential" }},
{ 0x20, new C{ T="Float", N = "differential acceleration" }},
{ 0x24, new C{ T="Float", N = "differential deceleration" }},
{ 0x2816453, new C{ T="Comment", N = "reverse differential" }},
{ 0x28, new C{ T="Float", N = "maximum left reverse differential" }},
{ 0x2C, new C{ T="Float", N = "maximum right reverse differential" }},
{ 0x30, new C{ T="Float", N = "differential reverse acceleration" }},
{ 0x34, new C{ T="Float", N = "differential reverse deceleration" }},
{ 0x3816454, new C{ T="Comment", N = "engine" }},
{ 0x3816455, new C{ T="Comment", N = "engine" }},
{ 0x38, new C{ T="Float", N = "engine moment" }},
{ 0x3C, new C{ T="Float", N = "engine min angular velocity" }},
{ 0x40, new C{ T="Float", N = "engine max angular velocity" }},
{ 0x44, new C{ T="Tagblock", N = "gears", B = new Dictionary<long, C>
{
{ 0x016456, new C{ T="Comment", N = "loaded torque" }},
{ 0x016457, new C{ T="Comment", N = "loaded torque curve" }},
{ 0x016458, new C{ T="Comment", N = "function" }},
{ 0x016459, new C{ T="Comment", N = "function" }},
{ 0x016460, new C{ T="Comment", N = "function" }},
{ 0x016461, new C{ T="Comment", N = "" }},
{ 0x0, new C{ T="Unmapped", N = "data" }},
{ 0x1816462, new C{ T="Comment", N = "" }},
{ 0x1816463, new C{ T="Comment", N = "cruising torque" }},
{ 0x1816464, new C{ T="Comment", N = "cruising torque curve" }},
{ 0x1816465, new C{ T="Comment", N = "function" }},
{ 0x1816466, new C{ T="Comment", N = "function" }},
{ 0x1816467, new C{ T="Comment", N = "function" }},
{ 0x1816468, new C{ T="Comment", N = "" }},
{ 0x18, new C{ T="Unmapped", N = "data" }},
{ 0x3016469, new C{ T="Comment", N = "" }},
{ 0x3016470, new C{ T="Comment", N = "gearing" }},
{ 0x30, new C{ T="Float", N = "min time to upshift" }},
{ 0x34, new C{ T="Float", N = "engine up-shift scale" }},
{ 0x38, new C{ T="Float", N = "gear ratio" }},
{ 0x3C, new C{ T="Float", N = "min time to downshift" }},
{ 0x40, new C{ T="Float", N = "engine down-shift scale" }},
{ 0x44, new C{ T="Float", N = "audio engine uprev rate" }},
{ 0x48, new C{ T="Float", N = "audio engine shift up RPM value" }},
{ 0x4C, new C{ T="Float", N = "audio engine downrev rate" }},
{ 0x50, new C{ T="Float", N = "audio engine shift down RPM value" }},
{ 0x54, new C{ T="TagRef", N = "gear shift sound - shifting up" }},
{ 0x70, new C{ T="TagRef", N = "gear shift sound - shifting down" }},
}, S=140}},
{ 0x58, new C{ T="TagRef", N = "gear shift sound" }},
{ 0x74, new C{ T="Tagblock", N = "load and cruise sound", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "load cruise function" }},
{ 0x4, new C{ T="4Byte", N = "attachment index" }},
}, S=8}},
{ 0x8816471, new C{ T="Comment", N = "wheel circumferance" }},
{ 0x88, new C{ T="Float", N = "wheel circumferance" }},
{ 0x8C, new C{ T="Float", N = "gravity adjust" }},
{ 0x9016472, new C{ T="Comment", N = "New Tank Controls" }},
{ 0x90, new FlagGroup { A=1, N="control flags", STR = new Dictionary<int, string>()
{
{0, "Enable New Control" },
{1, "Use Linear Velocity" },
{2, "Use Angular Velocity" },
}}},
{ 0x91, new C{ T="Comment", N = "generated_pad4b05" }},
{ 0x94, new C{ T="Float", N = "at rest forward angle(purple)" }},
{ 0x98, new C{ T="Float", N = "at rest reverse angle(violet)" }},
{ 0x9C, new C{ T="Float", N = "at rest side on reverse angle closest to front(green)" }},
{ 0xA0, new C{ T="Float", N = "at rest side on reverse angle furthest from front(blue)" }},
{ 0xA4, new C{ T="Float", N = "at rest facing forward reverse angle(yellow)" }},
{ 0xA8, new C{ T="Float", N = "at rest facing backward reverse angle(pink)" }},
{ 0xAC, new C{ T="Float", N = "in motion opposing direction angle" }},
{ 0xB0, new C{ T="Float", N = "in motion speed" }},
{ 0xB416473, new C{ T="Comment", N = "velocity control variables" }},
{ 0xB4, new C{ T="Float", N = "maximum forward speed" }},
{ 0xB8, new C{ T="Float", N = "maximum reverse speed" }},
{ 0xBC, new C{ T="Float", N = "speed acceleration" }},
{ 0xC0, new C{ T="Float", N = "speed deceleration" }},
{ 0xC4, new C{ T="Float", N = "maximum left slide" }},
{ 0xC8, new C{ T="Float", N = "maximum right slide" }},
{ 0xCC, new C{ T="Float", N = "slide acceleration" }},
{ 0xD0, new C{ T="Float", N = "slide deceleration" }},
{ 0xD416474, new C{ T="Comment", N = "scout physics" }},
{ 0xD4, new FlagGroup { A=1, N="flags", STR = new Dictionary<int, string>()
{
{0, "hovercraft" },
{1, "slope scales speed" },
}}},
{ 0xD5, new C{ T="Comment", N = "generated_padddec" }},
{ 0xD816475, new C{ T="Comment", N = "Air control" }},
{ 0xD8, new C{ T="Float", N = "air control angular velocity factor" }},
{ 0xDC, new C{ T="Float", N = "air control throttle acceleration" }},
{ 0xE0, new C{ T="Float", N = "air control throttle bonus clamp min" }},
{ 0xE4, new C{ T="Float", N = "air control throttle bonus clamp max" }},
{ 0xE8, new C{ T="Float", N = "air control angular acceleration" }},
{ 0xEC, new C{ T="Float", N = "air control auto level strength" }},
{ 0xF016476, new C{ T="Comment", N = "Brake control" }},
{ 0xF0, new C{ T="Float", N = "brake lift angular acceleration" }},
{ 0xF4, new C{ T="Float", N = "brake lift acceleration up" }},
{ 0xF8, new C{ T="Float", N = "brake airborne lift acceleration forward" }},
{ 0xFC, new C{ T="Float", N = "brake airborne lift acceleration up" }},
{ 0x100, new C{ T="Float", N = "drag coeficient" }},
{ 0x104, new C{ T="Float", N = "constant deceleration" }},
{ 0x108, new C{ T="Float", N = "torque scale" }},
}, S=268}},
{ 0xE9016477, new C{ T="Comment", N = "" }},
{ 0xE9016478, new C{ T="Comment", N = "General Vehicle Physics" }},
{ 0xE9016479, new C{ T="Comment", N = "havok vehicle physics" }},
{ 0xE90, new C{ T="Float", N = "gravity scale" }},
{ 0xE94, new C{ T="4Byte", N = "iteration count" }},
{ 0xE98, new C{ T="Tagblock", N = "anti gravity point configurations", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "name" }},
{ 0x416480, new C{ T="Comment", N = "Operational Range- Height" }},
{ 0x4, new C{ T="Float", N = "inner distance" }},
{ 0x8, new C{ T="Float", N = "outer distance" }},
{ 0xC16481, new C{ T="Comment", N = "Banking" }},
{ 0xC, new C{ T="Float", N = "banking lift" }},
{ 0x10, new C{ T="Float", N = "steering banking factor" }},
{ 0x1416482, new C{ T="Comment", N = "Maximum Lifting Force" }},
{ 0x14, new C{ T="Float", N = "strength" }},
{ 0x1816483, new C{ T="Comment", N = "Error" }},
{ 0x18, new C{ T="Float", N = "error" }},
{ 0x1C16484, new C{ T="Comment", N = "Operational Range- Orientation" }},
{ 0x1C, new C{ T="Float", N = "inner rotational limit" }},
{ 0x20, new C{ T="Float", N = "outer rotational limit" }},
{ 0x2416485, new C{ T="Comment", N = "Damping" }},
{ 0x24, new C{ T="Float", N = "compression damping" }},
{ 0x28, new C{ T="Float", N = "extension damping" }},
{ 0x2C16486, new C{ T="Comment", N = "Ground Impact Effects" }},
{ 0x2C, new C{ T="TagRef", N = "combined material effects" }},
{ 0x48, new C{ T="TagRef", N = "visual material effects" }},
{ 0x64, new C{ T="TagRef", N = "sound material effects" }},
{ 0x8016487, new C{ T="Comment", N = "" }},
}, S=128}},
{ 0xEAC, new C{ T="Tagblock", N = "anti gravity points", B = new Dictionary<long, C>
{
{ 0x016488, new C{ T="Comment", N = "" }},
{ 0x0, new C{ T="mmr3Hash", N = "marker name" }},
{ 0x4, new C{ T="mmr3Hash", N = "region name" }},
{ 0x8, new C{ T="4Byte", N = "runtime region index" }},
{ 0xC16489, new C{ T="Comment", N = "" }},
{ 0xC, new C{ T="mmr3Hash", N = "looping sound marker" }},
{ 0x10, new C{ T="Tagblock", N = "state configurations", B = new Dictionary<long, C>
{
{ 0x0, new EnumGroup { A=2, N="region state", STR = new Dictionary<int, string>()
{
{0, "default" },
{1, "minor damage" },
{2, "medium damage" },
{3, "major damage" },
{4, "destroyed" },
}}},
{ 0x2, new C{ T="2Byte", N = "configuration" }},
}, S=4}},
}, S=36}},
{ 0xEC0, new C{ T="Tagblock", N = "friction point configurations", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "name" }},
{ 0x4, new C{ T="Float", N = "radius" }},
{ 0x816490, new C{ T="Comment", N = "Normal Force Simulation" }},
{ 0x8, new C{ T="Float", N = "ground depth" }},
{ 0xC, new C{ T="Float", N = "ground damp factor" }},
{ 0x1016491, new C{ T="Comment", N = "Physics Simulation Noise Reduction" }},
{ 0x10, new C{ T="Float", N = "ground normal blend rate" }},
{ 0x14, new C{ T="Float", N = "max normal force contribution to friction" }},
{ 0x1816492, new C{ T="Comment", N = "Traction" }},
{ 0x18, new C{ T="Float", N = "static friction" }},
{ 0x1C, new C{ T="Float", N = "kinetic friction" }},
{ 0x20, new C{ T="Float", N = "slide speed difference" }},
{ 0x24, new C{ T="Float", N = "e-brake static friction" }},
{ 0x28, new C{ T="Float", N = "e-brake kinetic friction" }},
{ 0x2C, new C{ T="Float", N = "e-brake slide speed difference" }},
{ 0x30, new C{ T="Float", N = "AI static friction override" }},
{ 0x34, new C{ T="Float", N = "AI kinetic friction override" }},
{ 0x38, new C{ T="Float", N = "world space slope to stop all traction" }},
{ 0x3C, new C{ T="Float", N = "local space slope to start traction loss" }},
{ 0x40, new C{ T="Float", N = "local space slope to stop all traction" }},
{ 0x44, new C{ T="Float", N = "local space slope to stop hit checks" }},
{ 0x4816493, new C{ T="Comment", N = "Grounded Vehicle Stabilizing Torque" }},
{ 0x4816494, new C{ T="Comment", N = "grounded speed to down torque function" }},
{ 0x4816495, new C{ T="Comment", N = "function" }},
{ 0x4816496, new C{ T="Comment", N = "function" }},
{ 0x4816497, new C{ T="Comment", N = "" }},
{ 0x48, new C{ T="Unmapped", N = "data" }},
{ 0x6016498, new C{ T="Comment", N = "" }},
{ 0x6016499, new C{ T="Comment", N = "nearly grounded speed to down torque function" }},
{ 0x6016500, new C{ T="Comment", N = "function" }},
{ 0x6016501, new C{ T="Comment", N = "function" }},
{ 0x6016502, new C{ T="Comment", N = "" }},
{ 0x60, new C{ T="Unmapped", N = "data" }},
{ 0x7816503, new C{ T="Comment", N = "" }},
{ 0x7816504, new C{ T="Comment", N = "Ground Impact Effects" }},
{ 0x78, new C{ T="TagRef", N = "combined material effects" }},
{ 0x94, new C{ T="TagRef", N = "visual material effects" }},
{ 0xB0, new C{ T="TagRef", N = "sound material effects" }},
{ 0xCC16505, new C{ T="Comment", N = "" }},
{ 0xCC, new FlagGroup { A=4, N="flags", STR = new Dictionary<int, string>()
{
{0, "suspension is destroyed" },
}}},
}, S=208}},
{ 0xED4, new C{ T="Tagblock", N = "friction points", B = new Dictionary<long, C>
{
{ 0x016506, new C{ T="Comment", N = "" }},
{ 0x0, new C{ T="mmr3Hash", N = "marker name" }},
{ 0x4, new C{ T="mmr3Hash", N = "region name" }},
{ 0x8, new C{ T="4Byte", N = "runtime region index" }},
{ 0xC, new C{ T="Float", N = "load fraction" }},
{ 0x10, new C{ T="Float", N = "turn ratio" }},
{ 0x14, new FlagGroup { A=4, N="flags", STR = new Dictionary<int, string>()
{
{0, "powered" },
{1, "attached to e-brake" },
}}},
{ 0x1816507, new C{ T="Comment", N = "" }},
{ 0x18, new C{ T="mmr3Hash", N = "looping sound marker" }},
{ 0x1C, new C{ T="mmr3Hash", N = "grinding object function" }},
{ 0x20, new C{ T="mmr3Hash", N = "rolling object function" }},
{ 0x24, new C{ T="Tagblock", N = "state configurations", B = new Dictionary<long, C>
{
{ 0x0, new EnumGroup { A=2, N="region state", STR = new Dictionary<int, string>()
{
{0, "default" },
{1, "minor damage" },
{2, "medium damage" },
{3, "major damage" },
{4, "destroyed" },
}}},
{ 0x2, new C{ T="2Byte", N = "configuration" }},
}, S=4}},
}, S=56}},
{ 0xEE816508, new C{ T="Comment", N = "Grounded Vehicle Stabilizing Downforce" }},
{ 0xEE8, new C{ T="Float", N = "maximum speed for downForce" }},
{ 0xEEC, new C{ T="Float", N = "angle to exclude downforce" }},
{ 0xEF016509, new C{ T="Comment", N = "grounded speed to COM downforce function" }},
{ 0xEF016510, new C{ T="Comment", N = "function" }},
{ 0xEF016511, new C{ T="Comment", N = "function" }},
{ 0xEF016512, new C{ T="Comment", N = "" }},
{ 0xEF0, new C{ T="Unmapped", N = "data" }},
{ 0xF0816513, new C{ T="Comment", N = "" }},
{ 0xF0816514, new C{ T="Comment", N = "nearly grounded speed to COM downforce function" }},
{ 0xF0816515, new C{ T="Comment", N = "function" }},
{ 0xF0816516, new C{ T="Comment", N = "function" }},
{ 0xF0816517, new C{ T="Comment", N = "" }},
{ 0xF08, new C{ T="Unmapped", N = "data" }},
{ 0xF2016518, new C{ T="Comment", N = "" }},
{ 0xF2016519, new C{ T="Comment", N = "Airborne Vehicle Rotational Stabilization" }},
{ 0xF20, new C{ T="Float", N = "airborne angular stabilization coefficients.X" }},
{ 0xF24, new C{ T="Float", N = "airborne angular stabilization coefficients.Y" }},
{ 0xF28, new C{ T="Float", N = "airborne angular stabilization coefficients.Z" }},
{ 0xF2C, new C{ T="Tagblock", N = "tricks", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "animation name" }},
{ 0x4, new EnumGroup { A=1, N="activation type", STR = new Dictionary<int, string>()
{
{0, "trick button + left" },
{1, "trick button + right" },
{2, "trick button + up" },
{3, "trick button + down" },
{4, "peg-flick-jump left" },
{5, "peg-flick-jump right" },
{6, "peg-flick-jump up" },
{7, "peg-flick-jump down" },
{8, "double-jump left" },
{9, "double-jump right" },
{10, "double-jump up" },
{11, "double-jump down" },
}}},
{ 0x5, new EnumGroup { A=1, N="velocity preservation", STR = new Dictionary<int, string>()
{
{0, "none" },
{1, "trick relative" },
{2, "world relative" },
}}},
{ 0x6, new FlagGroup { A=1, N="flags", STR = new Dictionary<int, string>()
{
{0, "use following camera" },
{1, "do not slam player control" },
}}},
{ 0x7, new C{ T="Byte", N = "generated_pad983c" }},
{ 0x8, new C{ T="Float", N = "camera interpolation time" }},
{ 0xC, new C{ T="Float", N = "trick exit time" }},
{ 0x10, new C{ T="Float", N = "trick exit camera interpolation time.min" }},
{ 0x14, new C{ T="Float", N = "trick exit camera interpolation time.max" }},
{ 0x18, new C{ T="Float", N = "trick exit displacement reference" }},
{ 0x1C, new C{ T="Float", N = "cooldown time" }},
{ 0x20, new EnumGroup { A=4, N="tutorial id", STR = new Dictionary<int, string>()
{
{0, "None" },
{1, "Assassination" },
{2, "Camera" },
{3, "Crouch" },
{4, "Grenade" },
{5, "Jump" },
{6, "Melee" },
{7, "Movement" },
{8, "Shoot" },
{9, "Tracking" },
{10, "Clamber" },
{11, "Slide" },
{12, "Sprint" },
{13, "Thruster" },
{14, "Zoom" },
{15, "BansheeBoost" },
{16, "BansheeTrick" },
{17, "BansheeSwitchWeapons" },
{18, "GhostBoost" },
{19, "MantisRockets" },
{20, "MantisStomp" },
{21, "VTOLAscend" },
{22, "VTOLDescend" },
{23, "VTOLEvade" },
{24, "VTOLSwitchWeapons" },
{25, "VTOLShoot" },
{26, "JeepDrive" },
{27, "JeepHandbrake" },
{28, "JeepShoot" },
{29, "WraithBoost" },
{30, "SeatSwitch" },
{31, "OrdersGeneral" },
{32, "OrdersClear" },
{33, "OrdersEnemy" },
{34, "OrdersMove" },
{35, "OrdersVehicle" },
{36, "OrdersWeapon" },
}}},
}, S=36}},
{ 0xF40, new EnumGroup { A=1, N="player training vehicle type", STR = new Dictionary<int, string>()
{
{0, "none" },
{1, "warthog" },
{2, "warthog turret" },
{3, "ghost" },
{4, "banshee" },
{5, "tank" },
{6, "wraith" },
}}},
{ 0xF41, new EnumGroup { A=1, N="vehicle size", STR = new Dictionary<int, string>()
{
{0, "small" },
{1, "large" },
}}},
{ 0xF42, new C{ T="Unmapped", N = "complex suspension sample count" }},
{ 0xF43, new C{ T="Byte", N = "generated_pad9b33" }},
{ 0xF44, new C{ T="Float", N = "complex suspension distribution angle" }},
{ 0xF48, new C{ T="Float", N = "complex suspension wheel diameter" }},
{ 0xF4C, new C{ T="Float", N = "complex suspension wheel width" }},
{ 0xF50, new C{ T="Float", N = "minimum flipping angular velocity" }},
{ 0xF54, new C{ T="Float", N = "maximum flipping angular velocity" }},
{ 0xF58, new C{ T="Float", N = "upside down angle" }},
{ 0xF5C, new C{ T="Float", N = "crouch transition time" }},
{ 0xF60, new C{ T="Float", N = "HOOJYTSU" }},
{ 0xF64, new C{ T="Float", N = "seat enterance acceleration scale" }},
{ 0xF68, new C{ T="Float", N = "seat exit accelersation scale" }},
{ 0xF6C, new C{ T="mmr3Hash", N = "blur function name" }},
{ 0xF70, new C{ T="Float", N = "blur speed" }},
{ 0xF74, new C{ T="mmr3Hash", N = "flip message" }},
{ 0xF7816520, new C{ T="Comment", N = "sounds and effects" }},
{ 0xF78, new C{ T="TagRef", N = "Player vehicle sound bank" }},
{ 0xF94, new C{ T="TagRef", N = "Surface sound material effects" }},
{ 0xFB0, new C{ T="TagRef", N = "light suspension sound" }},
{ 0xFCC, new C{ T="Float", N = "Light suspension sound displacement threshold" }},
{ 0xFD0, new C{ T="TagRef", N = "medium suspension sound" }},
{ 0xFEC, new C{ T="Float", N = "Medium suspension sound displacement threshold" }},
{ 0xFF0, new C{ T="TagRef", N = "hard suspension sound" }},
{ 0x100C, new C{ T="Float", N = "Hard suspension sound displacement threshold" }},
{ 0x1010, new C{ T="Float", N = "fake audio speed - speed increase amount" }},
{ 0x1014, new C{ T="Float", N = "fake audio speed - boost speed increase amount" }},
{ 0x1018, new C{ T="Float", N = "fake audio speed - speed decrease amount" }},
{ 0x101C, new C{ T="Float", N = "fake audio speed - non-boost limit" }},
{ 0x1020, new C{ T="Float", N = "fake audio speed - max speed scale" }},
{ 0x1024, new C{ T="Tagblock", N = "Sound RTPCs", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="4Byte", N = "Attachment Index" }},
{ 0x4, new C{ T="mmr3Hash", N = "Function" }},
{ 0x8, new C{ T="mmr3Hash", N = "RTPC Name" }},
{ 0xC, new C{ T="4Byte", N = "RTPC name hash value" }},
}, S=16}},
{ 0x1038, new C{ T="Tagblock", N = "Sound Sweeteners", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "Function" }},
{ 0x4, new C{ T="TagRef", N = "sound" }},
{ 0x20, new C{ T="Float", N = "Switch point" }},
{ 0x24, new C{ T="4Byte", N = "Mode" }},
}, S=40}},
{ 0x104C, new C{ T="TagRef", N = "special effect" }},
{ 0x1068, new C{ T="TagRef", N = "driver boost damage effect or response" }},
{ 0x1084, new C{ T="TagRef", N = "rider boost damage effect or response" }},
{ 0x10A0, new C{ T="mmr3Hash", N = "vehicle name" }},
{ 0x10A4, new C{ T="Tagblock", N = "AI cruise control", B = new Dictionary<long, C>
{
{ 0x016521, new C{ T="Comment", N = "ai speed control" }},
{ 0x0, new C{ T="Float", N = "Proportional" }},
{ 0x4, new C{ T="Float", N = "Integral" }},
{ 0x8, new C{ T="Float", N = "Derivative" }},
{ 0xC, new C{ T="Float", N = "Slow down rate" }},
}, S=16}},
{ 0x10B8, new C{ T="Tagblock", N = "UI display info", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "name" }},
{ 0x4, new C{ T="mmr3Hash", N = "alt name " }},
{ 0x8, new C{ T="mmr3Hash", N = "description" }},
{ 0xC, new C{ T="mmr3Hash", N = "help text" }},
{ 0x10, new C{ T="mmr3Hash", N = "icon string id" }},
{ 0x14, new C{ T="TagRef", N = "sprite" }},
{ 0x30, new C{ T="4Byte", N = "sprite index" }},
{ 0x34, new C{ T="TagRef", N = "alt sprite" }},
{ 0x50, new C{ T="4Byte", N = "alt sprite index" }},
{ 0x54, new C{ T="4Byte", N = "damage sprite index" }},
{ 0x58, new C{ T="TagRef", N = "ui vehicle screen reference" }},
}, S=116}},
{ 0x10CC, new C{ T="TagRef", N = "UI Vehicle Display info" }},
{ 0x10E8, new EnumGroup { A=4, N="Vehicle Nav Point Sequence Index", STR = new Dictionary<int, string>()
{
{0, "TacticalObjective" },
{1, "SubObjective" },
{2, "MainObjective" },
{3, "SupplyCache" },
{4, "MoveToIndicator" },
{5, "ChatterIndicator" },
{6, "AttackCommandFg" },
{7, "ReviveFg" },
{8, "ReviveBg" },
{9, "BleedoutTimerStroke" },
{10, "ReviveCommand" },
{11, "ReviveHelpPulse" },
{12, "WzBossFg" },
{13, "WzBossBg" },
{14, "WzReqFg" },
{15, "WzHomeBaseFg" },
{16, "AttackFg" },
{17, "DefendFg" },
{18, "CircleBg" },
{19, "DiamondBg" },
{20, "SquareBg" },
{21, "HexBg" },
{22, "CircleStroke" },
{23, "DiamondStroke" },
{24, "SquareStroke" },
{25, "HexStroke" },
{26, "ExclamationFg" },
{27, "DeadIndicator" },
{28, "SpeakingIndicator" },
{29, "WeaponPadFg" },
{30, "CubeFg" },
{31, "FlagFg" },
{32, "LetterAFg" },
{33, "LetterBFg" },
{34, "LetterCFg" },
{35, "BombFg" },
{36, "CrownFg" },
{37, "SmallOffscreenArrow" },
{38, "FriendlyArrow" },
{39, "EnemyArrow" },
{40, "SeekIndicator" },
{41, "LockOnIndicator" },
{42, "ReqBg" },
{43, "Num0Fg" },
{44, "Num1Fg" },
{45, "Num2Fg" },
{46, "Num3Fg" },
{47, "Num4Fg" },
{48, "Num5Fg" },
{49, "Num6Fg" },
{50, "Num7Fg" },
{51, "Num8Fg" },
{52, "Num9Fg" },
{53, "FrameIdentifier1" },
{54, "FrameIdentifier2" },
{55, "FrameIdentifier3" },
{56, "FrameIdentifier4" },
{57, "AbilityAutoTurret" },
{58, "AbilityCloak" },
{59, "AbilityGravSphere" },
{60, "AbilityHealthBlast" },
{61, "AbilityHex" },
{62, "AbilityHologram" },
{63, "AbilityLocationDart" },
{64, "AbilityMedicDrone" },
{65, "AbilityTrap" },
{66, "Flipbook1" },
{67, "Flipbook2" },
{68, "Flipbook3" },
{69, "Flipbook4" },
{70, "Flipbook5" },
{71, "Flipbook6" },
{72, "Flipbook7" },
{73, "Flipbook8" },
{74, "Flipbook9" },
{75, "Flipbook10" },
{76, "Flipbook11" },
{77, "Flipbook12" },
{78, "Flipbook13" },
{79, "Flipbook14" },
{80, "Flipbook15" },
{81, "Flipbook16" },
{82, "Flipbook17" },
{83, "Flipbook18" },
{84, "Flipbook19" },
{85, "Flipbook20" },
{86, "Flipbook21" },
{87, "Flipbook22" },
{88, "Flipbook23" },
{89, "Flipbook24" },
}}},
{ 0x10EC16522, new C{ T="Comment", N = "" }},
{ 0x10EC, new C{ T="4Byte", N = "generated_pade54b" }},
}},
{ "char", new()
{
{ 0x01128, new C{ T="Comment", N = "AnyTag" }},
{ 0x0, new C{ T="Pointer", N = "vtable space" }},
{ 0x81129, new C{ T="Comment", N = "internal struct" }},
{ 0x8, new C{ T="4Byte", N = "global tag ID" }},
{ 0xC, new C{ T="4Byte", N = "local tag handle" }},
{ 0x10, new FlagGroup { A=4, N="Character flags", STR = new Dictionary<int, string>()
{
{0, "Flag1" },
{1, "Disable Velocity/Throttle Alignment" },
{2, "Use Boss Damage Audio" },
}}},
{ 0x14, new C{ T="TagRef", N = "parent character" }},
{ 0x30, new C{ T="TagRef", N = "unit" }},
{ 0x4C, new C{ T="TagRef", N = "creature" }},
{ 0x68, new C{ T="TagRef", N = "style" }},
{ 0x84, new C{ T="TagRef", N = "major character" }},
{ 0xA0, new C{ T="TagRef", N = "mythic skull character" }},
{ 0xBC, new C{ T="Tagblock", N = "variants", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "variant name" }},
{ 0x4, new C{ T="2Byte", N = "variant index" }},
{ 0x6, new C{ T="2Byte", N = "generated_padedbf" }},
{ 0x8, new C{ T="mmr3Hash", N = "Style Id" }},
{ 0xC, new C{ T="Tagblock", N = "voices", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "dialogue" }},
{ 0x1C, new C{ T="mmr3Hash", N = "designator" }},
{ 0x20, new C{ T="Float", N = "weight" }},
{ 0x24, new C{ T="Tagblock", N = "region filters", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "region name" }},
{ 0x4, new C{ T="Tagblock", N = "permutation filters", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "permutation name" }},
}, S=4}},
}, S=24}},
}, S=56}},
}, S=32}},
{ 0xD0, new C{ T="Tagblock", N = "voice", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Tagblock", N = "voices", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "dialogue" }},
{ 0x1C, new C{ T="mmr3Hash", N = "designator" }},
{ 0x20, new C{ T="Float", N = "weight" }},
{ 0x24, new C{ T="Tagblock", N = "region filters", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "region name" }},
{ 0x4, new C{ T="Tagblock", N = "permutation filters", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "permutation name" }},
}, S=4}},
}, S=24}},
}, S=56}},
}, S=20}},
{ 0xE4, new C{ T="Tagblock", N = "Development Status", B = new Dictionary<long, C>
{
{ 0x0, new EnumGroup { A=2, N="Stage", STR = new Dictionary<int, string>()
{
{0, "Unknown" },
{1, "Prototype" },
{2, "Final" },
{3, "Deprecated" },
}}},
{ 0x2, new C{ T="2Byte", N = "padding1" }},
}, S=4}},
{ 0xF8, new C{ T="Tagblock", N = "general properties", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="general flags", STR = new Dictionary<int, string>()
{
{0, "swarm" },
{1, "flying" },
{2, "dual wields" },
{3, "uses gravemind" },
{4, "gravemind chorus" },
{5, "don't trade weapon" },
{6, "don't stow weapon" },
{7, "hero character" },
{8, "leader independent positioning" },
{9, "has active camo" },
{10, "use head marker for looking" },
{11, "space character" },
{12, "do not drop equipment" },
{13, "do not allow crouch" },
{14, "do not allow moving crouch" },
{15, "critical betrayal" },
{16, "deathless critical betrayal" },
{17, "armor prevents assassination" },
{18, "drop all weapons on death" },
{19, "drop no weapons on death" },
{20, "shield prevents assassination" },
{21, "cannot be assassinated" },
{22, "infinite ammo" },
{23, "Use Aim At Feet Fallback" },
{24, "Effectiveness Token Override" },
}}},
{ 0x4, new EnumGroup { A=2, N="type", STR = new Dictionary<int, string>()
{
{0, "none" },
{1, "player" },
{2, "marine" },
{3, "crew" },
{4, "spartan" },
{5, "elite" },
{6, "jackal" },
{7, "jackal sniper" },
{8, "grunt" },
{9, "hunter" },
{10, "prophet" },
{11, "bugger" },
{12, "scarab" },
{13, "engineer" },
{14, "skirmisher" },
{15, "bishop" },
{16, "knight" },
{17, "pawn" },
{18, "cavalier" },
{19, "packmaster" },
{20, "soldier" },
{21, "soldier sniper" },
{22, "soldier officer" },
{23, "rook" },
{24, "sentinel" },
{25, "brute" },
{26, "hoverer" },
{27, "crusher" },
{28, "mule" },
{29, "mounted_weapon" },
{30, "octopus" },
{31, "wildlife" },
}}},
{ 0x6, new C{ T="2Byte", N = "rank" }},
{ 0x8, new C{ T="TagRef", N = "prototype script" }},
{ 0x24, new C{ T="Float", N = "max leader dist" }},
{ 0x28, new C{ T="Float", N = "absolute max leader dist" }},
{ 0x2C, new C{ T="Float", N = "max player dialogue dist" }},
{ 0x30, new C{ T="Float", N = "scariness" }},
{ 0x34, new EnumGroup { A=1, N="default grenade type", STR = new Dictionary<int, string>()
{
{0, "none" },
{1, "fragmentation grenade" },
{2, "plasma grenade" },
{3, "lightning grenade" },
{4, "spike grenade" },
{5, "sapper grenade" },
{6, "stasis grenade" },
}}},
{ 0x35, new C{ T="Byte", N = "generated_pad6d7e" }},
{ 0x36, new EnumGroup { A=2, N="behavior tree root", STR = new Dictionary<int, string>()
{
{0, "Default" },
{1, "Flying" },
{2, "Bot" },
{3, "Test" },
}}},
{ 0x38, new C{ T="TagRef", N = "Data Behavior Tree" }},
{ 0x54, new C{ T="Tagblock", N = "disallowed weapons from trading", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "weapon" }},
}, S=28}},
{ 0x68, new C{ T="TagRef", N = "Initial Primary Weapon " }},
{ 0x84, new C{ T="TagRef", N = "Primary Weapon Configuration" }},
{ 0xA0, new C{ T="TagRef", N = "Initial Secondary Weapon " }},
{ 0xBC, new C{ T="TagRef", N = "Secondary Weapon Configuration" }},
{ 0xD8, new C{ T="TagRef", N = "Initial Equipment " }},
{ 0xF4, new C{ T="mmr3Hash", N = "Shield Frame Attachment" }},
{ 0xF8, new C{ T="2Byte", N = "Token Priority" }},
{ 0xFA, new C{ T="2Byte", N = "generated_padba33" }},
{ 0xFC, new C{ T="Tagblock", N = "Designer Metadata", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "meta label" }},
}, S=4}},
{ 0x110, new C{ T="Tagblock", N = "Dialogue System Metadata", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "meta label" }},
}, S=4}},
}, S=292}},
{ 0x10C, new C{ T="Tagblock", N = "proto spawn properties", B = new Dictionary<long, C>
{
{ 0x0, new EnumGroup { A=2, N="Proto Spawn Type ", STR = new Dictionary<int, string>()
{
{0, "None" },
{1, "Limbo" },
{2, "Spawner" },
{3, "Birther" },
}}},
}, S=2}},
{ 0x120, new C{ T="Tagblock", N = "interact properties", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=1, N="Interact Flags", STR = new Dictionary<int, string>()
{
{0, "Do not shoot while moving" },
}}},
{ 0x1, new C{ T="Comment", N = "generated_padb4d2" }},
{ 0x4, new C{ T="Float", N = "default maximum object interact range" }},
}, S=8}},
{ 0x134, new C{ T="Tagblock", N = "emotion properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Tagblock", N = "situational danger", B = new Dictionary<long, C>
{
{ 0x0, new EnumGroup { A=2, N="highest prop class", STR = new Dictionary<int, string>()
{
{0, "none - actor has no targets whatsoever" },
{1, "dead enemy- my only target is a dead enemy" },
{2, "non-attacking enemy- I am debilitated and the enemy is not attacking me" },
{3, "disregarded orphan- did not find my target and gave up searching" },
{4, "inspected orphan- checked last know position and didn't find target; still searching" },
{5, "uninspected orphan- can't see target, but have a good idea where they may be" },
{6, "certain orphan- can't see target, but know exactly where they are" },
{7, "visible enemy- I can see the target" },
{8, "nearby enemy- I can see the target, and it's close" },
{9, "potentially dangerous enemy- target is near and is facing me" },
{10, "dangerous enemy- target is facing my way and fighting" },
{11, "attacking enemy- target is aiming at me and shooting me" },
{12, "very close enemy- enemy is really close" },
{13, "damaging_enemy- enemy is damaging me" },
}}},
{ 0x2, new C{ T="2Byte", N = "generated_pad78a8" }},
{ 0x4, new C{ T="Float", N = "situational danger" }},
}, S=8}},
{ 0x14, new C{ T="Float", N = "perceived danger increase half-life" }},
{ 0x18, new C{ T="Float", N = "perceived danger decay half-life" }},
{ 0x1C, new C{ T="Float", N = "Perceived Danger Alert Threshold" }},
{ 0x20, new C{ T="Float", N = "Perceived Danger Combat Threshold" }},
}, S=36}},
{ 0x148, new C{ T="Tagblock", N = "vitality properties", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="vitality flags", STR = new Dictionary<int, string>()
{
{0, "auto resurrect" },
{1, "disable vitality override" },
{2, "no friendly damage" },
}}},
{ 0x4, new C{ T="Float", N = "normal body vitality" }},
{ 0x8, new C{ T="Float", N = "normal shield vitality" }},
{ 0xC, new C{ T="Float", N = "legendary body vitality" }},
{ 0x10, new C{ T="Float", N = "legendary shield vitality" }},
{ 0x14, new C{ T="Float", N = "body recharge fraction" }},
{ 0x18, new C{ T="Float", N = "soft ping threshold (with shields)" }},
{ 0x1C, new C{ T="Float", N = "soft ping threshold (no shields)" }},
{ 0x20, new C{ T="Float", N = "medium ping threshold (with shields)" }},
{ 0x24, new C{ T="Float", N = "medium ping threshold (no shields)" }},
{ 0x28, new C{ T="Float", N = "medium ping cooldown time" }},
{ 0x2C, new C{ T="Float", N = "hard ping threshold (with shields)" }},
{ 0x30, new C{ T="Float", N = "hard ping threshold (no shields)" }},
{ 0x34, new C{ T="Float", N = "hard ping cooldown time" }},
{ 0x38, new C{ T="Float", N = "body recharge delay time" }},
{ 0x3C, new C{ T="Float", N = "body recharge time" }},
{ 0x40, new C{ T="Float", N = "shield recharge delay time" }},
{ 0x44, new C{ T="Float", N = "shield recharge time" }},
{ 0x48, new C{ T="Float", N = "extended shield damage threshold" }},
{ 0x4C, new C{ T="Float", N = "extended body damage threshold" }},
{ 0x50, new C{ T="Float", N = "runtime_body_recharge_velocity" }},
{ 0x54, new C{ T="Float", N = "runtime_shield_recharge_velocity" }},
{ 0x58, new C{ T="TagRef", N = "resurrect weapon" }},
{ 0x74, new C{ T="Float", N = "player damage_scale" }},
{ 0x78, new C{ T="TagRef", N = "collision damage override" }},
{ 0x94, new C{ T="TagRef", N = "Knockback Collision Damage Override" }},
{ 0xB0, new C{ T="Float", N = "stun threshold (easy)" }},
{ 0xB4, new C{ T="Float", N = "stun threshold (normal)" }},
{ 0xB8, new C{ T="Float", N = "stun threshold (heroic)" }},
{ 0xBC, new C{ T="Float", N = "stun threshold (legendary)" }},
{ 0xC0, new C{ T="Float", N = "stun time scale (easy)" }},
{ 0xC4, new C{ T="Float", N = "stun time scale (normal)" }},
{ 0xC8, new C{ T="Float", N = "stun time scale (heroic)" }},
{ 0xCC, new C{ T="Float", N = "stun time scale (legendary)" }},
{ 0xD0, new C{ T="Float", N = "stun cooldown (easy)" }},
{ 0xD4, new C{ T="Float", N = "stun cooldown (normal)" }},
{ 0xD8, new C{ T="Float", N = "stun cooldown (heroic)" }},
{ 0xDC, new C{ T="Float", N = "stun cooldown (legendary)" }},
}, S=224}},
{ 0x15C, new C{ T="Tagblock", N = "placement properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "few upgrade chance (easy)" }},
{ 0x4, new C{ T="Float", N = "few upgrade chance (normal)" }},
{ 0x8, new C{ T="Float", N = "few upgrade chance (heroic)" }},
{ 0xC, new C{ T="Float", N = "few upgrade chance (legendary)" }},
{ 0x10, new C{ T="Float", N = "normal upgrade chance (easy)" }},
{ 0x14, new C{ T="Float", N = "normal upgrade chance (normal)" }},
{ 0x18, new C{ T="Float", N = "normal upgrade chance (heroic)" }},
{ 0x1C, new C{ T="Float", N = "normal upgrade chance (legendary)" }},
{ 0x20, new C{ T="Float", N = "many upgrade chance (easy)" }},
{ 0x24, new C{ T="Float", N = "many upgrade chance (normal)" }},
{ 0x28, new C{ T="Float", N = "many upgrade chance (heroic)" }},
{ 0x2C, new C{ T="Float", N = "many upgrade chance (legendary)" }},
}, S=48}},
{ 0x170, new C{ T="Tagblock", N = "base perception properties", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=1, N="flags", STR = new Dictionary<int, string>()
{
{0, "Has Magic Sight" },
{1, "More Frequent Prop Perception" },
}}},
{ 0x1, new C{ T="Comment", N = "generated_pad16e5" }},
{ 0x4, new C{ T="Float", N = "Silent Movement Speed Threshold" }},
{ 0x8, new C{ T="Float", N = "Perception Decay Delay" }},
{ 0xC, new C{ T="Float", N = "Moving Perception Decay Delay" }},
{ 0x10, new C{ T="Float", N = "Perception Begin To Forget Time" }},
{ 0x14, new C{ T="Float", N = "Perception Forget Time" }},
{ 0x18, new C{ T="Float", N = "Combat Status Alert Cooldown" }},
{ 0x1C, new C{ T="Float", N = "Combat Status Active Cooldown" }},
{ 0x20, new C{ T="Float", N = "Postcombat clump state time" }},
}, S=36}},
{ 0x184, new C{ T="Tagblock", N = "perception properties", B = new Dictionary<long, C>
{
{ 0x0, new EnumGroup { A=2, N="perception_mode", STR = new Dictionary<int, string>()
{
{0, "idle" },
{1, "alert" },
{2, "combat" },
{3, "vehicle idle" },
{4, "vehicle alert" },
{5, "vehicle combat" },
}}},
{ 0x2, new FlagGroup { A=2, N="flags", STR = new Dictionary<int, string>()
{
{0, "character can see in darkness" },
{1, "ignore tracking projectiles" },
{2, "ignore minor tracking projectiles" },
}}},
{ 0x4, new C{ T="Float", N = "maximum vision distance" }},
{ 0x8, new C{ T="Float", N = "reliable vision distance" }},
{ 0xC, new C{ T="Float", N = "maximum peripheral vision distance" }},
{ 0x10, new C{ T="Float", N = "reliable peripheral vision distance" }},
{ 0x14, new C{ T="Float", N = "max peripheral vision distance at peripheral vision angle" }},
{ 0x18, new C{ T="Float", N = "max reliable peripheral vision distance at peripheral vision angle" }},
{ 0x1C, new C{ T="Float", N = "Maximum Unmistakable Distance" }},
{ 0x20, new C{ T="Float", N = "surprise distance" }},
{ 0x24, new C{ T="Float", N = "Min distance from last known position to surprise" }},
{ 0x28, new C{ T="Float", N = "Min time from last clump surprise" }},
{ 0x2C, new C{ T="Float", N = "Min time from last seen to surprise" }},
{ 0x30, new C{ T="Float", N = "Surprise lerp distance range.min" }},
{ 0x34, new C{ T="Float", N = "Surprise lerp distance range.max" }},
{ 0x38, new C{ T="Float", N = "Surprise angle range.min" }},
{ 0x3C, new C{ T="Float", N = "Surprise angle range.max" }},
{ 0x40, new C{ T="Float", N = "focus interior angle" }},
{ 0x44, new C{ T="Float", N = "focus exterior angle" }},
{ 0x48, new C{ T="Float", N = "peripheral vision angle" }},
{ 0x4C, new C{ T="Float", N = "Vertical Exterior Up Angle" }},
{ 0x50, new C{ T="Float", N = "Vertical Exterior Down Angle" }},
{ 0x54, new C{ T="Float", N = "hearing distance" }},
{ 0x58, new C{ T="Float", N = "Max Propagation Time" }},
{ 0x5C, new C{ T="Float", N = "Partial Perception Awareness Delay" }},
{ 0x60, new C{ T="Float", N = "Full Perception Awareness Delay" }},
{ 0x64, new C{ T="Float", N = "Unmistakable Perception Awareness Delay" }},
{ 0x68, new C{ T="Float", N = "Partial Perception Acknowledgement Delay" }},
{ 0x6C, new C{ T="Float", N = "Full Perception Acknowledgement Delay" }},
{ 0x70, new C{ T="Float", N = "Unmistakable Perception Acknowledgement Delay" }},
{ 0x74, new C{ T="Float", N = "awareness glance level" }},
{ 0x78, new C{ T="Float", N = "identify hologram chance" }},
{ 0x7C, new C{ T="Float", N = "hologram ignore timer.min" }},
{ 0x80, new C{ T="Float", N = "hologram ignore timer.max" }},
{ 0x84, new C{ T="Float", N = "hologram ignore timer shot penalty" }},
{ 0x881130, new C{ T="Comment", N = "Parital Perception/Distance distribution function" }},
{ 0x881131, new C{ T="Comment", N = "mapping" }},
{ 0x881132, new C{ T="Comment", N = "" }},
{ 0x88, new C{ T="Unmapped", N = "data" }},
{ 0xA01133, new C{ T="Comment", N = "" }},
{ 0xA01134, new C{ T="Comment", N = "Normal active-camo perception" }},
{ 0xA01135, new C{ T="Comment", N = "normal active camo perception" }},
{ 0xA0, new C{ T="Float", N = "partial invisibility amount" }},
{ 0xA4, new C{ T="Float", N = "partial invisibility vision distance" }},
{ 0xA8, new C{ T="Float", N = "full invisibility amount" }},
{ 0xAC, new C{ T="Float", N = "full invisibility vision distance" }},
{ 0xB01136, new C{ T="Comment", N = "" }},
{ 0xB01137, new C{ T="Comment", N = "Legendary active-camo perception" }},
{ 0xB01138, new C{ T="Comment", N = "legendary active camo perception" }},
{ 0xB0, new C{ T="Float", N = "partial invisibility amount" }},
{ 0xB4, new C{ T="Float", N = "partial invisibility vision distance" }},
{ 0xB8, new C{ T="Float", N = "full invisibility amount" }},
{ 0xBC, new C{ T="Float", N = "full invisibility vision distance" }},
{ 0xC01139, new C{ T="Comment", N = "" }},
}, S=192}},
{ 0x198, new C{ T="Tagblock", N = "target properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "player preference" }},
}, S=4}},
{ 0x1AC, new C{ T="Tagblock", N = "look properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Unmapped", N = "maximum aiming deviation" }},
{ 0xC, new C{ T="Unmapped", N = "maximum looking deviation" }},
{ 0x18, new C{ T="Unmapped", N = "runtime aiming deviation cosines" }},
{ 0x24, new C{ T="Unmapped", N = "runtime looking deviation cosines" }},
{ 0x30, new C{ T="Float", N = "noncombat look delta L" }},
{ 0x34, new C{ T="Float", N = "noncombat look delta R" }},
{ 0x38, new C{ T="Float", N = "combat look delta L" }},
{ 0x3C, new C{ T="Float", N = "combat look delta R" }},
{ 0x40, new C{ T="Float", N = "noncombat idle looking.min" }},
{ 0x44, new C{ T="Float", N = "noncombat idle looking.max" }},
{ 0x48, new C{ T="Float", N = "noncombat idle aiming.min" }},
{ 0x4C, new C{ T="Float", N = "noncombat idle aiming.max" }},
{ 0x50, new C{ T="Float", N = "combat idle looking.min" }},
{ 0x54, new C{ T="Float", N = "combat idle looking.max" }},
{ 0x58, new C{ T="Float", N = "combat idle aiming.min" }},
{ 0x5C, new C{ T="Float", N = "combat idle aiming.max" }},
}, S=96}},
{ 0x1C0, new C{ T="Tagblock", N = "hopping properties", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="Hopping Flags", STR = new Dictionary<int, string>()
{
{0, "to cover path segements" },
{1, "to end of path" },
{2, "forward only" },
{3, "force fire" },
}}},
{ 0x4, new C{ T="Tagblock", N = "Hopping Definition", B = new Dictionary<long, C>
{
{ 0x01140, new C{ T="Comment", N = "Default" }},
{ 0x01141, new C{ T="Comment", N = "Default" }},
{ 0x0, new C{ T="Float", N = "Min hop distance" }},
{ 0x4, new C{ T="Float", N = "Min hop distance to path end" }},
{ 0x8, new C{ T="Float", N = "Hop wait timer min/max.min" }},
{ 0xC, new C{ T="Float", N = "Hop wait timer min/max.max" }},
{ 0x10, new C{ T="Float", N = "Max hop distance" }},
{ 0x14, new C{ T="Float", N = "pad" }},
{ 0x181142, new C{ T="Comment", N = "" }},
{ 0x181143, new C{ T="Comment", N = "Passive" }},
{ 0x181144, new C{ T="Comment", N = "Passive" }},
{ 0x18, new C{ T="Float", N = "Min hop distance" }},
{ 0x1C, new C{ T="Float", N = "Min hop distance to path end" }},
{ 0x20, new C{ T="Float", N = "Hop wait timer min/max.min" }},
{ 0x24, new C{ T="Float", N = "Hop wait timer min/max.max" }},
{ 0x28, new C{ T="Float", N = "Max hop distance" }},
{ 0x2C, new C{ T="Float", N = "pad" }},
{ 0x301145, new C{ T="Comment", N = "" }},
{ 0x301146, new C{ T="Comment", N = "Aggressive" }},
{ 0x301147, new C{ T="Comment", N = "Aggressive" }},
{ 0x30, new C{ T="Float", N = "Min hop distance" }},
{ 0x34, new C{ T="Float", N = "Min hop distance to path end" }},
{ 0x38, new C{ T="Float", N = "Hop wait timer min/max.min" }},
{ 0x3C, new C{ T="Float", N = "Hop wait timer min/max.max" }},
{ 0x40, new C{ T="Float", N = "Max hop distance" }},
{ 0x44, new C{ T="Float", N = "pad" }},
{ 0x481148, new C{ T="Comment", N = "" }},
}, S=72}},
}, S=24}},
{ 0x1D4, new C{ T="Tagblock", N = "warp properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Tagblock", N = "Warp Definition", B = new Dictionary<long, C>
{
{ 0x01149, new C{ T="Comment", N = "Default" }},
{ 0x01150, new C{ T="Comment", N = "Default" }},
{ 0x0, new C{ T="Float", N = "min warp distance" }},
{ 0x4, new C{ T="Float", N = "max warp distance" }},
{ 0x8, new C{ T="Float", N = "warp speed" }},
{ 0xC, new C{ T="Float", N = "run up distance" }},
{ 0x10, new C{ T="Float", N = "linear distance until cooldown" }},
{ 0x14, new C{ T="Float", N = "cooldown duration" }},
{ 0x18, new C{ T="Float", N = "min jump distance" }},
{ 0x1C1151, new C{ T="Comment", N = "" }},
{ 0x1C1152, new C{ T="Comment", N = "Passive" }},
{ 0x1C1153, new C{ T="Comment", N = "Passive" }},
{ 0x1C, new C{ T="Float", N = "min warp distance" }},
{ 0x20, new C{ T="Float", N = "max warp distance" }},
{ 0x24, new C{ T="Float", N = "warp speed" }},
{ 0x28, new C{ T="Float", N = "run up distance" }},
{ 0x2C, new C{ T="Float", N = "linear distance until cooldown" }},
{ 0x30, new C{ T="Float", N = "cooldown duration" }},
{ 0x34, new C{ T="Float", N = "min jump distance" }},
{ 0x381154, new C{ T="Comment", N = "" }},
{ 0x381155, new C{ T="Comment", N = "Aggressive" }},
{ 0x381156, new C{ T="Comment", N = "Aggressive" }},
{ 0x38, new C{ T="Float", N = "min warp distance" }},
{ 0x3C, new C{ T="Float", N = "max warp distance" }},
{ 0x40, new C{ T="Float", N = "warp speed" }},
{ 0x44, new C{ T="Float", N = "run up distance" }},
{ 0x48, new C{ T="Float", N = "linear distance until cooldown" }},
{ 0x4C, new C{ T="Float", N = "cooldown duration" }},
{ 0x50, new C{ T="Float", N = "min jump distance" }},
{ 0x541157, new C{ T="Comment", N = "" }},
}, S=84}},
{ 0x14, new C{ T="TagRef", N = "Intro Effect" }},
{ 0x30, new C{ T="TagRef", N = "Travel Effect" }},
{ 0x4C, new C{ T="TagRef", N = "Outro Effect" }},
}, S=104}},
{ 0x1E8, new C{ T="Tagblock", N = "movement properties", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="movement flags", STR = new Dictionary<int, string>()
{
{0, "danger crouch allow movement" },
{1, "no side-step" },
{2, "prefer to combar near friends" },
{3, "allow boosted jump" },
{4, "allow mid-jump free facing" },
{5, "climb" },
{6, "prefer wall movement" },
{7, "has flying mode" },
{8, "disallow crouch" },
{9, "disallow all movement" },
{10, "always use search points" },
{11, "keep moving" },
{12, "cure isolation jump" },
{13, "gain elevation" },
{14, "reposition distant" },
{15, "only use aerial firing positions" },
{16, "use high priority pathfinding" },
{17, "lower weapon when no alert movement override" },
{18, "phase" },
{19, "no override when firing" },
{20, "no stow during idle activities" },
{21, "flip any vehicle" },
{22, "bound along path" },
{23, "use new aiming and facing control" },
{24, "force strafe when crouching" },
{25, "disallow hard stop" },
{26, "Disable velocity/throttle alignment" },
{27, "Fixed facing hunker" },
{28, "Zero Smash Cost In Combat" },
}}},
{ 0x4, new C{ T="Float", N = "pathfinding radius" }},
{ 0x8, new C{ T="Float", N = "avoidance radius" }},
{ 0xC, new C{ T="Float", N = "destination radius" }},
{ 0x10, new C{ T="Float", N = "Friendly Outer Radius" }},
{ 0x14, new C{ T="Float", N = "Friendly Inner Radius" }},
{ 0x18, new C{ T="Float", N = "Friendly Player Outer Radius" }},
{ 0x1C, new C{ T="Float", N = "Friendly Player Inner Radius" }},
{ 0x201158, new C{ T="Comment", N = "Danger Zone Avoidance" }},
{ 0x20, new EnumGroup { A=2, N="obstacle leap min size", STR = new Dictionary<int, string>()
{
{0, "default" },
{1, "tiny" },
{2, "small" },
{3, "medium" },
{4, "large" },
{5, "immobile" },
}}},
{ 0x22, new EnumGroup { A=2, N="obstacle leap max size", STR = new Dictionary<int, string>()
{
{0, "default" },
{1, "tiny" },
{2, "small" },
{3, "medium" },
{4, "large" },
{5, "immobile" },
}}},
{ 0x24, new EnumGroup { A=2, N="obstacle ignore size", STR = new Dictionary<int, string>()
{
{0, "default" },
{1, "tiny" },
{2, "small" },
{3, "medium" },
{4, "large" },
{5, "immobile" },
}}},
{ 0x26, new EnumGroup { A=2, N="obstacle smashable size", STR = new Dictionary<int, string>()
{
{0, "default" },
{1, "tiny" },
{2, "small" },
{3, "medium" },
{4, "large" },
{5, "immobile" },
}}},
{ 0x281159, new C{ T="Comment", N = "clearance cache" }},
{ 0x28, new EnumGroup { A=2, N="clearance cache bucket size", STR = new Dictionary<int, string>()
{
{0, "default" },
{1, "small" },
{2, "medium" },
{3, "large" },
{4, "no cache" },
}}},
{ 0x2A, new C{ T="2Byte", N = "generated_pad024b" }},
{ 0x2C, new C{ T="Float", N = "max jump height" }},
{ 0x30, new C{ T="Float", N = "max jump distance" }},
{ 0x34, new C{ T="Float", N = "maximum leap height" }},
{ 0x38, new C{ T="Float", N = "leap proximity fraction" }},
{ 0x3C, new C{ T="Float", N = "maximum hoist height" }},
{ 0x40, new C{ T="Float", N = "obstacle smash strength" }},
{ 0x44, new FlagGroup { A=4, N="movement hints", STR = new Dictionary<int, string>()
{
{0, "vault step" },
{1, "vault crouch" },
{2, "unused0" },
{3, "unused1" },
{4, "unused2" },
{5, "mount step" },
{6, "mount crouch" },
{7, "mount stand" },
{8, "unused3" },
{9, "unused4" },
{10, "unused5" },
{11, "hoist crouch" },
{12, "hoist stand" },
{13, "unused6" },
{14, "unused7" },
{15, "unused8" },
}}},
{ 0x481160, new C{ T="Comment", N = "Throttle and inertia" }},
{ 0x48, new C{ T="Tagblock", N = "change direction pause", B = new Dictionary<long, C>
{
{ 0x01161, new C{ T="Comment", N = "Inertial pause settings" }},
{ 0x0, new C{ T="Float", N = "direction change angle" }},
{ 0x4, new C{ T="4Byte", N = "stationary change" }},
}, S=8}},
{ 0x5C, new C{ T="Float", N = "maximum throttle" }},
{ 0x60, new C{ T="Float", N = "minimum throttle" }},
{ 0x64, new C{ T="Float", N = "throttle smoothing rate" }},
{ 0x68, new C{ T="Tagblock", N = "movement throttle control", B = new Dictionary<long, C>
{
{ 0x0, new EnumGroup { A=2, N="combat status", STR = new Dictionary<int, string>()
{
{0, "asleep" },
{1, "idle" },
{2, "alert" },
{3, "uninspected orphan" },
{4, "active" },
{5, "definite orphan" },
{6, "certain orphan" },
{7, "visible enemy" },
{8, "clear enemy los" },
{9, "dangerous enemy" },
}}},
{ 0x2, new C{ T="2Byte", N = "generated_padd966" }},
{ 0x4, new C{ T="Tagblock", N = "throttle settings", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "distance" }},
{ 0x4, new C{ T="Float", N = "throttle scale" }},
}, S=8}},
}, S=24}},
{ 0x7C, new C{ T="Float", N = "minimum juke throttle" }},
{ 0x80, new C{ T="Float", N = "minimum direction change juke angle" }},
{ 0x84, new C{ T="Float", N = "non direction change juke probability" }},
{ 0x88, new C{ T="Float", N = "non direction change juke timeout" }},
{ 0x8C, new C{ T="4Byte", N = "minimum post juke movement ticks" }},
{ 0x901162, new C{ T="Comment", N = "" }},
{ 0x90, new C{ T="Float", N = "stationary turn radius" }},
{ 0x94, new C{ T="Float", N = "move distance.min" }},
{ 0x98, new C{ T="Float", N = "move distance.max" }},
{ 0x9C1163, new C{ T="Comment", N = "Phasing" }},
{ 0x9C, new C{ T="Float", N = "phase chance" }},
{ 0xA0, new C{ T="Float", N = "phase delay seconds" }},
{ 0xA41164, new C{ T="Comment", N = "" }},
{ 0xA41165, new C{ T="Comment", N = "Movement Facing" }},
{ 0xA41166, new C{ T="Comment", N = "Movement Facing" }},
{ 0xA4, new C{ T="Float", N = "Maximum Deviation Angle" }},
{ 0xA81167, new C{ T="Comment", N = "" }},
{ 0xA81168, new C{ T="Comment", N = "locomotion settings" }},
{ 0xA81169, new C{ T="Comment", N = "Locomotion Settings" }},
{ 0xA8, new C{ T="Float", N = "Sharp Turn Throttle" }},
{ 0xAC, new C{ T="Float", N = "Sharp Turn Angle" }},
{ 0xB0, new C{ T="Float", N = "Max Accel Time" }},
{ 0xB4, new C{ T="Float", N = "Max Decel Time" }},
{ 0xB81170, new C{ T="Comment", N = "" }},
{ 0xB8, new C{ T="Float", N = "wall climb cost multiplier " }},
{ 0xBC1171, new C{ T="Comment", N = "Character flight" }},
{ 0xBC, new EnumGroup { A=1, N="Air nav firing point position", STR = new Dictionary<int, string>()
{
{0, "Center" },
{1, "Bottom" },
}}},
{ 0xBD1172, new C{ T="Comment", N = "" }},
{ 0xBD, new C{ T="Comment", N = "generated_padb596" }},
}, S=192}},
{ 0x1FC, new C{ T="Tagblock", N = "aiming-facing properties", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=1, N="Flags", STR = new Dictionary<int, string>()
{
{0, "Disallow behaviors forcing baseball runs" },
{1, "Disallow firing during 'running' phase in baseball run" },
}}},
{ 0x1, new EnumGroup { A=1, N="Default facing mode", STR = new Dictionary<int, string>()
{
{0, "Baseball run" },
{1, "Strafe only" },
{2, "Run only" },
}}},
{ 0x2, new C{ T="2Byte", N = "generated_padbf57" }},
{ 0x41173, new C{ T="Comment", N = "Baseball run properties" }},
{ 0x41174, new C{ T="Comment", N = "Baseball run properties" }},
{ 0x4, new C{ T="Float", N = "Strafe to run rate" }},
{ 0x8, new C{ T="Float", N = "Run to strafe rate" }},
{ 0xC, new C{ T="Float", N = "Start distance threshold" }},
{ 0x10, new C{ T="Float", N = "End distance threshold" }},
{ 0x14, new C{ T="Float", N = "Path minimum length" }},
{ 0x18, new C{ T="Float", N = "Minimum distance to target" }},
{ 0x1C1175, new C{ T="Comment", N = "" }},
}, S=28}},
{ 0x210, new C{ T="Tagblock", N = "decelerated turns properties", B = new Dictionary<long, C>
{
{ 0x01176, new C{ T="Comment", N = "Turn Slerp Blend Table" }},
{ 0x01177, new C{ T="Comment", N = "Turn Slerp Blend Table Table" }},
{ 0x01178, new C{ T="Comment", N = "Turn Slerp Blend Table" }},
{ 0x01179, new C{ T="Comment", N = "" }},
{ 0x0, new C{ T="Unmapped", N = "data" }},
{ 0x181180, new C{ T="Comment", N = "" }},
{ 0x181181, new C{ T="Comment", N = "" }},
{ 0x181182, new C{ T="Comment", N = "Turn Anticipation Blend Table" }},
{ 0x181183, new C{ T="Comment", N = "Turn Anticipation Blend Table" }},
{ 0x181184, new C{ T="Comment", N = "Turn Anticipation Blend Table" }},
{ 0x181185, new C{ T="Comment", N = "" }},
{ 0x18, new C{ T="Unmapped", N = "data" }},
{ 0x301186, new C{ T="Comment", N = "" }},
{ 0x301187, new C{ T="Comment", N = "" }},
{ 0x301188, new C{ T="Comment", N = "Turn Reaction Blend Table" }},
{ 0x301189, new C{ T="Comment", N = "Turn Reaction Blend Table" }},
{ 0x301190, new C{ T="Comment", N = "Turn Reaction Blend Table" }},
{ 0x301191, new C{ T="Comment", N = "" }},
{ 0x30, new C{ T="Unmapped", N = "data" }},
{ 0x481192, new C{ T="Comment", N = "" }},
{ 0x481193, new C{ T="Comment", N = "" }},
{ 0x48, new C{ T="Float", N = "Turn reaction cosine power" }},
{ 0x4C, new C{ T="Float", N = "Turn reaction cosine factor" }},
}, S=80}},
{ 0x224, new C{ T="Tagblock", N = "locomotion overrides", B = new Dictionary<long, C>
{
{ 0x01194, new C{ T="Comment", N = "locomotion overrides" }},
{ 0x0, new FlagGroup { A=1, N="Flags", STR = new Dictionary<int, string>()
{
{0, "Disable STAS (Stick-To-Authored-Samples)" },
}}},
{ 0x1, new C{ T="Comment", N = "generated_pad2640" }},
{ 0x41195, new C{ T="Comment", N = "Walk speed properties" }},
{ 0x4, new C{ T="Float", N = "walking speed" }},
{ 0x81196, new C{ T="Comment", N = "AI Sprint speed properties" }},
{ 0x8, new C{ T="Float", N = "AI sprinting speed" }},
{ 0xC1197, new C{ T="Comment", N = "Run speed properties" }},
{ 0xC, new C{ T="Float", N = "running forward speed" }},
{ 0x10, new C{ T="Float", N = "running backward speed" }},
{ 0x14, new C{ T="Float", N = "running sideways speed" }},
{ 0x181198, new C{ T="Comment", N = "Crouch speed properties" }},
{ 0x18, new C{ T="Float", N = "crouching forward speed" }},
{ 0x1C, new C{ T="Float", N = "crouching backward speed" }},
{ 0x20, new C{ T="Float", N = "crouching sideways speed" }},
{ 0x241199, new C{ T="Comment", N = "Acceleration/deceleration properties" }},
{ 0x24, new C{ T="Float", N = "maximum run acceleration" }},
{ 0x28, new C{ T="Float", N = "maximum run deceleration" }},
{ 0x2C, new C{ T="Float", N = "maximum crouch acceleration" }},
{ 0x30, new C{ T="Float", N = "maximum crouch deceleration" }},
{ 0x34, new C{ T="Float", N = "minimum slip recovery acceleration" }},
{ 0x381200, new C{ T="Comment", N = "Airborne Acceleration/Deceleration" }},
{ 0x38, new C{ T="Float", N = "maximum airborne acceleration" }},
{ 0x3C, new C{ T="Float", N = "maximum airborne deceleration" }},
{ 0x401201, new C{ T="Comment", N = "Stationary turn properties old action system" }},
{ 0x40, new C{ T="Float", N = "low speed threshold" }},
{ 0x44, new C{ T="Float", N = "high speed threshold" }},
{ 0x48, new C{ T="Float", N = "acceleration" }},
{ 0x4C1202, new C{ T="Comment", N = "Stationary turn properties new action system" }},
{ 0x4C, new C{ T="Float", N = "stationary turn trigger range factor" }},
{ 0x50, new C{ T="Float", N = "stationary turn max anim playback speed up factor" }},
{ 0x541203, new C{ T="Comment", N = "Stationary turn properties new action system (DEPRECATED)" }},
{ 0x54, new C{ T="Float", N = "min stationary turn angle" }},
{ 0x58, new C{ T="Float", N = "stationary turn max speed threshold" }},
{ 0x5C, new C{ T="Float", N = "stationary turn min yaw threshold" }},
{ 0x60, new C{ T="Float", N = "stationary turn max speed yaw" }},
{ 0x64, new C{ T="Float", N = "min stationary turn speed" }},
{ 0x68, new C{ T="Float", N = "max stationary turn speed" }},
{ 0x6C, new C{ T="Float", N = "stationary turn acceleration rate" }},
{ 0x70, new C{ T="Float", N = "stationary turn decceleration rate" }},
{ 0x741204, new C{ T="Comment", N = "Non stationary turn properties" }},
{ 0x74, new C{ T="Float", N = "max angular velocity clamp" }},
{ 0x78, new C{ T="Float", N = "turn accel/decel rate" }},
{ 0x7C1205, new C{ T="Comment", N = "Speed/acceleration scales based on mode" }},
{ 0x7C, new C{ T="Tagblock", N = "Mode specific scaling", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "mode name" }},
{ 0x4, new C{ T="Float", N = "speed scale" }},
{ 0x8, new C{ T="Float", N = "acceleration scale" }},
{ 0xC, new C{ T="Float", N = "locomotion turn rate scale" }},
}, S=16}},
}, S=144}},
{ 0x238, new C{ T="Tagblock", N = "movement tweak properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "Dive grenade chance" }},
{ 0x4, new C{ T="Float", N = "Brace grenade chance" }},
{ 0x8, new C{ T="Float", N = "Dive vehicle chance" }},
{ 0xC, new C{ T="Float", N = "Brace vehicle chance" }},
{ 0x10, new C{ T="Float", N = "Stand Ground Chance" }},
{ 0x14, new C{ T="Float", N = "Stand Ground Anticipation Time" }},
{ 0x18, new C{ T="Float", N = "Brace For Grenade Time" }},
{ 0x1C, new C{ T="Float", N = "Brace For Vehicle Impact Time" }},
{ 0x20, new C{ T="Float", N = "Brace For Vehicle Impact Prediction Time" }},
{ 0x24, new C{ T="Float", N = "Brace For Vehicle Impact Velocity Threshold" }},
{ 0x28, new EnumGroup { A=2, N="jump height", STR = new Dictionary<int, string>()
{
{0, "NONE" },
{1, "very short" },
{2, "short" },
{3, "medium short" },
{4, "medium long" },
{5, "long" },
{6, "very long" },
{7, "infinite" },
}}},
{ 0x2A, new C{ T="2Byte", N = "generated_pad113f" }},
{ 0x2C, new C{ T="Tagblock", N = "Full Body Animation Jump Preventers", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "Animation exception name" }},
}, S=4}},
}, S=64}},
{ 0x24C, new C{ T="Tagblock", N = "throttle styles", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "style name" }},
{ 0x4, new C{ T="Float", N = "desired throttle" }},
{ 0x8, new C{ T="Float", N = "acceleration time" }},
{ 0xC1206, new C{ T="Comment", N = "acceleration function" }},
{ 0xC1207, new C{ T="Comment", N = "function" }},
{ 0xC1208, new C{ T="Comment", N = "function" }},
{ 0xC1209, new C{ T="Comment", N = "" }},
{ 0xC, new C{ T="Unmapped", N = "data" }},
{ 0x241210, new C{ T="Comment", N = "" }},
{ 0x24, new C{ T="Float", N = "deceleration distance" }},
{ 0x281211, new C{ T="Comment", N = "deceleration function" }},
{ 0x281212, new C{ T="Comment", N = "function" }},
{ 0x281213, new C{ T="Comment", N = "function" }},
{ 0x281214, new C{ T="Comment", N = "" }},
{ 0x28, new C{ T="Unmapped", N = "data" }},
{ 0x401215, new C{ T="Comment", N = "" }},
{ 0x40, new C{ T="mmr3Hash", N = "stance" }},
}, S=68}},
{ 0x260, new C{ T="Tagblock", N = "movement sets", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "name" }},
{ 0x4, new C{ T="Tagblock", N = "variants", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "chance" }},
{ 0x41216, new C{ T="Comment", N = "MAPPING" }},
{ 0x4, new C{ T="mmr3Hash", N = "idle" }},
{ 0x8, new C{ T="mmr3Hash", N = "alert" }},
{ 0xC, new C{ T="mmr3Hash", N = "engage" }},
{ 0x10, new C{ T="mmr3Hash", N = "self_preserve" }},
{ 0x14, new C{ T="mmr3Hash", N = "search" }},
{ 0x18, new C{ T="mmr3Hash", N = "retreat" }},
{ 0x1C, new C{ T="mmr3Hash", N = "panic" }},
{ 0x20, new C{ T="mmr3Hash", N = "flank" }},
{ 0x24, new C{ T="mmr3Hash", N = "protected" }},
{ 0x28, new C{ T="mmr3Hash", N = "stunned" }},
{ 0x2C, new C{ T="mmr3Hash", N = "post_combat" }},
{ 0x30, new C{ T="mmr3Hash", N = "hurry" }},
{ 0x34, new C{ T="mmr3Hash", N = "custom_1" }},
{ 0x38, new C{ T="mmr3Hash", N = "custom_2" }},
{ 0x3C, new C{ T="mmr3Hash", N = "custom_3" }},
{ 0x40, new C{ T="mmr3Hash", N = "custom_4" }},
}, S=68}},
}, S=24}},
{ 0x274, new C{ T="Tagblock", N = "flocking properties", B = new Dictionary<long, C>
{
{ 0x01217, new C{ T="Comment", N = "Jaime, don't touch this" }},
{ 0x0, new C{ T="Float", N = "deceleration distance" }},
{ 0x4, new C{ T="Float", N = "normalized speed" }},
{ 0x8, new C{ T="Float", N = "buffer distance" }},
{ 0xC, new C{ T="Float", N = "throttle threshold bounds.min" }},
{ 0x10, new C{ T="Float", N = "throttle threshold bounds.max" }},
{ 0x14, new C{ T="Float", N = "deceleration stop time" }},
}, S=24}},
{ 0x288, new C{ T="Tagblock", N = "swarm properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="2Byte", N = "scatter killed count" }},
{ 0x2, new C{ T="2Byte", N = "generated_pad8e1a" }},
{ 0x4, new C{ T="Float", N = "scatter radius" }},
{ 0x8, new C{ T="Float", N = "scatter time" }},
{ 0xC, new C{ T="Float", N = "hound min distance" }},
{ 0x10, new C{ T="Float", N = "hound max distance" }},
{ 0x14, new C{ T="Float", N = "perlin offset scale" }},
{ 0x18, new C{ T="Float", N = "offset period.min" }},
{ 0x1C, new C{ T="Float", N = "offset period.max" }},
{ 0x20, new C{ T="Float", N = "perlin idle movement threshold" }},
{ 0x24, new C{ T="Float", N = "perlin combat movement threshold" }},
{ 0x28, new C{ T="Float", N = "stuck time" }},
{ 0x2C, new C{ T="Float", N = "stuck distance" }},
}, S=48}},
{ 0x29C, new C{ T="Tagblock", N = "ready properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "ready time bounds.min" }},
{ 0x4, new C{ T="Float", N = "ready time bounds.max" }},
}, S=8}},
{ 0x2B0, new C{ T="Tagblock", N = "engage properties", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="flags", STR = new Dictionary<int, string>()
{
{0, "defend threat axis " },
{1, "fight constant movement" },
{2, "flight fight constant movement" },
{3, "disallow combat crouching" },
{4, "disallow crouch shooting" },
{5, "fight stable" },
{6, "throw should lob" },
{7, "allow positioning beyond ideal range" },
{8, "can suppress" },
{9, "Prefers Bunker" },
{10, "Burst Inhibits Evasion" },
{11, "Allow midair shooting" },
{12, "Disallow Surround" },
{13, "Provides Cover" },
{14, "Desires Cover" },
{15, "Want Danger Crouch LOS check" },
}}},
{ 0x4, new C{ T="Float", N = "Reposition bounds.min" }},
{ 0x8, new C{ T="Float", N = "Reposition bounds.max" }},
{ 0xC, new C{ T="Float", N = "Bunkering Reposition bounds.min" }},
{ 0x10, new C{ T="Float", N = "Bunkering Reposition bounds.max" }},
{ 0x141218, new C{ T="Comment", N = "Danger Crouch" }},
{ 0x14, new C{ T="Float", N = "Crouch danger threshold" }},
{ 0x18, new C{ T="Float", N = "Crouch max path distance" }},
{ 0x1C, new C{ T="Float", N = "Stand danger threshold" }},
{ 0x20, new C{ T="Float", N = "Fight danger move threshold" }},
{ 0x24, new C{ T="Unmapped", N = "Fight danger move threshold cooldown" }},
{ 0x28, new C{ T="TagRef", N = "override grenade projectile" }},
{ 0x44, new C{ T="Float", N = "default combat range.min" }},
{ 0x48, new C{ T="Float", N = "default combat range.max" }},
{ 0x4C, new C{ T="Float", N = "default firing range.min" }},
{ 0x50, new C{ T="Float", N = "default firing range.max" }},
{ 0x54, new C{ T="Float", N = "Preferred engage fraction " }},
{ 0x58, new C{ T="Float", N = "Active Shield Fire Cutoff Delay" }},
{ 0x5C, new C{ T="Float", N = "Friendly Avoid Distance" }},
{ 0x60, new C{ T="Float", N = "Friendly Close Avoid Distance" }},
{ 0x64, new C{ T="Float", N = "TeamLead flocking distance" }},
{ 0x68, new C{ T="Float", N = "Enemy avoid distance" }},
{ 0x6C, new C{ T="Float", N = "Scary enemy avoid distance" }},
{ 0x70, new C{ T="Tagblock", N = "Full Body Animation Exceptions for Firing Reset", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "Animation exception name" }},
}, S=4}},
{ 0x841219, new C{ T="Comment", N = "Flying" }},
{ 0x84, new C{ T="Float", N = "Max angle from level" }},
}, S=136}},
{ 0x2C4, new C{ T="Tagblock", N = "Berserk Properties", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="Flags", STR = new Dictionary<int, string>()
{
{0, "Don't use the berserk anim stance" },
{1, "Don't stow weapon" },
{2, "Allow dialog" },
{3, "Don't play the intro animation" },
{4, "Permanent once initiated" },
{5, "Unreachable exit permanent berserk" },
{6, "Allow anim when stuck and already berserked" },
{7, "Can berserk when no target visible" },
{8, "Stop berserk when target unassailable" },
{9, "Ignore Hard Pings" },
}}},
{ 0x4, new C{ T="TagRef", N = "Berserk Weapon" }},
{ 0x20, new C{ T="Float", N = "Timeout" }},
{ 0x24, new C{ T="Unmapped", N = "Shield down chance" }},
{ 0x28, new C{ T="Float", N = "Shield down range.min" }},
{ 0x2C, new C{ T="Float", N = "Shield down range.max" }},
{ 0x30, new C{ T="Float", N = "Friendly killed distance" }},
{ 0x34, new C{ T="Float", N = "Peer killed chance" }},
{ 0x38, new C{ T="Float", N = "Leader killed chance" }},
{ 0x3C, new C{ T="Float", N = "Chance to play berserk anim" }},
{ 0x40, new C{ T="Float", N = "Chance to play berserk anim when stuck" }},
{ 0x44, new C{ T="Float", N = "Proximity chance" }},
{ 0x48, new C{ T="Float", N = "Proximity check cooldown" }},
{ 0x4C, new C{ T="Float", N = "Proximity abort distance" }},
{ 0x50, new C{ T="Float", N = "Broken kamikaze chance" }},
{ 0x54, new C{ T="Float", N = "Surprise kamikaze chance" }},
{ 0x58, new C{ T="Tagblock", N = "Kamikaze attachment Markers", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "Attachment Marker" }},
}, S=4}},
{ 0x6C, new C{ T="Float", N = "Broken Kamikaze stuck delay" }},
{ 0x70, new C{ T="Float", N = "Max kamikaze time" }},
{ 0x74, new C{ T="Float", N = "Last man trigger distance" }},
{ 0x78, new C{ T="Tagblock", N = "Difficulty limits", B = new Dictionary<long, C>
{
{ 0x01220, new C{ T="Comment", N = "Difficulty Limits" }},
{ 0x0, new C{ T="2Byte", N = "max kamikaze count" }},
{ 0x2, new C{ T="2Byte", N = "max berserk count" }},
{ 0x4, new C{ T="2Byte", N = "min berserk count" }},
}, S=6}},
}, S=140}},
{ 0x2D8, new C{ T="Tagblock", N = "Weapon Pickup Properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "Search range" }},
{ 0x4, new C{ T="Float", N = "Minimum target range" }},
{ 0x8, new C{ T="Float", N = "Range threshold" }},
{ 0xC, new C{ T="Float", N = "Vehicle threshold" }},
{ 0x10, new C{ T="Float", N = "Search delay min" }},
{ 0x14, new C{ T="Float", N = "Search delay max" }},
{ 0x18, new EnumGroup { A=1, N="Bias", STR = new Dictionary<int, string>()
{
{0, "Reactive" },
{1, "Proactive" },
}}},
{ 0x19, new C{ T="Comment", N = "generated_pad5304" }},
{ 0x1C, new C{ T="Float", N = "Danger threshold" }},
}, S=32}},
{ 0x2EC1221, new C{ T="Comment", N = "Danger Values" }},
{ 0x2EC, new C{ T="Tagblock", N = "evasion properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "Evasion danger threshold" }},
{ 0x4, new C{ T="Float", N = "Evasion delay timer" }},
{ 0x8, new C{ T="Float", N = "Evasion chance" }},
{ 0xC, new C{ T="Float", N = "Evasion proximity threshold" }},
{ 0x10, new C{ T="Float", N = "dive retreat chance" }},
}, S=20}},
{ 0x300, new C{ T="Tagblock", N = "Dodge properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "Danger threshold" }},
{ 0x4, new C{ T="Float", N = "Cooldown" }},
{ 0x8, new C{ T="Float", N = "Chance" }},
{ 0xC, new C{ T="Float", N = "Stop proximity" }},
}, S=16}},
{ 0x314, new C{ T="Tagblock", N = "Run Away From Vehicle properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "Chance" }},
{ 0x4, new C{ T="Float", N = "Minimum time to flee" }},
{ 0x8, new C{ T="Float", N = "Time to flee" }},
{ 0xC, new C{ T="Float", N = "Time to keep path" }},
}, S=16}},
{ 0x328, new C{ T="Tagblock", N = "cover properties", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="cover flags", STR = new Dictionary<int, string>()
{
{0, "Dive To cover" },
{1, "Reject Visible Points" },
{2, "Cover Against Multiple Enemies" },
{3, "Disallow Cover-point Evaluation while hiding" },
}}},
{ 0x4, new C{ T="Float", N = "hide behind cover time.min" }},
{ 0x8, new C{ T="Float", N = "hide behind cover time.max" }},
{ 0xC1222, new C{ T="Comment", N = "Cover conditions" }},
{ 0xC, new C{ T="Float", N = "Cover shield fraction" }},
{ 0x10, new C{ T="Float", N = "Cover vitality threshold" }},
{ 0x14, new C{ T="Float", N = "Cover danger threshold" }},
{ 0x18, new C{ T="Float", N = "Leave cover danger threshold" }},
{ 0x1C1223, new C{ T="Comment", N = "Aggresive/Defensive cover properties" }},
{ 0x1C, new C{ T="Float", N = "minimum defensive distance from target" }},
{ 0x20, new C{ T="Float", N = "minimum defensive distance from cover" }},
{ 0x24, new C{ T="Float", N = "always defensive scary threshold" }},
{ 0x281224, new C{ T="Comment", N = "" }},
{ 0x281225, new C{ T="Comment", N = "Other" }},
{ 0x28, new C{ T="Float", N = "Cover check delay" }},
{ 0x2C, new C{ T="Float", N = "Cover pinned down check delay" }},
{ 0x30, new C{ T="Float", N = "Emerge from cover when shield fraction reaches threshold" }},
{ 0x34, new C{ T="Float", N = "Body Vitality Exit Threshold" }},
{ 0x38, new C{ T="Float", N = "Proximity self-preserve" }},
{ 0x3C, new C{ T="Float", N = "unreachable enemy danger threshold" }},
{ 0x40, new C{ T="Float", N = "scary target threshold" }},
{ 0x44, new C{ T="Float", N = "Minimum enemy distance" }},
}, S=72}},
{ 0x33C, new C{ T="Tagblock", N = "retreat properties", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="Retreat flags", STR = new Dictionary<int, string>()
{
{0, "Zig-zag when fleeing" },
{1, "Unused1" },
}}},
{ 0x4, new C{ T="Float", N = "Shield threshold" }},
{ 0x8, new C{ T="Float", N = "Scary target threshold" }},
{ 0xC, new C{ T="Float", N = "Danger threshold" }},
{ 0x10, new C{ T="Float", N = "Proximity threshold" }},
{ 0x14, new C{ T="Float", N = "min/max forced cower time bounds.min" }},
{ 0x18, new C{ T="Float", N = "min/max forced cower time bounds.max" }},
{ 0x1C, new C{ T="Float", N = "min/max cower timeout bounds.min" }},
{ 0x20, new C{ T="Float", N = "min/max cower timeout bounds.max" }},
{ 0x24, new C{ T="Float", N = "proximity ambush threshold" }},
{ 0x28, new C{ T="Float", N = "awareness ambush threshold" }},
{ 0x2C, new C{ T="Float", N = "leader dead retreat chance" }},
{ 0x30, new C{ T="Float", N = "peer dead retreat chance" }},
{ 0x34, new C{ T="Float", N = "second peer dead retreat chance" }},
{ 0x38, new C{ T="Float", N = "flee timeout" }},
{ 0x3C, new C{ T="Float", N = "zig-zag angle" }},
{ 0x40, new C{ T="Float", N = "zig-zag period" }},
{ 0x44, new C{ T="Float", N = "retreat grenade chance" }},
}, S=72}},
{ 0x350, new C{ T="Tagblock", N = "search properties", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="Search flags", STR = new Dictionary<int, string>()
{
{0, "crouch on investigate" },
{1, "walk on pursuit" },
{2, "search forever" },
{3, "search exclusively" },
{4, "search points only while searching" },
}}},
{ 0x4, new C{ T="Float", N = "search time.min" }},
{ 0x8, new C{ T="Float", N = "search time.max" }},
{ 0xC, new C{ T="Float", N = "Search distance" }},
{ 0x10, new C{ T="Float", N = "Max Searcher Count " }},
{ 0x141226, new C{ T="Comment", N = "Uncover" }},
{ 0x14, new C{ T="Float", N = "Uncover distance bounds.min" }},
{ 0x18, new C{ T="Float", N = "Uncover distance bounds.max" }},
{ 0x1C1227, new C{ T="Comment", N = "Investigate" }},
{ 0x1C, new C{ T="Float", N = "vocalization time.min" }},
{ 0x20, new C{ T="Float", N = "vocalization time.max" }},
}, S=36}},
{ 0x364, new C{ T="Tagblock", N = "pre-search properties", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="Pre-search flags", STR = new Dictionary<int, string>()
{
{0, "Flag1" },
}}},
{ 0x4, new C{ T="Float", N = "min presearch time.min" }},
{ 0x8, new C{ T="Float", N = "min presearch time.max" }},
{ 0xC, new C{ T="Float", N = "max presearch time.min" }},
{ 0x10, new C{ T="Float", N = "max presearch time.max" }},
{ 0x14, new C{ T="Float", N = "Peek Time.min" }},
{ 0x18, new C{ T="Float", N = "Peek Time.max" }},
{ 0x1C, new C{ T="Float", N = "Max Certainty Radius" }},
{ 0x20, new C{ T="Float", N = "Max Presearcher Count " }},
{ 0x24, new C{ T="Float", N = "Max Suppressing Count" }},
{ 0x28, new C{ T="Float", N = "Max Uncover Count" }},
{ 0x2C, new C{ T="4Byte", N = "Max Destroy Cover Count" }},
{ 0x30, new C{ T="Float", N = "max suppress time" }},
{ 0x34, new C{ T="Float", N = "fire to uncover chance " }},
{ 0x38, new C{ T="Float", N = "Max destroy cover time" }},
{ 0x3C1228, new C{ T="Comment", N = "Child Weights" }},
{ 0x3C, new C{ T="Float", N = "suppressing fire weight" }},
{ 0x40, new C{ T="Float", N = "uncover weight" }},
{ 0x44, new C{ T="Float", N = "leap on cover weight" }},
{ 0x48, new C{ T="Float", N = "destroy cover weight" }},
{ 0x4C, new C{ T="Float", N = "guard weight" }},
{ 0x50, new C{ T="Float", N = "investigate weight" }},
{ 0x54, new C{ T="Float", N = "search by fire weight" }},
{ 0x581229, new C{ T="Comment", N = "" }},
}, S=88}},
{ 0x378, new C{ T="Tagblock", N = "Recognizing Properties", B = new Dictionary<long, C>
{
{ 0x01230, new C{ T="Comment", N = "Recognizing" }},
{ 0x0, new C{ T="Float", N = "Recognize min time" }},
{ 0x4, new C{ T="Float", N = "Recognize max time" }},
}, S=8}},
{ 0x38C, new C{ T="Tagblock", N = "idle properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "idle pose delay time.min" }},
{ 0x4, new C{ T="Float", N = "idle pose delay time.max" }},
{ 0x8, new C{ T="Float", N = "wander delay time.min" }},
{ 0xC, new C{ T="Float", N = "wander delay time.max" }},
}, S=16}},
{ 0x3A0, new C{ T="Tagblock", N = "Precombat Properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Tagblock", N = "Systematic Recreation Settings", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "Required Weapon Class" }},
{ 0x4, new C{ T="Float", N = "Cooldown.min" }},
{ 0x8, new C{ T="Float", N = "Cooldown.max" }},
{ 0xC, new C{ T="Float", N = "Duration.min" }},
{ 0x10, new C{ T="Float", N = "Duration.max" }},
}, S=20}},
}, S=20}},
{ 0x3B4, new C{ T="Tagblock", N = "vocalization properties", B = new Dictionary<long, C>
{
{ 0x01231, new C{ T="Comment", N = "Skip Fraction" }},
{ 0x0, new C{ T="Float", N = "character skip fraction" }},
{ 0x4, new C{ T="Float", N = "speaker weight bonus" }},
{ 0x8, new C{ T="Float", N = "look trigger distance" }},
{ 0xC, new C{ T="Float", N = "look cooldown time" }},
{ 0x10, new C{ T="Float", N = "look comment time" }},
{ 0x14, new C{ T="Float", N = "look long comment time" }},
{ 0x18, new C{ T="Float", N = "look respond max time" }},
{ 0x1C, new C{ T="Float", N = "look respond early out time" }},
}, S=32}},
{ 0x3C8, new C{ T="Tagblock", N = "boarding properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "rule name" }},
{ 0x4, new FlagGroup { A=4, N="flags", STR = new Dictionary<int, string>()
{
{0, "airborne boarding" },
}}},
{ 0x8, new C{ T="Float", N = "Boarding Distance" }},
{ 0xC, new C{ T="Float", N = "abort distance" }},
{ 0x10, new C{ T="Float", N = "Minimum Entry Distance" }},
{ 0x14, new C{ T="Float", N = "Maximum Entry Distance" }},
{ 0x18, new C{ T="Float", N = "max speed" }},
{ 0x1C, new C{ T="Float", N = "board time" }},
{ 0x20, new C{ T="Float", N = "boarding timeout.min" }},
{ 0x24, new C{ T="Float", N = "boarding timeout.max" }},
{ 0x28, new C{ T="Tagblock", N = "vehicle specific properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "vehicle" }},
{ 0x1C, new FlagGroup { A=4, N="flags", STR = new Dictionary<int, string>()
{
{0, "boarding does not enter seat" },
}}},
}, S=32}},
{ 0x3C, new C{ T="Tagblock", N = "vehicle specific pull properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "vehicle" }},
{ 0x1C, new C{ T="Float", N = "max pull" }},
{ 0x20, new C{ T="Float", N = "min linear acceleration" }},
{ 0x24, new C{ T="Float", N = "pull history factor" }},
}, S=40}},
{ 0x501232, new C{ T="Comment", N = "New boarding behavior" }},
{ 0x50, new C{ T="Float", N = "max danger" }},
{ 0x54, new C{ T="Float", N = "max pull" }},
{ 0x58, new C{ T="Float", N = "min linear acceleration" }},
{ 0x5C, new C{ T="Float", N = "pull history factor" }},
{ 0x60, new C{ T="Float", N = "Ejection Knockback Time" }},
{ 0x64, new C{ T="Float", N = "entry timeout" }},
{ 0x68, new C{ T="Float", N = "Boarding Chance" }},
{ 0x6C, new C{ T="Float", N = "Hijack Max Wait Time" }},
{ 0x70, new C{ T="Float", N = "Min Vehicle Vitality" }},
{ 0x74, new C{ T="Float", N = "melee cooldown.min" }},
{ 0x78, new C{ T="Float", N = "melee cooldown.max" }},
}, S=124}},
{ 0x3DC, new C{ T="Tagblock", N = "kungfu properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "kungfu override distance" }},
{ 0x4, new C{ T="Float", N = "kungfu cover danger threshold" }},
{ 0x8, new C{ T="Float", N = "Min Allowed Time" }},
{ 0xC, new C{ T="Float", N = "Min Disallowed Time" }},
}, S=16}},
{ 0x3F0, new C{ T="Tagblock", N = "bunker properties", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="Flags", STR = new Dictionary<int, string>()
{
{0, "No Bunker During Guard" },
}}},
{ 0x41233, new C{ T="Comment", N = "DEFAULT TIMINGS" }},
{ 0x41234, new C{ T="Comment", N = "default" }},
{ 0x4, new C{ T="Float", N = "open time.min" }},
{ 0x8, new C{ T="Float", N = "open time.max" }},
{ 0xC, new C{ T="Float", N = "closed min time" }},
{ 0x10, new C{ T="Float", N = "close danger level" }},
{ 0x14, new C{ T="Float", N = "open chance" }},
{ 0x18, new C{ T="Float", N = "peek chance" }},
{ 0x1C1235, new C{ T="Comment", N = "FIGHT TIMINGS" }},
{ 0x1C1236, new C{ T="Comment", N = "fight" }},
{ 0x1C, new C{ T="Float", N = "open time.min" }},
{ 0x20, new C{ T="Float", N = "open time.max" }},
{ 0x24, new C{ T="Float", N = "closed min time" }},
{ 0x28, new C{ T="Float", N = "close danger level" }},
{ 0x2C, new C{ T="Float", N = "open chance" }},
{ 0x30, new C{ T="Float", N = "peek chance" }},
{ 0x341237, new C{ T="Comment", N = "COVER TIMINGS" }},
{ 0x341238, new C{ T="Comment", N = "cover" }},
{ 0x34, new C{ T="Float", N = "open time.min" }},
{ 0x38, new C{ T="Float", N = "open time.max" }},
{ 0x3C, new C{ T="Float", N = "closed min time" }},
{ 0x40, new C{ T="Float", N = "close danger level" }},
{ 0x44, new C{ T="Float", N = "open chance" }},
{ 0x48, new C{ T="Float", N = "peek chance" }},
{ 0x4C1239, new C{ T="Comment", N = "GUARD TIMINGS" }},
{ 0x4C1240, new C{ T="Comment", N = "guard" }},
{ 0x4C, new C{ T="Float", N = "open time.min" }},
{ 0x50, new C{ T="Float", N = "open time.max" }},
{ 0x54, new C{ T="Float", N = "closed min time" }},
{ 0x58, new C{ T="Float", N = "close danger level" }},
{ 0x5C, new C{ T="Float", N = "open chance" }},
{ 0x60, new C{ T="Float", N = "peek chance" }},
}, S=100}},
{ 0x404, new C{ T="Tagblock", N = "shield wall properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "Raise Shield Delay" }},
{ 0x4, new C{ T="Float", N = "Relocate Delay" }},
{ 0x8, new C{ T="Float", N = "Max Leader Protect Distance" }},
{ 0xC1241, new C{ T="Comment", N = "Formation" }},
{ 0xC1242, new C{ T="Comment", N = "Formation Description" }},
{ 0xC1243, new C{ T="Comment", N = "Procedural" }},
{ 0xC, new EnumGroup { A=4, N="Shape", STR = new Dictionary<int, string>()
{
{0, "None" },
{1, "Line" },
{2, "Rectangle" },
{3, "Wedge" },
{4, "Circle" },
}}},
{ 0x10, new C{ T="Float", N = "Yaw" }},
{ 0x14, new C{ T="Float", N = "Spacing" }},
{ 0x18, new C{ T="4Byte", N = "Max Rectangle Width" }},
{ 0x1C1244, new C{ T="Comment", N = "Custom" }},
{ 0x1C, new C{ T="TagRef", N = "Formation Reference" }},
{ 0x381245, new C{ T="Comment", N = "Common" }},
{ 0x38, new C{ T="Float", N = "Max Speed" }},
{ 0x3C, new C{ T="Float", N = "Max Yaw Rate" }},
{ 0x401246, new C{ T="Comment", N = "" }},
}, S=64}},
{ 0x418, new C{ T="Tagblock", N = "firing wall properties", B = new Dictionary<long, C>
{
{ 0x01247, new C{ T="Comment", N = "Activation Chance" }},
{ 0x0, new C{ T="Float", N = "Activation Chance (easy)" }},
{ 0x4, new C{ T="Float", N = "Activation Chance (normal)" }},
{ 0x8, new C{ T="Float", N = "Activation Chance (heroic)" }},
{ 0xC, new C{ T="Float", N = "Activation Chance (legendary)" }},
{ 0x101248, new C{ T="Comment", N = "" }},
{ 0x10, new C{ T="Float", N = "Max Distance" }},
{ 0x14, new C{ T="4Byte", N = "Min Member Count" }},
{ 0x18, new C{ T="4Byte", N = "Max Member Count" }},
{ 0x1C, new C{ T="Float", N = "Fire Time.min" }},
{ 0x20, new C{ T="Float", N = "Fire Time.max" }},
{ 0x24, new C{ T="Float", N = "Cooldown" }},
{ 0x28, new C{ T="Float", N = "Warp In Time" }},
{ 0x2C, new C{ T="Float", N = "Min Arrival Time Variation" }},
{ 0x30, new C{ T="Float", N = "Max Arrival Time Variation" }},
{ 0x34, new C{ T="Float", N = "Warp Out Time" }},
{ 0x38, new C{ T="Float", N = "Min Departure Time Variation" }},
{ 0x3C, new C{ T="Float", N = "Max Departure Time Variation" }},
{ 0x40, new C{ T="Float", N = "Max Angle Between Formation and Target" }},
{ 0x441249, new C{ T="Comment", N = "Formation" }},
{ 0x441250, new C{ T="Comment", N = "Formation Description" }},
{ 0x441251, new C{ T="Comment", N = "Procedural" }},
{ 0x44, new EnumGroup { A=4, N="Shape", STR = new Dictionary<int, string>()
{
{0, "None" },
{1, "Line" },
{2, "Rectangle" },
{3, "Wedge" },
{4, "Circle" },
}}},
{ 0x48, new C{ T="Float", N = "Yaw" }},
{ 0x4C, new C{ T="Float", N = "Spacing" }},
{ 0x50, new C{ T="4Byte", N = "Max Rectangle Width" }},
{ 0x541252, new C{ T="Comment", N = "Custom" }},
{ 0x54, new C{ T="TagRef", N = "Formation Reference" }},
{ 0x701253, new C{ T="Comment", N = "Common" }},
{ 0x70, new C{ T="Float", N = "Max Speed" }},
{ 0x74, new C{ T="Float", N = "Max Yaw Rate" }},
{ 0x781254, new C{ T="Comment", N = "" }},
}, S=120}},
{ 0x42C, new C{ T="Tagblock", N = "Interpose Request Properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "Danger Level" }},
{ 0x4, new C{ T="Float", N = "Wait Time.min" }},
{ 0x8, new C{ T="Float", N = "Wait Time.max" }},
{ 0xC, new C{ T="Float", N = "Cooldown" }},
}, S=16}},
{ 0x440, new C{ T="Tagblock", N = "Interpose Properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "Protect Time.min" }},
{ 0x4, new C{ T="Float", N = "Protect Time.max" }},
{ 0x8, new C{ T="Float", N = "Distance from Protect" }},
{ 0xC, new C{ T="mmr3Hash", N = "Firing Style" }},
}, S=16}},
{ 0x454, new C{ T="Tagblock", N = "bounding properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "Max Wait Time" }},
{ 0x4, new C{ T="Float", N = "Advance Time" }},
{ 0x8, new C{ T="Float", N = "Reposition Search Range" }},
{ 0xC, new C{ T="Float", N = "Max Destination Age" }},
{ 0x10, new C{ T="Byte", N = "Max Cover Agents" }},
{ 0x11, new C{ T="Comment", N = "generated_pada6c0" }},
}, S=20}},
{ 0x468, new C{ T="Tagblock", N = "projectile deflection properties", B = new Dictionary<long, C>
{
{ 0x01255, new C{ T="Comment", N = "Deflection areas" }},
{ 0x0, new C{ T="Tagblock", N = "Target Areas", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "Time to Target Window.min" }},
{ 0x4, new C{ T="Float", N = "Time to Target Window.max" }},
{ 0x8, new C{ T="Float", N = "Target Offset.X" }},
{ 0xC, new C{ T="Float", N = "Target Offset.Y" }},
{ 0x10, new C{ T="Float", N = "Target Offset.Z" }},
{ 0x14, new C{ T="Float", N = "Target Radius" }},
{ 0x18, new C{ T="Float", N = "Max Incoming Angle" }},
{ 0x1C, new C{ T="mmr3Hash", N = "Animation Name" }},
}, S=32}},
}, S=20}},
{ 0x47C, new C{ T="Tagblock", N = "Bot Properties", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="movement flags", STR = new Dictionary<int, string>()
{
{0, "crouch" },
{1, "jump" },
{2, "evade" },
{3, "discard recent firing positions" },
}}},
{ 0x41256, new C{ T="Comment", N = "Bot info" }},
{ 0x4, new C{ T="Float", N = "crouch time" }},
{ 0x8, new C{ T="Float", N = "crouch Low shield threshold" }},
{ 0xC, new C{ T="Float", N = "jump chance" }},
{ 0x10, new C{ T="Float", N = "evade low shield threshold" }},
{ 0x14, new C{ T="Float", N = "strafing influence vector radius" }},
{ 0x18, new C{ T="Float", N = "strafing influence vector weight" }},
{ 0x1C, new C{ T="Float", N = "firing point refresh distance" }},
{ 0x20, new C{ T="Float", N = "influence rejection radius" }},
{ 0x24, new C{ T="Float", N = "movement cooldown min" }},
{ 0x28, new C{ T="Float", N = "movement cooldown max" }},
}, S=44}},
{ 0x490, new C{ T="Tagblock", N = "Evasive Fight Properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "Engage Fraction" }},
{ 0x4, new C{ T="Float", N = "Stationary Time.min" }},
{ 0x8, new C{ T="Float", N = "Stationary Time.max" }},
{ 0xC, new C{ T="Float", N = "Move Danger Threshold" }},
{ 0x10, new C{ T="Float", N = "Shield Threshold" }},
{ 0x14, new C{ T="Float", N = "Dive Cooldown" }},
{ 0x18, new C{ T="Float", N = "Dive Shield Threshold" }},
{ 0x1C, new C{ T="Float", N = "Dive Danger Threshold" }},
}, S=32}},
{ 0x4A4, new C{ T="Tagblock", N = "Aggressive Fight Properties", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=1, N="Flags", STR = new Dictionary<int, string>()
{
{0, "Ignore lower bound when target advancing" },
{1, "Face exactly" },
}}},
{ 0x1, new C{ T="Comment", N = "generated_padcd38" }},
{ 0x4, new C{ T="Float", N = "Engage Fraction" }},
{ 0x8, new C{ T="Float", N = "Stationary Time.min" }},
{ 0xC, new C{ T="Float", N = "Stationary Time.max" }},
{ 0x10, new C{ T="Float", N = "Move Danger Threshold" }},
{ 0x14, new C{ T="Float", N = "Max Speed Percent" }},
}, S=24}},
{ 0x4B8, new C{ T="Tagblock", N = "Linear Advance Fight Properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "Stationary Time.min" }},
{ 0x4, new C{ T="Float", N = "Stationary Time.max" }},
{ 0x8, new C{ T="Float", N = "Advance Distance" }},
}, S=12}},
{ 0x4CC, new C{ T="Tagblock", N = "Static Fight Properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "Stationary Time.min" }},
{ 0x4, new C{ T="Float", N = "Stationary Time.max" }},
{ 0x8, new C{ T="Float", N = "Danger Move Threshold" }},
}, S=12}},
{ 0x4E0, new C{ T="Tagblock", N = "Stand Ground Properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "Target Distance.min" }},
{ 0x4, new C{ T="Float", N = "Target Distance.max" }},
{ 0x8, new C{ T="Float", N = "Ally Distance" }},
{ 0xC, new C{ T="Float", N = "Ally Attacker Distance" }},
{ 0x10, new C{ T="Float", N = "Behavior Linger Time" }},
}, S=20}},
{ 0x4F4, new C{ T="Tagblock", N = "Grenade Fight Properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "Stationary Time.min" }},
{ 0x4, new C{ T="Float", N = "Stationary Time.max" }},
{ 0x8, new C{ T="Float", N = "Minimum Movement" }},
{ 0xC, new C{ T="Float", N = "Ideal Fraction" }},
}, S=16}},
{ 0x508, new C{ T="Tagblock", N = "Cover Sequence Properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "Shield Start Threshold" }},
{ 0x4, new C{ T="Float", N = "Shield End Threshold" }},
{ 0x8, new C{ T="Float", N = "Danger Start Threshold" }},
{ 0xC, new C{ T="Float", N = "Danger End Threshold" }},
{ 0x10, new C{ T="Float", N = "Minimum Hide Duration" }},
}, S=20}},
{ 0x51C, new C{ T="Tagblock", N = "Cover Move Properties", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="Flags", STR = new Dictionary<int, string>()
{
{0, "Dive to Cover" },
}}},
{ 0x4, new C{ T="Float", N = "Cover Failed Duration" }},
}, S=8}},
{ 0x530, new C{ T="Tagblock", N = "Cover Hide Properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "Minimum Hide Duration" }},
}, S=4}},
{ 0x544, new C{ T="Tagblock", N = "Long Range Attack Properties", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="Flags", STR = new Dictionary<int, string>()
{
{0, "Take potshots while running" },
{1, "Do not take cover" },
}}},
{ 0x4, new C{ T="Float", N = "Potshot duration" }},
{ 0x8, new C{ T="Float", N = "Peek duration" }},
{ 0xC, new C{ T="Float", N = "Time between potshots" }},
}, S=16}},
{ 0x558, new C{ T="Tagblock", N = "Hoist Attack Properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "Max Danger Threshold" }},
{ 0x4, new C{ T="Float", N = "Hoist Attack Chance" }},
}, S=8}},
{ 0x56C, new C{ T="Tagblock", N = "Hunker Down Properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "Danger Start Threshold" }},
{ 0x4, new C{ T="Float", N = "Distance Abort Threshold" }},
{ 0x8, new C{ T="Float", N = "Shield Health Threshold" }},
{ 0xC, new C{ T="Float", N = "Hunker Time.min" }},
{ 0x10, new C{ T="Float", N = "Hunker Time.max" }},
}, S=20}},
{ 0x580, new C{ T="Tagblock", N = "Shield Raise Properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "Danger Threshold" }},
}, S=4}},
{ 0x594, new C{ T="Tagblock", N = "Vehicle Aggressive Fight Properties", B = new Dictionary<long, C>
{
{ 0x01257, new C{ T="Comment", N = "Fight Properties" }},
{ 0x0, new C{ T="Float", N = "Engage Fraction" }},
{ 0x4, new C{ T="Float", N = "Max Speed Percent" }},
{ 0x8, new FlagGroup { A=4, N="Flags", STR = new Dictionary<int, string>()
{
{0, "Can Boost" },
}}},
{ 0xC, new C{ T="Float", N = "Max Danger to Boost" }},
}, S=16}},
{ 0x5A8, new C{ T="Tagblock", N = "Vehicle Defensive Fight Properties", B = new Dictionary<long, C>
{
{ 0x01258, new C{ T="Comment", N = "Fight Properties" }},
{ 0x0, new C{ T="Float", N = "Engage Fraction" }},
{ 0x4, new C{ T="Float", N = "Max Speed Percent" }},
}, S=8}},
{ 0x5BC, new C{ T="Tagblock", N = "engineer properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "death height" }},
{ 0x4, new C{ T="Float", N = "death rise time" }},
{ 0x8, new C{ T="Float", N = "death detonation time" }},
{ 0xC, new C{ T="Float", N = "shield boost radius max" }},
{ 0x10, new C{ T="Float", N = "shield boost period" }},
{ 0x14, new C{ T="mmr3Hash", N = "shield boost damage section name" }},
{ 0x181259, new C{ T="Comment", N = "Detonation Thresholds" }},
{ 0x18, new C{ T="Float", N = "detonation shield threshold" }},
{ 0x1C, new C{ T="Float", N = "detonation body vitality" }},
{ 0x20, new C{ T="Float", N = "proximity radius" }},
{ 0x24, new C{ T="Float", N = "proximity detonation chance" }},
{ 0x28, new C{ T="TagRef", N = "proximity equipment" }},
}, S=68}},
{ 0x5D0, new C{ T="Tagblock", N = "inspect properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "stop distance" }},
{ 0x4, new C{ T="Float", N = "inspect time.min" }},
{ 0x8, new C{ T="Float", N = "inspect time.max" }},
{ 0xC, new C{ T="Float", N = "search range.min" }},
{ 0x10, new C{ T="Float", N = "search range.max" }},
}, S=20}},
{ 0x5E4, new C{ T="Tagblock", N = "vehicle entrance properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "Max Distance From Actor" }},
{ 0x4, new C{ T="Float", N = "Minimum Distance From Player" }},
{ 0x8, new C{ T="Float", N = "Minimum Distance From Vehicle" }},
{ 0xC, new C{ T="Float", N = "Perceived Danger Threshold" }},
{ 0x101260, new C{ T="Comment", N = "Total Health Percentage" }},
{ 0x10, new C{ T="Float", N = "Minimum Health to Enter" }},
{ 0x14, new C{ T="Float", N = "Health Percentage to Exit" }},
{ 0x181261, new C{ T="Comment", N = "Remaining Damage Sections Percentage" }},
{ 0x18, new C{ T="Float", N = "Threshold to Enter" }},
{ 0x1C, new C{ T="Float", N = "Threshold to Exit" }},
{ 0x20, new C{ T="Float", N = "Chance To Exit Vehicle" }},
{ 0x24, new C{ T="Float", N = "Vehicle Exit Impulse Timer" }},
}, S=40}},
{ 0x5F8, new C{ T="Tagblock", N = "test-only weapons properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "weapon" }},
{ 0x1C1262, new C{ T="Comment", N = "Weapon drop when killed" }},
{ 0x1C, new C{ T="Float", N = "drop weapon loaded.min" }},
{ 0x20, new C{ T="Float", N = "drop weapon loaded.max" }},
{ 0x24, new C{ T="Unmapped", N = "drop weapon ammo" }},
{ 0x28, new C{ T="TagRef", N = "weapon melee damage" }},
{ 0x441263, new C{ T="Comment", N = "Accuracy" }},
{ 0x44, new C{ T="Float", N = "normal accuracy bounds.min" }},
{ 0x48, new C{ T="Float", N = "normal accuracy bounds.max" }},
{ 0x4C, new C{ T="Float", N = "normal accuracy time" }},
{ 0x50, new C{ T="Float", N = "heroic accuracy bounds.min" }},
{ 0x54, new C{ T="Float", N = "heroic accuracy bounds.max" }},
{ 0x58, new C{ T="Float", N = "heroic accuracy time" }},
{ 0x5C, new C{ T="Float", N = "legendary accuracy bounds.min" }},
{ 0x60, new C{ T="Float", N = "legendary accuracy bounds.max" }},
{ 0x64, new C{ T="Float", N = "legendary accuracy time" }},
{ 0x68, new C{ T="Tagblock", N = "weapon preferences", B = new Dictionary<long, C>
{
{ 0x0, new EnumGroup { A=1, N="Tier Category", STR = new Dictionary<int, string>()
{
{0, "Low" },
{1, "Medium" },
{2, "High" },
}}},
{ 0x1, new C{ T="Comment", N = "generated_padb31f" }},
{ 0x4, new C{ T="4Byte", N = "Weight" }},
{ 0x8, new C{ T="4Byte", N = "Multi-Tier Multiplier" }},
}, S=12}},
{ 0x7C, new C{ T="Tagblock", N = "weapon modes", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "mode name" }},
{ 0x4, new FlagGroup { A=4, N="weapons flags", STR = new Dictionary<int, string>()
{
{0, "bursting inhibits movement" },
{1, "must crouch to shoot" },
{2, "use extended safe-to-save range" },
{3, "fixed aiming vector" },
{4, "aim at feet" },
{5, "force aim from barrel position" },
{6, "Favor for long range" },
{7, "Favor for close range" },
{8, "Favor Against Vehicles " },
{9, "Favored Special Weapon (Class Specific weapon marker)" },
{10, "bursting inhibits evasion" },
{11, "aim at head" },
{12, "vehicle disabling" },
{13, "Override Mode" },
{14, "Force aim down sight(ADS) AutoCharge" },
{15, "Do not use pre-fire tell" },
{16, "Preparing to fire inhibits movement" },
{17, "Ignore splash damage" },
{18, "Shoot at last seen position" },
{19, "Aim before firing" },
{20, "Face aim exactly" },
}}},
{ 0x81264, new C{ T="Comment", N = "Combat ranges" }},
{ 0x8, new C{ T="Float", N = "maximum firing range" }},
{ 0xC, new C{ T="Float", N = "minimum firing range" }},
{ 0x10, new C{ T="Float", N = "normal combat range.min" }},
{ 0x14, new C{ T="Float", N = "normal combat range.max" }},
{ 0x18, new C{ T="Float", N = "bombardment range" }},
{ 0x1C, new C{ T="Float", N = "Max special target distance" }},
{ 0x20, new C{ T="Float", N = "Max extreme target distance" }},
{ 0x24, new EnumGroup { A=1, N="Lower bound option", STR = new Dictionary<int, string>()
{
{0, "Fixed" },
{1, "Ignore aggressively" },
{2, "Ignore when firing" },
{3, "Ignore when target advancing" },
}}},
{ 0x25, new C{ T="Comment", N = "generated_pad6ff4" }},
{ 0x281265, new C{ T="Comment", N = "Ballistic Firing" }},
{ 0x28, new C{ T="Float", N = "Ballistic firing bounds.min" }},
{ 0x2C, new C{ T="Float", N = "Ballistic firing bounds.max" }},
{ 0x30, new C{ T="Float", N = "Ballistic fraction bounds.min" }},
{ 0x34, new C{ T="Float", N = "Ballistic fraction bounds.max" }},
{ 0x381266, new C{ T="Comment", N = "Use Preferences" }},
{ 0x38, new C{ T="Float", N = "Favored Ranges.X" }},
{ 0x3C, new C{ T="Float", N = "Favored Ranges.Y" }},
{ 0x40, new C{ T="Float", N = "Favored Ranges.Z" }},
{ 0x44, new C{ T="Float", N = "Range Ratings.X" }},
{ 0x48, new C{ T="Float", N = "Range Ratings.Y" }},
{ 0x4C, new C{ T="Float", N = "Range Ratings.Z" }},
{ 0x50, new C{ T="Float", N = "anti-vehicle rating " }},
{ 0x54, new C{ T="Float", N = "Scariness Threshold" }},
{ 0x581267, new C{ T="Comment", N = "Behavior" }},
{ 0x58, new C{ T="Float", N = "first burst delay time.min" }},
{ 0x5C, new C{ T="Float", N = "first burst delay time.max" }},
{ 0x60, new C{ T="Float", N = "death fire-wildly chance" }},
{ 0x64, new C{ T="Float", N = "death fire-wildly time" }},
{ 0x68, new C{ T="Float", N = "heat vent min percent" }},
{ 0x6C, new C{ T="Float", N = "ammo reload min percent" }},
{ 0x70, new C{ T="Float", N = "reload chance if not empty" }},
{ 0x74, new C{ T="Float", N = "heat vent cooldown" }},
{ 0x78, new C{ T="Float", N = "custom stand gun offset.X" }},
{ 0x7C, new C{ T="Float", N = "custom stand gun offset.Y" }},
{ 0x80, new C{ T="Float", N = "custom stand gun offset.Z" }},
{ 0x84, new C{ T="Float", N = "custom crouch gun offset.X" }},
{ 0x88, new C{ T="Float", N = "custom crouch gun offset.Y" }},
{ 0x8C, new C{ T="Float", N = "custom crouch gun offset.Z" }},
{ 0x90, new C{ T="4Byte", N = "Blocked Shot Count" }},
{ 0x94, new C{ T="Float", N = "Max Pre-Fire Time (Normal)" }},
{ 0x98, new C{ T="Float", N = "Max Pre-Fire Time (Heroic)" }},
{ 0x9C, new C{ T="Float", N = "Max Pre-Fire Time (Legendary)" }},
{ 0xA0, new C{ T="Tagblock", N = "selection properties", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="Initiators", STR = new Dictionary<int, string>()
{
{0, "Target Biped" },
{1, "Target Vehicle" },
{2, "Target Cluster" },
{3, "Self Berserk" },
{4, "Self Healing" },
{5, "Vehicle Aggressive" },
{6, "Vehicle Defensive" },
{7, "Hunker" },
}}},
{ 0x4, new FlagGroup { A=4, N="Required Conditions", STR = new Dictionary<int, string>()
{
{0, "Target Not Player On Foot" },
{1, "Target Flying" },
{2, "Target on Ground" },
{3, "Target Visible" },
{4, "Target Out of Sight" },
{5, "Actor wants to heal" },
}}},
{ 0x8, new C{ T="Float", N = "Cluster Radius" }},
{ 0xC, new C{ T="4Byte", N = "Min Cluster Count" }},
{ 0x10, new C{ T="Float", N = "Target Range Bounds.min" }},
{ 0x14, new C{ T="Float", N = "Target Range Bounds.max" }},
{ 0x18, new C{ T="Float", N = "Danger Bounds.min" }},
{ 0x1C, new C{ T="Float", N = "Danger Bounds.max" }},
{ 0x20, new C{ T="Float", N = "Activation Chance" }},
{ 0x24, new C{ T="Float", N = "Activation Check Delay" }},
{ 0x28, new C{ T="Float", N = "Projectile Error" }},
{ 0x2C, new C{ T="Float", N = "Lifetime.min" }},
{ 0x30, new C{ T="Float", N = "Lifetime.max" }},
{ 0x34, new C{ T="4Byte", N = "Max Burst Count" }},
{ 0x38, new EnumGroup { A=1, N="Trigger Behavior", STR = new Dictionary<int, string>()
{
{0, "Primary" },
{1, "Secondary" },
{2, "Overcharge" },
{3, "Disabled" },
}}},
{ 0x39, new C{ T="Comment", N = "generated_padabe7" }},
}, S=60}},
{ 0xB4, new EnumGroup { A=1, N="Threat Level", STR = new Dictionary<int, string>()
{
{0, "Low" },
{1, "High" },
}}},
{ 0xB5, new C{ T="Comment", N = "generated_pad89d5" }},
{ 0xB8, new C{ T="Float", N = "Effectiveness Token Close Player Distance" }},
{ 0xBC, new C{ T="Tagblock", N = "Firing Program", B = new Dictionary<long, C>
{
{ 0x01268, new C{ T="Comment", N = "Precision" }},
{ 0x01269, new C{ T="Comment", N = "Target Position" }},
{ 0x0, new C{ T="Unmapped", N = "Tracking" }},
{ 0x4, new C{ T="Float", N = "Matching Fraction.min" }},
{ 0x8, new C{ T="Float", N = "Matching Fraction.max" }},
{ 0xC, new C{ T="Float", N = "Matching Spring Force.min" }},
{ 0x10, new C{ T="Float", N = "Matching Spring Force.max" }},
{ 0x14, new C{ T="Unmapped", N = "Leading" }},
{ 0x181270, new C{ T="Comment", N = "" }},
{ 0x181271, new C{ T="Comment", N = "Aiming Error" }},
{ 0x18, new C{ T="Float", N = "Error Distance.min" }},
{ 0x1C, new C{ T="Float", N = "Error Distance.max" }},
{ 0x20, new C{ T="Float", N = "Error Angle.min" }},
{ 0x24, new C{ T="Float", N = "Error Angle.max" }},
{ 0x28, new C{ T="Float", N = "Error Max Angle.min" }},
{ 0x2C, new C{ T="Float", N = "Error Max Angle.max" }},
{ 0x301272, new C{ T="Comment", N = "" }},
{ 0x301273, new C{ T="Comment", N = "Linear Burst Geo." }},
{ 0x30, new EnumGroup { A=1, N="Burst Line Style", STR = new Dictionary<int, string>()
{
{0, "Mirror" },
{1, "No Mirror" },
{2, "Fixed" },
}}},
{ 0x31, new C{ T="Comment", N = "generated_paddb86" }},
{ 0x34, new C{ T="Float", N = "Burst Line Angle.min" }},
{ 0x38, new C{ T="Float", N = "Burst Line Angle.max" }},
{ 0x3C, new C{ T="Float", N = "Burst Origin Radius.min" }},
{ 0x40, new C{ T="Float", N = "Burst Origin Radius.max" }},
{ 0x44, new C{ T="Float", N = "Burst Origin Angle.min" }},
{ 0x48, new C{ T="Float", N = "Burst Origin Angle.max" }},
{ 0x4C, new C{ T="Float", N = "Burst Return Length Min.min" }},
{ 0x50, new C{ T="Float", N = "Burst Return Length Min.max" }},
{ 0x54, new C{ T="Float", N = "Burst Return Length Max.min" }},
{ 0x58, new C{ T="Float", N = "Burst Return Length Max.max" }},
{ 0x5C, new C{ T="Float", N = "Burst Return Angle.min" }},
{ 0x60, new C{ T="Float", N = "Burst Return Angle.max" }},
{ 0x64, new C{ T="Float", N = "Burst Maximum Angular Vel..min" }},
{ 0x68, new C{ T="Float", N = "Burst Maximum Angular Vel..max" }},
{ 0x6C, new C{ T="Float", N = "Burst Maximum Error Angle.min" }},
{ 0x70, new C{ T="Float", N = "Burst Maximum Error Angle.max" }},
{ 0x741274, new C{ T="Comment", N = "" }},
{ 0x741275, new C{ T="Comment", N = "Hostility" }},
{ 0x74, new C{ T="Float", N = "Rate of Fire.min" }},
{ 0x78, new C{ T="Float", N = "Rate of Fire.max" }},
{ 0x7C, new C{ T="Float", N = "Weapon Damage Mod..min" }},
{ 0x80, new C{ T="Float", N = "Weapon Damage Mod..max" }},
{ 0x841276, new C{ T="Comment", N = "Burst Pattern" }},
{ 0x84, new C{ T="Float", N = "Duration Min.min" }},
{ 0x88, new C{ T="Float", N = "Duration Min.max" }},
{ 0x8C, new C{ T="Float", N = "Duration Max.min" }},
{ 0x90, new C{ T="Float", N = "Duration Max.max" }},
{ 0x94, new C{ T="Float", N = "Separation Min.min" }},
{ 0x98, new C{ T="Float", N = "Separation Min.max" }},
{ 0x9C, new C{ T="Float", N = "Separation Max.min" }},
{ 0xA0, new C{ T="Float", N = "Separation Max.max" }},
{ 0xA41277, new C{ T="Comment", N = "" }},
{ 0xA41278, new C{ T="Comment", N = "Burst Noise" }},
{ 0xA4, new C{ T="Unmapped", N = "Amount" }},
{ 0xA8, new C{ T="Float", N = "Min Period.min" }},
{ 0xAC, new C{ T="Float", N = "Min Period.max" }},
{ 0xB0, new C{ T="Float", N = "Max Period.min" }},
{ 0xB4, new C{ T="Float", N = "Max Period.max" }},
{ 0xB81279, new C{ T="Comment", N = "" }},
}, S=184}},
{ 0xD01280, new C{ T="Comment", N = "Unit Target Preference" }},
{ 0xD0, new C{ T="Tagblock", N = "Unit Target Preference", B = new Dictionary<long, C>
{
{ 0x0, new EnumGroup { A=1, N="Category", STR = new Dictionary<int, string>()
{
{0, "Chassis" },
{1, "Traversal" },
{2, "Engine" },
{3, "Cover" },
{4, "Weapon" },
{5, "Occupant" },
}}},
{ 0x1, new C{ T="Comment", N = "generated_pad0052" }},
{ 0x4, new C{ T="Float", N = "Preference" }},
{ 0x81281, new C{ T="Comment", N = "Vehicle Velocity Targeting Prefernces" }},
{ 0x8, new C{ T="Tagblock", N = "Vehicle Velocity Based Targeting", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "Vehicle Velocity Override Preference" }},
{ 0x4, new C{ T="Float", N = "Velocity Threshold" }},
}, S=8}},
}, S=28}},
{ 0xE4, new C{ T="Tagblock", N = "Prefire Beam", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "initial error angle" }},
{ 0x41282, new C{ T="Comment", N = "Radius Decay" }},
{ 0x41283, new C{ T="Comment", N = "radius decay function" }},
{ 0x41284, new C{ T="Comment", N = "radius decay function" }},
{ 0x41285, new C{ T="Comment", N = "" }},
{ 0x4, new C{ T="Unmapped", N = "data" }},
{ 0x1C1286, new C{ T="Comment", N = "" }},
{ 0x1C1287, new C{ T="Comment", N = "Beam Spin" }},
{ 0x1C1288, new C{ T="Comment", N = "beam spin function" }},
{ 0x1C1289, new C{ T="Comment", N = "beam spin function" }},
{ 0x1C1290, new C{ T="Comment", N = "" }},
{ 0x1C, new C{ T="Unmapped", N = "data" }},
{ 0x341291, new C{ T="Comment", N = "" }},
{ 0x34, new C{ T="TagRef", N = "beam effect" }},
{ 0x50, new C{ T="TagRef", N = "full screen effect" }},
{ 0x6C1292, new C{ T="Comment", N = "Marker overrides" }},
{ 0x6C, new C{ T="mmr3Hash", N = "start marker" }},
{ 0x70, new C{ T="mmr3Hash", N = "fallback marker" }},
}, S=116}},
}, S=248}},
}, S=144}},
{ 0x60C, new C{ T="Tagblock", N = "firing styles", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "style name" }},
{ 0x4, new C{ T="Float", N = "precision" }},
{ 0x8, new C{ T="Float", N = "hostility" }},
{ 0xC, new C{ T="Unmapped", N = "Precision Range" }},
{ 0x10, new C{ T="Unmapped", N = "Hostility Range" }},
}, S=20}},
{ 0x620, new C{ T="Tagblock", N = "grenades properties", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="grenades flags", STR = new Dictionary<int, string>()
{
{0, "do not throw while bunkering" },
{1, "allow while berserking" },
}}},
{ 0x4, new EnumGroup { A=1, N="grenade type", STR = new Dictionary<int, string>()
{
{0, "none" },
{1, "fragmentation grenade" },
{2, "plasma grenade" },
{3, "lightning grenade" },
{4, "spike grenade" },
{5, "sapper grenade" },
{6, "stasis grenade" },
}}},
{ 0x5, new C{ T="Byte", N = "generated_padcce0" }},
{ 0x6, new EnumGroup { A=2, N="trajectory type", STR = new Dictionary<int, string>()
{
{0, "toss" },
{1, "lob" },
{2, "bounce" },
}}},
{ 0x8, new C{ T="2Byte", N = "minimum enemy count" }},
{ 0xA, new C{ T="2Byte", N = "generated_pade6c1" }},
{ 0xC, new C{ T="Float", N = "enemy radius" }},
{ 0x101293, new C{ T="Comment", N = "throw error" }},
{ 0x10, new C{ T="Float", N = "throw error (easy)" }},
{ 0x14, new C{ T="Float", N = "throw error (normal)" }},
{ 0x18, new C{ T="Float", N = "throw error (heroic)" }},
{ 0x1C, new C{ T="Float", N = "throw error (legendary)" }},
{ 0x201294, new C{ T="Comment", N = "" }},
{ 0x201295, new C{ T="Comment", N = "Damage Modifier" }},
{ 0x20, new C{ T="Float", N = "Damage Modifier (easy)" }},
{ 0x24, new C{ T="Float", N = "Damage Modifier (normal)" }},
{ 0x28, new C{ T="Float", N = "Damage Modifier (heroic)" }},
{ 0x2C, new C{ T="Float", N = "Damage Modifier (legendary)" }},
{ 0x301296, new C{ T="Comment", N = "" }},
{ 0x30, new C{ T="Float", N = "grenade ideal velocity" }},
{ 0x34, new C{ T="Float", N = "grenade velocity" }},
{ 0x38, new C{ T="Float", N = "grenade ranges.min" }},
{ 0x3C, new C{ T="Float", N = "grenade ranges.max" }},
{ 0x40, new C{ T="Float", N = "collateral damage radius" }},
{ 0x44, new C{ T="Float", N = "grenade chance" }},
{ 0x48, new C{ T="Float", N = "Active Shield Modifier" }},
{ 0x4C, new C{ T="Float", N = "grenade throw delay" }},
{ 0x50, new C{ T="Float", N = "Global grenade delay" }},
{ 0x54, new C{ T="Float", N = "grenade uncover chance" }},
{ 0x58, new C{ T="Float", N = "anti-vehicle grenade chance" }},
{ 0x5C1297, new C{ T="Comment", N = "Grenade drop when killed" }},
{ 0x5C, new C{ T="Unmapped", N = "grenade count" }},
{ 0x60, new C{ T="Float", N = "dont drop grenades chance" }},
}, S=100}},
{ 0x634, new C{ T="Tagblock", N = "vehicle properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "unit" }},
{ 0x1C, new C{ T="TagRef", N = "style" }},
{ 0x38, new C{ T="TagRef", N = "Behavior Tree" }},
{ 0x54, new C{ T="TagRef", N = "Nondriver Behavior Tree" }},
{ 0x701298, new C{ T="Comment", N = "Flying Avoidance" }},
{ 0x70, new C{ T="Float", N = "lookahead_time" }},
{ 0x74, new C{ T="Float", N = "roll change magnitude" }},
{ 0x78, new C{ T="Float", N = "roll decay multiplier" }},
{ 0x7C, new C{ T="Float", N = "throttle grace period" }},
{ 0x80, new C{ T="Float", N = "minimum throttle" }},
{ 0x841299, new C{ T="Comment", N = "Vehicle flags" }},
{ 0x84, new FlagGroup { A=4, N="vehicle flags", STR = new Dictionary<int, string>()
{
{0, "passengers adopt original squad" },
{1, "snap facing to forward (ghosts)" },
{2, "throttle to target (hornets)" },
{3, "stationary fight (tanks)" },
{4, "keep moving" },
{5, "can pathfind with avoidance only" },
{6, "use volume avoidance" },
{7, "target equality" },
{8, "don't face target" },
{9, "override aiming limits" },
}}},
{ 0x881300, new C{ T="Comment", N = "Hover Perturbation New" }},
{ 0x88, new C{ T="Float", N = "hover deceleration distance" }},
{ 0x8C, new C{ T="Float", N = "hover offset distance" }},
{ 0x901301, new C{ T="Comment", N = "Hover Perturbation Fallback" }},
{ 0x90, new C{ T="Float", N = "hover allow perturbation speed" }},
{ 0x94, new C{ T="Float", N = "hover random x-axis period" }},
{ 0x98, new C{ T="Float", N = "hover random y-axis period" }},
{ 0x9C, new C{ T="Float", N = "hover random z-axis period" }},
{ 0xA0, new C{ T="Float", N = "hover random radius" }},
{ 0xA4, new C{ T="Float", N = "hover anchor approach speed limit" }},
{ 0xA8, new C{ T="Float", N = "hover anchor throttle scale distance.min" }},
{ 0xAC, new C{ T="Float", N = "hover anchor throttle scale distance.max" }},
{ 0xB0, new C{ T="Float", N = "hover anchor xy-throttle scale.min" }},
{ 0xB4, new C{ T="Float", N = "hover anchor xy-throttle scale.max" }},
{ 0xB8, new C{ T="Float", N = "hover anchor z-throttle scale.min" }},
{ 0xBC, new C{ T="Float", N = "hover anchor z-throttle scale.max" }},
{ 0xC0, new C{ T="Float", N = "hover throttle min z" }},
{ 0xC41302, new C{ T="Comment", N = "Pathfinding" }},
{ 0xC4, new C{ T="Float", N = "ai pathfinding radius" }},
{ 0xC8, new C{ T="Float", N = "ai avoidance radius" }},
{ 0xCC, new C{ T="Float", N = "ai destination radius" }},
{ 0xD0, new C{ T="Float", N = "ai deceleration distance" }},
{ 0xD4, new C{ T="Float", N = "roughly, the time it would take this vehicle to stop; default is 2 seconds" }},
{ 0xD81303, new C{ T="Comment", N = "Turning" }},
{ 0xD8, new C{ T="Float", N = "ai turning radius" }},
{ 0xDC1304, new C{ T="Comment", N = "Steering" }},
{ 0xDC, new C{ T="Float", N = "ai banshee steering maximum" }},
{ 0xE0, new C{ T="Float", N = "ai max steering angle" }},
{ 0xE4, new C{ T="Float", N = "ai max steering delta" }},
{ 0xE8, new C{ T="Float", N = "ai oversteering scale" }},
{ 0xEC, new C{ T="Float", N = "ai sideslip distance (combat)" }},
{ 0xF0, new C{ T="Float", N = "ai sideslip distance (non-combat)" }},
{ 0xF4, new C{ T="Float", N = "ai avoidance distance" }},
{ 0xF8, new C{ T="Float", N = "ai min urgency" }},
{ 0xFC, new C{ T="Float", N = "destination behind angle" }},
{ 0x100, new C{ T="Float", N = "skid scale" }},
{ 0x104, new C{ T="Float", N = "aiming velocity maximum" }},
{ 0x108, new C{ T="Float", N = "aiming acceleration maximum" }},
{ 0x10C1305, new C{ T="Comment", N = "Throttle" }},
{ 0x10C, new C{ T="Float", N = "ai throttle maximum" }},
{ 0x110, new C{ T="Float", N = "ai reverse throttle maximum" }},
{ 0x114, new C{ T="Float", N = "ai goal min throttle scale" }},
{ 0x118, new C{ T="Float", N = "ai turn min throttle scale" }},
{ 0x11C, new C{ T="Float", N = "ai direction min throttle scale" }},
{ 0x120, new C{ T="Float", N = "ai skid min throttle scale" }},
{ 0x124, new C{ T="Float", N = "skid attentuation max angle" }},
{ 0x128, new C{ T="Float", N = "ai acceleration scale" }},
{ 0x12C, new C{ T="Float", N = "ai throttle blend" }},
{ 0x130, new C{ T="Float", N = "theoretical max speed" }},
{ 0x134, new C{ T="Float", N = "error scale" }},
{ 0x138, new C{ T="Float", N = "Throttle Ramp Step" }},
{ 0x13C1306, new C{ T="Comment", N = "Speed" }},
{ 0x13C, new C{ T="Float", N = "Target Speed" }},
{ 0x1401307, new C{ T="Comment", N = "Boost For Locomotion - Directional Ground Vehicles" }},
{ 0x140, new C{ T="Float", N = "ai boost forward facing angle" }},
{ 0x144, new C{ T="Float", N = "ai min throttle to boost" }},
{ 0x1481308, new C{ T="Comment", N = "Combat" }},
{ 0x148, new C{ T="Float", N = "ai allowable aim deviation angle" }},
{ 0x14C, new C{ T="Float", N = "Melee Cooldown" }},
{ 0x1501309, new C{ T="Comment", N = "Behavior" }},
{ 0x150, new C{ T="Float", N = "ai charge tight angle distance" }},
{ 0x154, new C{ T="Float", N = "ai charge tight angle" }},
{ 0x158, new C{ T="Float", N = "ai charge repeat timeout" }},
{ 0x15C, new C{ T="Float", N = "ai charge look-ahead time" }},
{ 0x160, new C{ T="Float", N = "ai charge consider distance" }},
{ 0x164, new C{ T="Float", N = "ai charge abort distance" }},
{ 0x168, new C{ T="Float", N = "ai charge abort close distance" }},
{ 0x16C, new C{ T="Float", N = "ai charge max out of area distance" }},
{ 0x170, new C{ T="Float", N = "vehicle ram timeout" }},
{ 0x174, new C{ T="Float", N = "ram paralysis time" }},
{ 0x178, new C{ T="Float", N = "ai cover damage threshold" }},
{ 0x17C, new C{ T="Float", N = "ai cover shield damage threshold" }},
{ 0x180, new C{ T="Float", N = "ai cover min distance" }},
{ 0x184, new C{ T="Float", N = "ai cover time" }},
{ 0x188, new C{ T="Float", N = "ai cover min boost distance" }},
{ 0x18C, new C{ T="Float", N = "turtling recent damage threshold" }},
{ 0x190, new C{ T="Float", N = "turtling min time" }},
{ 0x194, new C{ T="Float", N = "turtling timeout" }},
{ 0x198, new C{ T="Tagblock", N = "Vehicle Strafing Properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "strafe min distance" }},
{ 0x4, new C{ T="Float", N = "strafe abort distance" }},
{ 0x8, new C{ T="Float", N = "defensive strafe abort distance" }},
}, S=12}},
{ 0x1AC, new C{ T="Tagblock", N = "Vehicle Flying Holding Pattern Properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "holding pattern elevation" }},
{ 0x4, new C{ T="Float", N = "holding pattern speed percentage" }},
{ 0x8, new C{ T="Float", N = "holding pattern radius" }},
{ 0xC, new C{ T="Float", N = "max turn angle percentage" }},
}, S=16}},
{ 0x1C0, new C{ T="Tagblock", N = "Vehicle Flying Preengage Properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "pre engage time.min" }},
{ 0x4, new C{ T="Float", N = "pre engage time.max" }},
{ 0x8, new C{ T="Float", N = "pre engage elevation" }},
{ 0xC, new C{ T="Float", N = "pre engage radius" }},
}, S=16}},
{ 0x1D4, new C{ T="Tagblock", N = "Vehicle Flying Suppressed Properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "suppressed time.min" }},
{ 0x4, new C{ T="Float", N = "suppressed time.max" }},
{ 0x8, new C{ T="Float", N = "suppressed damage threshold" }},
{ 0xC, new C{ T="Float", N = "suppressed retreat distance" }},
{ 0x10, new C{ T="Float", N = "suppressed elevation" }},
{ 0x14, new C{ T="Float", N = "suppressed radius" }},
}, S=24}},
{ 0x1E8, new C{ T="Tagblock", N = "Vehicle Flying Aggressive Engage Properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Unmapped", N = "aggressive loops" }},
}, S=4}},
{ 0x1FC, new C{ T="Tagblock", N = "Vehicle Flying Defensive Engage Properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "defensive time.min" }},
{ 0x4, new C{ T="Float", N = "defensive time.max" }},
}, S=8}},
{ 0x210, new C{ T="Tagblock", N = "Vehicle Flying Fallback Properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "combat elevation.min" }},
{ 0x4, new C{ T="Float", N = "combat elevation.max" }},
{ 0x8, new C{ T="Float", N = "fallback minimum distance" }},
{ 0xC, new C{ T="Float", N = "flyby distance" }},
}, S=16}},
{ 0x224, new EnumGroup { A=2, N="obstacle ignore size", STR = new Dictionary<int, string>()
{
{0, "default" },
{1, "tiny" },
{2, "small" },
{3, "medium" },
{4, "large" },
{5, "immobile" },
}}},
{ 0x226, new C{ T="2Byte", N = "generated_pad354a" }},
}, S=552}},
{ 0x648, new C{ T="Tagblock", N = "flying movement properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "vehicle" }},
{ 0x1C1310, new C{ T="Comment", N = "Default Values" }},
{ 0x1C1311, new C{ T="Comment", N = "Vector Weights" }},
{ 0x1C, new C{ T="Float", N = "facing" }},
{ 0x20, new C{ T="Float", N = "perturbation" }},
{ 0x24, new C{ T="Float", N = "volume avoidance" }},
{ 0x28, new C{ T="Float", N = "volume perturbation" }},
{ 0x2C, new C{ T="Float", N = "volume cover" }},
{ 0x30, new C{ T="Float", N = "flocking" }},
{ 0x34, new C{ T="Float", N = "target" }},
{ 0x38, new C{ T="Float", N = "target tail" }},
{ 0x3C1312, new C{ T="Comment", N = "Area Selection" }},
{ 0x3C, new C{ T="Float", N = "area reselect time.min" }},
{ 0x40, new C{ T="Float", N = "area reselect time.max" }},
{ 0x441313, new C{ T="Comment", N = "Idle" }},
{ 0x44, new C{ T="Float", N = "idle time.min" }},
{ 0x48, new C{ T="Float", N = "idle time.max" }},
{ 0x4C1314, new C{ T="Comment", N = "Cover" }},
{ 0x4C, new C{ T="Float", N = "unsafe cover reselect time.min" }},
{ 0x50, new C{ T="Float", N = "unsafe cover reselect time.max" }},
{ 0x54, new C{ T="Float", N = "cover heading reselect time.min" }},
{ 0x58, new C{ T="Float", N = "cover heading reselect time.max" }},
{ 0x5C, new C{ T="Float", N = "max cover search distance" }},
{ 0x60, new C{ T="Float", N = "max cover impulse distance" }},
{ 0x64, new C{ T="Float", N = "spline cooldown time.min" }},
{ 0x68, new C{ T="Float", N = "spline cooldown time.max" }},
{ 0x6C1315, new C{ T="Comment", N = "Volume Avoidance" }},
{ 0x6C, new C{ T="Float", N = "volume influence distance" }},
{ 0x70, new C{ T="Float", N = "volume perturbation phase" }},
{ 0x74, new C{ T="Float", N = "volume bounding distance" }},
{ 0x781316, new C{ T="Comment", N = "Approach" }},
{ 0x78, new C{ T="Float", N = "volume approach distance" }},
{ 0x7C, new C{ T="Float", N = "volume break off distance" }},
{ 0x80, new C{ T="Float", N = "minimum approach distance" }},
{ 0x84, new C{ T="Float", N = "collision avoidance range.min" }},
{ 0x88, new C{ T="Float", N = "collision avoidance range.max" }},
{ 0x8C1317, new C{ T="Comment", N = "Evasion" }},
{ 0x8C, new C{ T="Float", N = "evade time.min" }},
{ 0x90, new C{ T="Float", N = "evade time.max" }},
{ 0x94, new C{ T="Float", N = "evade body damage threshold" }},
{ 0x98, new C{ T="Float", N = "evade shield damage threshold" }},
{ 0x9C, new C{ T="Float", N = "bogey retreat time" }},
{ 0xA0, new C{ T="Float", N = "bogey retreat distance" }},
{ 0xA41318, new C{ T="Comment", N = "Flocking" }},
{ 0xA4, new C{ T="Float", N = "flock radius.min" }},
{ 0xA8, new C{ T="Float", N = "flock radius.max" }},
{ 0xAC, new C{ T="Float", N = "forward follow angle" }},
{ 0xB0, new C{ T="Float", N = "behind follow angle" }},
{ 0xB41319, new C{ T="Comment", N = "Tailing" }},
{ 0xB4, new C{ T="Float", N = "min tailing time" }},
{ 0xB8, new C{ T="Float", N = "tailing radius.min" }},
{ 0xBC, new C{ T="Float", N = "tailing radius.max" }},
{ 0xC0, new C{ T="Float", N = "tailing cone angle" }},
{ 0xC41320, new C{ T="Comment", N = "Strafing" }},
{ 0xC4, new C{ T="Float", N = "volume strafe distance" }},
{ 0xC8, new C{ T="Float", N = "strafe min distance" }},
{ 0xCC, new C{ T="Float", N = "strafe above distance" }},
{ 0xD0, new C{ T="Float", N = "strafe abort distance" }},
{ 0xD4, new C{ T="Float", N = "strafe timeout" }},
{ 0xD81321, new C{ T="Comment", N = "Attitude Control" }},
{ 0xD8, new C{ T="Float", N = "max descend angle" }},
{ 0xDC, new C{ T="Float", N = "max ascend angle" }},
{ 0xE01322, new C{ T="Comment", N = "Shooting" }},
{ 0xE0, new C{ T="Float", N = "shooting cone angle" }},
{ 0xE41323, new C{ T="Comment", N = "Evasive Maneuvers" }},
{ 0xE4, new C{ T="Float", N = "missile dodge change" }},
{ 0xE8, new C{ T="Float", N = "ideal missile dodge distance" }},
{ 0xEC, new C{ T="Float", N = "Dodge Timeout.min" }},
{ 0xF0, new C{ T="Float", N = "Dodge Timeout.max" }},
}, S=244}},
{ 0x65C, new C{ T="Tagblock", N = "equipment definitions", B = new Dictionary<long, C>
{
{ 0x01324, new C{ T="Comment", N = "Equipment" }},
{ 0x0, new C{ T="TagRef", N = "equipment" }},
{ 0x1C, new FlagGroup { A=4, N="flags", STR = new Dictionary<int, string>()
{
{0, "Stop If No Energy" },
}}},
{ 0x20, new C{ T="Float", N = "relative drop chance" }},
{ 0x24, new C{ T="mmr3Hash", N = "Animation" }},
{ 0x28, new C{ T="Tagblock", N = "equipment use", B = new Dictionary<long, C>
{
{ 0x01325, new C{ T="Comment", N = "Equipment Use" }},
{ 0x0, new C{ T="Tagblock", N = "Use Conditions", B = new Dictionary<long, C>
{
{ 0x01326, new C{ T="Comment", N = "Use Conditions" }},
{ 0x0, new EnumGroup { A=2, N="use when", STR = new Dictionary<int, string>()
{
{0, "combat" },
{1, "cover" },
{2, "shield" },
{3, "health" },
{4, "uncover" },
{5, "berserk" },
{6, "investigate" },
{7, "anti vehicle" },
{8, "long range attack" },
{9, "Cannot attack target" },
{10, "Cannot find cover" },
{11, "Tracked Armor Destroyed" },
{12, "Ally Can Attack" },
}}},
{ 0x2, new C{ T="2Byte", N = "generated_padd2ce" }},
{ 0x4, new C{ T="Float", N = "health/shield use threshold" }},
}, S=8}},
{ 0x14, new EnumGroup { A=2, N="use how", STR = new Dictionary<int, string>()
{
{0, "Attach to self" },
{1, "Throw at enemy" },
{2, "Throw at feet" },
{3, "Throw at ally" },
{4, "Use on self" },
{5, "Stop using on self" },
}}},
{ 0x16, new C{ T="2Byte", N = "generated_padd6c8" }},
{ 0x181327, new C{ T="Comment", N = "Skip Fraction" }},
{ 0x18, new C{ T="Float", N = "easy/normal" }},
{ 0x1C, new C{ T="Float", N = "legendary" }},
{ 0x20, new C{ T="Float", N = "Chance Per Second" }},
}, S=36}},
}, S=60}},
{ 0x670, new C{ T="Tagblock", N = "stimuli responses", B = new Dictionary<long, C>
{
{ 0x01328, new C{ T="Comment", N = "Stimulus Response" }},
{ 0x0, new C{ T="mmr3Hash", N = "stimulus name" }},
{ 0x4, new C{ T="TagRef", N = "override character" }},
{ 0x20, new C{ T="Unmapped", N = "Resolved Stimulus" }},
}, S=40}},
{ 0x684, new C{ T="Tagblock", N = "campaign metagame bucket", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=1, N="flags", STR = new Dictionary<int, string>()
{
{0, "only counts with riders" },
}}},
{ 0x1, new EnumGroup { A=1, N="type", STR = new Dictionary<int, string>()
{
{0, "grunt" },
{1, "jackal" },
{2, "skirmisher" },
{3, "marine" },
{4, "spartan" },
{5, "bugger" },
{6, "hunter" },
{7, "flood_infection" },
{8, "flood_carrier" },
{9, "flood_combat" },
{10, "flood_pure" },
{11, "sentinel" },
{12, "elite" },
{13, "engineer" },
{14, "mule" },
{15, "turret" },
{16, "mongoose" },
{17, "warthog" },
{18, "scorpion" },
{19, "hornet" },
{20, "pelican" },
{21, "revenant" },
{22, "seraph" },
{23, "shade" },
{24, "watchtower" },
{25, "ghost" },
{26, "chopper" },
{27, "mauler" },
{28, "wraith" },
{29, "banshee" },
{30, "phantom" },
{31, "scarab" },
{32, "guntower" },
{33, "tuning_fork" },
{34, "broadsword" },
{35, "mammoth" },
{36, "lich" },
{37, "mantis" },
{38, "wasp" },
{39, "phaeton" },
{40, "bishop" },
{41, "knight" },
{42, "pawn" },
{43, "soldier" },
{44, "packmaster" },
{45, "cavalier" },
{46, "brute" },
{47, "hoverer" },
{48, "crusher" },
}}},
{ 0x2, new EnumGroup { A=1, N="class", STR = new Dictionary<int, string>()
{
{0, "infantry" },
{1, "leader" },
{2, "hero" },
{3, "specialist" },
{4, "light vehicle" },
{5, "heavy vehicle" },
{6, "giant vehicle" },
{7, "standard vehicle" },
}}},
{ 0x3, new C{ T="Byte", N = "generated_pad6695" }},
{ 0x4, new C{ T="2Byte", N = "point count" }},
}, S=6}},
{ 0x698, new C{ T="Tagblock", N = "activity objects", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "activity name" }},
{ 0x4, new C{ T="TagRef", N = "crate" }},
{ 0x201329, new C{ T="Comment", N = "" }},
{ 0x20, new C{ T="mmr3Hash", N = "crate marker name" }},
{ 0x241330, new C{ T="Comment", N = "" }},
{ 0x24, new C{ T="mmr3Hash", N = "unit marker name" }},
}, S=40}},
{ 0x6AC, new C{ T="Tagblock", N = "pain screen properties", B = new Dictionary<long, C>
{
{ 0x01331, new C{ T="Comment", N = "Pain Reactions" }},
{ 0x0, new C{ T="Float", N = "pain screen duration" }},
{ 0x4, new C{ T="Float", N = "pain screen region fade out duration" }},
{ 0x8, new C{ T="Float", N = "pain screen region fade out weight threshold" }},
{ 0xC, new C{ T="Float", N = "pain screen angle tolerance" }},
{ 0x10, new C{ T="Float", N = "pain screen angle randomness" }},
{ 0x141332, new C{ T="Comment", N = "Defensive Reactions" }},
{ 0x14, new C{ T="Float", N = "defensive screen duration" }},
{ 0x18, new C{ T="Float", N = "defensive screen scrub fallback fraction" }},
}, S=28}},
{ 0x6C0, new C{ T="Tagblock", N = "Melee animation scaling properties", B = new Dictionary<long, C>
{
{ 0x01333, new C{ T="Comment", N = "Easy Scaling" }},
{ 0x0, new C{ T="Float", N = "Easy Windup Scaling" }},
{ 0x4, new C{ T="Float", N = "Easy Recovery Scaling" }},
{ 0x81334, new C{ T="Comment", N = "Normal Scaling" }},
{ 0x8, new C{ T="Float", N = "Normal Windup Scaling" }},
{ 0xC, new C{ T="Float", N = "Normal Recovery Scaling" }},
{ 0x101335, new C{ T="Comment", N = "Heroic Scaling" }},
{ 0x10, new C{ T="Float", N = "Heroic Windup Scaling" }},
{ 0x14, new C{ T="Float", N = "Heroic Recovery Scaling" }},
{ 0x181336, new C{ T="Comment", N = "Legendary Scaling" }},
{ 0x18, new C{ T="Float", N = "Legendary Windup Scaling" }},
{ 0x1C, new C{ T="Float", N = "Legendary Recovery Scaling" }},
}, S=32}},
{ 0x6D4, new C{ T="Tagblock", N = "Close Quarters Defense Blast", B = new Dictionary<long, C>
{
{ 0x01337, new C{ T="Comment", N = "Close Quarters Defense Blast Parameters" }},
{ 0x01338, new C{ T="Comment", N = "Activation Chance" }},
{ 0x0, new C{ T="Float", N = "Activation Chance (easy)" }},
{ 0x4, new C{ T="Float", N = "Activation Chance (normal)" }},
{ 0x8, new C{ T="Float", N = "Activation Chance (heroic)" }},
{ 0xC, new C{ T="Float", N = "Activation Chance (legendary)" }},
{ 0x101339, new C{ T="Comment", N = "" }},
{ 0x10, new C{ T="Float", N = "cooldown" }},
{ 0x14, new C{ T="Float", N = "attack range.min" }},
{ 0x18, new C{ T="Float", N = "attack range.max" }},
{ 0x1C, new C{ T="mmr3Hash", N = "marker" }},
{ 0x20, new C{ T="TagRef", N = "damage effect" }},
{ 0x3C, new C{ T="TagRef", N = "effect" }},
{ 0x581340, new C{ T="Comment", N = "" }},
}, S=88}},
{ 0x6E8, new C{ T="Tagblock", N = "bishop properties", B = new Dictionary<long, C>
{
{ 0x01341, new C{ T="Comment", N = "Repair" }},
{ 0x0, new C{ T="TagRef", N = "repair beam effect" }},
{ 0x1C1342, new C{ T="Comment", N = "Protect Allies" }},
{ 0x1C, new C{ T="Float", N = "Min Follow Distance " }},
{ 0x201343, new C{ T="Comment", N = "Resurrect Allies" }},
{ 0x20, new C{ T="Float", N = "Resurrection Initiation Delay Time (seconds) " }},
{ 0x24, new C{ T="Float", N = "Resurrection Charge Up Time (seconds) " }},
{ 0x28, new C{ T="Float", N = "Resurrection Give Up Time (seconds) " }},
{ 0x2C, new C{ T="TagRef", N = "Resurrection Ground Effect " }},
{ 0x48, new C{ T="TagRef", N = "Res. Area Scan Start Effect " }},
{ 0x64, new C{ T="TagRef", N = "Res. Area Scan Success Effect " }},
{ 0x80, new C{ T="TagRef", N = "Res. Area Scan Failure Effect " }},
{ 0x9C1344, new C{ T="Comment", N = "Shard Spawning" }},
{ 0x9C, new C{ T="TagRef", N = "Shard Spawn Ground Effect " }},
{ 0xB8, new C{ T="Float", N = "Shard Creation Delay (seconds) " }},
{ 0xBC, new C{ T="Float", N = "Spawn Delay (seconds) .min" }},
{ 0xC0, new C{ T="Float", N = "Spawn Delay (seconds) .max" }},
{ 0xC41345, new C{ T="Comment", N = "Healing Allies" }},
{ 0xC4, new C{ T="Float", N = "Healing Time" }},
}, S=200}},
{ 0x6FC, new C{ T="Tagblock", N = "Healing Properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "Healing delay time" }},
{ 0x4, new C{ T="Float", N = "Healing standby time" }},
}, S=8}},
{ 0x710, new C{ T="Tagblock", N = "packmaster properties", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "Pack Character Ancestor " }},
{ 0x1C, new C{ T="Float", N = "command radius" }},
{ 0x20, new C{ T="4Byte", N = "group fire min count" }},
{ 0x24, new C{ T="4Byte", N = "group fire max count" }},
{ 0x281346, new C{ T="Comment", N = "group fire chance" }},
{ 0x28, new C{ T="Float", N = "group fire chance (easy)" }},
{ 0x2C, new C{ T="Float", N = "group fire chance (normal)" }},
{ 0x30, new C{ T="Float", N = "group fire chance (heroic)" }},
{ 0x34, new C{ T="Float", N = "group fire chance (legendary)" }},
{ 0x381347, new C{ T="Comment", N = "" }},
{ 0x38, new C{ T="Float", N = "group fire burst time" }},
{ 0x3C, new C{ T="Float", N = "group fire cooldown time" }},
{ 0x40, new C{ T="4Byte", N = "group fire burst count" }},
{ 0x44, new C{ T="Float", N = "group fire burst delay" }},
{ 0x48, new C{ T="Float", N = "group fire target range" }},
{ 0x4C, new C{ T="Float", N = "lion charge max range" }},
{ 0x50, new C{ T="Float", N = "lion charge chance" }},
{ 0x54, new C{ T="Float", N = "lion charge melee range" }},
{ 0x58, new C{ T="Float", N = "lion charge fire duration" }},
{ 0x5C, new C{ T="Float", N = "lion charge throttle override" }},
{ 0x60, new C{ T="Float", N = "lion charge abort range" }},
{ 0x64, new C{ T="Float", N = "pack charge distance" }},
{ 0x68, new C{ T="Float", N = "pack charge cooldown" }},
}, S=108}},
{ 0x724, new C{ T="Tagblock", N = "Dynamic Task", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="Agent Filter Flags ", STR = new Dictionary<int, string>()
{
{0, "Companion" },
{1, "Protector" },
{2, "Spawner" },
{3, "Birther" },
{4, "Cover Fire" },
{5, "SlipSpace Spawner" },
{6, "Healer" },
}}},
{ 0x4, new FlagGroup { A=4, N="Task Generation Flags ", STR = new Dictionary<int, string>()
{
{0, "Protect Me" },
{1, "Resurrect On Death" },
{2, "Heal Me" },
}}},
{ 0x8, new C{ T="Float", N = "Protect Request Shield Level " }},
{ 0xC, new C{ T="Float", N = "Protect Request Body Level " }},
{ 0x10, new C{ T="Float", N = "Resurrection Req. Chance " }},
{ 0x14, new C{ T="Float", N = "Shield Task Priority " }},
{ 0x18, new C{ T="Float", N = "Protect Task Priorities (Min Health - Max Health) .min" }},
{ 0x1C, new C{ T="Float", N = "Protect Task Priorities (Min Health - Max Health) .max" }},
{ 0x20, new C{ T="Float", N = "Resurrection Task Priority " }},
{ 0x24, new C{ T="Float", N = "Shield During Resurrection Task Priority " }},
{ 0x28, new C{ T="TagRef", N = "Shield Crate Override " }},
{ 0x44, new C{ T="Float", N = "Heal Request Shield Level " }},
{ 0x48, new C{ T="Float", N = "Heal Request Body Level " }},
}, S=76}},
{ 0x738, new C{ T="Tagblock", N = "Rush Attack", B = new Dictionary<long, C>
{
{ 0x01348, new C{ T="Comment", N = "Rush Attack" }},
{ 0x01349, new C{ T="Comment", N = "Generic Advance Attack" }},
{ 0x0, new FlagGroup { A=4, N="Flags", STR = new Dictionary<int, string>()
{
{0, "Berserk on activation" },
{1, "Don't always advance without ranged" },
{2, "Advance on shields down" },
{3, "Advance on vehicles" },
{4, "Use slow advance" },
}}},
{ 0x4, new C{ T="Float", N = "Range.min" }},
{ 0x8, new C{ T="Float", N = "Range.max" }},
{ 0xC, new C{ T="Float", N = "Max scariness" }},
{ 0x10, new EnumGroup { A=1, N="Threat Level", STR = new Dictionary<int, string>()
{
{0, "Low" },
{1, "High" },
}}},
{ 0x11, new C{ T="Comment", N = "generated_pad8a75" }},
{ 0x141350, new C{ T="Comment", N = "Activation Chance" }},
{ 0x14, new C{ T="Float", N = "Activation Chance (easy)" }},
{ 0x18, new C{ T="Float", N = "Activation Chance (normal)" }},
{ 0x1C, new C{ T="Float", N = "Activation Chance (heroic)" }},
{ 0x20, new C{ T="Float", N = "Activation Chance (legendary)" }},
{ 0x241351, new C{ T="Comment", N = "" }},
{ 0x24, new C{ T="Float", N = "Attack timeout" }},
{ 0x28, new C{ T="Float", N = "Melee range" }},
{ 0x2C, new C{ T="Float", N = "Shield down threshold" }},
{ 0x30, new C{ T="Float", N = "Abort danger threshold" }},
{ 0x34, new C{ T="Float", N = "Abort distance" }},
{ 0x38, new C{ T="Float", N = "Outside area range" }},
{ 0x3C, new C{ T="Float", N = "Berserk abort distance" }},
{ 0x40, new C{ T="Float", N = "Cooldown" }},
{ 0x44, new C{ T="Float", N = "Tell animation chance" }},
{ 0x48, new C{ T="Float", N = "Tell Animation Cooldown" }},
{ 0x4C, new C{ T="mmr3Hash", N = "Throttle style" }},
{ 0x501352, new C{ T="Comment", N = "Slow Advance" }},
{ 0x501353, new C{ T="Comment", N = "Slow Advance" }},
{ 0x50, new C{ T="Float", N = "Slow range" }},
{ 0x54, new C{ T="mmr3Hash", N = "Slow throttle style" }},
{ 0x58, new C{ T="Float", N = "Exit range" }},
{ 0x5C1354, new C{ T="Comment", N = "Rush specific settings" }},
{ 0x5C, new FlagGroup { A=4, N="Rush flags", STR = new Dictionary<int, string>()
{
{0, "Don't shoot while advancing" },
{1, "Allow multiple hits" },
{2, "Ignore followers" },
}}},
{ 0x60, new C{ T="Float", N = "Leader Abandoned Chance" }},
{ 0x64, new C{ T="Float", N = "Berserk chance" }},
{ 0x68, new C{ T="Float", N = "Berserk recheck cooldown" }},
{ 0x6C, new C{ T="Float", N = "Min abort time" }},
{ 0x70, new C{ T="Float", N = "Min abort dist travelled" }},
{ 0x74, new C{ T="Float", N = "Vertical Range Scalar" }},
{ 0x78, new C{ T="Float", N = "Zig-zag chance" }},
{ 0x7C, new C{ T="Float", N = "Zig-zag angle" }},
{ 0x80, new C{ T="Float", N = "Zig-zag period" }},
{ 0x84, new C{ T="Float", N = "Tackle angle" }},
{ 0x88, new C{ T="Float", N = "Tackle wait" }},
{ 0x8C, new C{ T="Tagblock", N = "Combo Definitions", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="Combo Flags", STR = new Dictionary<int, string>()
{
}}},
{ 0x4, new C{ T="Float", N = "Weight Modifier" }},
{ 0x8, new C{ T="Tagblock", N = "Attacks", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="Direction Flags", STR = new Dictionary<int, string>()
{
{0, "Front" },
{1, "Left" },
{2, "Right" },
{3, "Back" },
}}},
{ 0x4, new C{ T="mmr3Hash", N = "Animation Name" }},
{ 0x8, new C{ T="TagRef", N = "Damage Override" }},
}, S=36}},
}, S=28}},
{ 0xA0, new C{ T="mmr3Hash", N = "Taunt Animation Name" }},
}, S=164}},
{ 0x74C, new C{ T="Tagblock", N = "Leap Attack", B = new Dictionary<long, C>
{
{ 0x01355, new C{ T="Comment", N = "Leap Attack" }},
{ 0x01356, new C{ T="Comment", N = "Generic Advance Attack" }},
{ 0x0, new FlagGroup { A=4, N="Flags", STR = new Dictionary<int, string>()
{
{0, "Berserk on activation" },
{1, "Don't always advance without ranged" },
{2, "Advance on shields down" },
{3, "Advance on vehicles" },
{4, "Use slow advance" },
}}},
{ 0x4, new C{ T="Float", N = "Range.min" }},
{ 0x8, new C{ T="Float", N = "Range.max" }},
{ 0xC, new C{ T="Float", N = "Max scariness" }},
{ 0x10, new EnumGroup { A=1, N="Threat Level", STR = new Dictionary<int, string>()
{
{0, "Low" },
{1, "High" },
}}},
{ 0x11, new C{ T="Comment", N = "generated_pad8a75" }},
{ 0x141357, new C{ T="Comment", N = "Activation Chance" }},
{ 0x14, new C{ T="Float", N = "Activation Chance (easy)" }},
{ 0x18, new C{ T="Float", N = "Activation Chance (normal)" }},
{ 0x1C, new C{ T="Float", N = "Activation Chance (heroic)" }},
{ 0x20, new C{ T="Float", N = "Activation Chance (legendary)" }},
{ 0x241358, new C{ T="Comment", N = "" }},
{ 0x24, new C{ T="Float", N = "Attack timeout" }},
{ 0x28, new C{ T="Float", N = "Melee range" }},
{ 0x2C, new C{ T="Float", N = "Shield down threshold" }},
{ 0x30, new C{ T="Float", N = "Abort danger threshold" }},
{ 0x34, new C{ T="Float", N = "Abort distance" }},
{ 0x38, new C{ T="Float", N = "Outside area range" }},
{ 0x3C, new C{ T="Float", N = "Berserk abort distance" }},
{ 0x40, new C{ T="Float", N = "Cooldown" }},
{ 0x44, new C{ T="Float", N = "Tell animation chance" }},
{ 0x48, new C{ T="Float", N = "Tell Animation Cooldown" }},
{ 0x4C, new C{ T="mmr3Hash", N = "Throttle style" }},
{ 0x501359, new C{ T="Comment", N = "Slow Advance" }},
{ 0x501360, new C{ T="Comment", N = "Slow Advance" }},
{ 0x50, new C{ T="Float", N = "Slow range" }},
{ 0x54, new C{ T="mmr3Hash", N = "Slow throttle style" }},
{ 0x58, new C{ T="Float", N = "Exit range" }},
{ 0x5C1361, new C{ T="Comment", N = "Leap specific settings" }},
{ 0x5C, new FlagGroup { A=4, N="Leap Flags", STR = new Dictionary<int, string>()
{
{0, "Allow with ranged weapons" },
{1, "Always face target" },
{2, "Can lose target mid jump" },
{3, "Stick the landing" },
{4, "Swoop tracks target" },
}}},
{ 0x60, new C{ T="Float", N = "Ideal leap speed" }},
{ 0x64, new C{ T="Float", N = "Max leap speed" }},
{ 0x68, new C{ T="Float", N = "Ballistic fraction" }},
{ 0x6C, new C{ T="Float", N = "Prediction percent" }},
{ 0x70, new C{ T="Float", N = "Shortfall" }},
{ 0x74, new C{ T="Float", N = "Swoop accel rate" }},
{ 0x78, new C{ T="Float", N = "Swoop accel time" }},
{ 0x7C, new C{ T="Float", N = "Swoop max deviation" }},
{ 0x80, new C{ T="Float", N = "Swoop prediction" }},
}, S=132}},
{ 0x760, new C{ T="Tagblock", N = "Teleport Attack", B = new Dictionary<long, C>
{
{ 0x01362, new C{ T="Comment", N = "Teleport attack" }},
{ 0x01363, new C{ T="Comment", N = "Generic Advance Attack" }},
{ 0x0, new FlagGroup { A=4, N="Flags", STR = new Dictionary<int, string>()
{
{0, "Berserk on activation" },
{1, "Don't always advance without ranged" },
{2, "Advance on shields down" },
{3, "Advance on vehicles" },
{4, "Use slow advance" },
}}},
{ 0x4, new C{ T="Float", N = "Range.min" }},
{ 0x8, new C{ T="Float", N = "Range.max" }},
{ 0xC, new C{ T="Float", N = "Max scariness" }},
{ 0x10, new EnumGroup { A=1, N="Threat Level", STR = new Dictionary<int, string>()
{
{0, "Low" },
{1, "High" },
}}},
{ 0x11, new C{ T="Comment", N = "generated_pad8a75" }},
{ 0x141364, new C{ T="Comment", N = "Activation Chance" }},
{ 0x14, new C{ T="Float", N = "Activation Chance (easy)" }},
{ 0x18, new C{ T="Float", N = "Activation Chance (normal)" }},
{ 0x1C, new C{ T="Float", N = "Activation Chance (heroic)" }},
{ 0x20, new C{ T="Float", N = "Activation Chance (legendary)" }},
{ 0x241365, new C{ T="Comment", N = "" }},
{ 0x24, new C{ T="Float", N = "Attack timeout" }},
{ 0x28, new C{ T="Float", N = "Melee range" }},
{ 0x2C, new C{ T="Float", N = "Shield down threshold" }},
{ 0x30, new C{ T="Float", N = "Abort danger threshold" }},
{ 0x34, new C{ T="Float", N = "Abort distance" }},
{ 0x38, new C{ T="Float", N = "Outside area range" }},
{ 0x3C, new C{ T="Float", N = "Berserk abort distance" }},
{ 0x40, new C{ T="Float", N = "Cooldown" }},
{ 0x44, new C{ T="Float", N = "Tell animation chance" }},
{ 0x48, new C{ T="Float", N = "Tell Animation Cooldown" }},
{ 0x4C, new C{ T="mmr3Hash", N = "Throttle style" }},
{ 0x501366, new C{ T="Comment", N = "Slow Advance" }},
{ 0x501367, new C{ T="Comment", N = "Slow Advance" }},
{ 0x50, new C{ T="Float", N = "Slow range" }},
{ 0x54, new C{ T="mmr3Hash", N = "Slow throttle style" }},
{ 0x58, new C{ T="Float", N = "Exit range" }},
{ 0x5C1368, new C{ T="Comment", N = "Teleport specific settings" }},
{ 0x5C, new C{ T="Float", N = "Destination distance" }},
{ 0x60, new C{ T="Float", N = "Side step distance" }},
{ 0x64, new C{ T="Float", N = "Forward distance" }},
{ 0x68, new C{ T="Float", N = "Tracking distance" }},
{ 0x6C, new C{ T="Float", N = "Runup time" }},
{ 0x70, new C{ T="Float", N = "Position pause" }},
{ 0x74, new C{ T="Float", N = "Escape Cooldown" }},
{ 0x78, new C{ T="Float", N = "Lock Distance" }},
{ 0x7C, new C{ T="TagRef", N = "Launch effect" }},
{ 0x98, new C{ T="TagRef", N = "Land effect" }},
}, S=180}},
{ 0x774, new C{ T="Tagblock", N = "Jink and Shoot", B = new Dictionary<long, C>
{
{ 0x01369, new C{ T="Comment", N = "Jink and Shoot" }},
{ 0x0, new C{ T="Float", N = "Start distance.min" }},
{ 0x4, new C{ T="Float", N = "Start distance.max" }},
{ 0x8, new C{ T="Float", N = "Start max offset angle" }},
{ 0xC, new C{ T="Float", N = "Min start teleport distance" }},
{ 0x10, new C{ T="4Byte", N = "Number of intermediate teleports" }},
{ 0x14, new C{ T="Float", N = "Max offset angle" }},
{ 0x18, new C{ T="Float", N = "Side step distance.min" }},
{ 0x1C, new C{ T="Float", N = "Side step distance.max" }},
{ 0x20, new C{ T="Float", N = "Forward distance.min" }},
{ 0x24, new C{ T="Float", N = "Forward distance.max" }},
{ 0x28, new C{ T="TagRef", N = "Launch effect" }},
{ 0x44, new C{ T="TagRef", N = "Land effect" }},
{ 0x60, new C{ T="mmr3Hash", N = "Effect marker" }},
{ 0x64, new C{ T="TagRef", N = "Jink and Shoot Weapon" }},
}, S=128}},
{ 0x788, new C{ T="Tagblock", N = "Teleport and Tackle", B = new Dictionary<long, C>
{
{ 0x01370, new C{ T="Comment", N = "Teleport and Tackle" }},
{ 0x0, new C{ T="Float", N = "Destination distance.min" }},
{ 0x4, new C{ T="Float", N = "Destination distance.max" }},
{ 0x8, new C{ T="Float", N = "Max offset angle" }},
{ 0xC, new C{ T="Float", N = "Duration to Align" }},
{ 0x10, new C{ T="Float", N = "Min teleport distance" }},
{ 0x14, new C{ T="TagRef", N = "Launch effect" }},
{ 0x30, new C{ T="TagRef", N = "Land effect" }},
{ 0x4C, new C{ T="mmr3Hash", N = "Effect marker" }},
{ 0x50, new C{ T="TagRef", N = "Teleport and Tackle Weapon" }},
}, S=108}},
{ 0x79C, new C{ T="Tagblock", N = "Teleport and Taunt Animation", B = new Dictionary<long, C>
{
{ 0x01371, new C{ T="Comment", N = "Teleport and Taunt Behavior" }},
{ 0x0, new C{ T="mmr3Hash", N = "Custom Animation Name" }},
{ 0x4, new C{ T="Float", N = "Taunt Frequency" }},
{ 0x8, new C{ T="Float", N = "Taunt chance" }},
{ 0xC, new C{ T="Float", N = "Destination distance.min" }},
{ 0x10, new C{ T="Float", N = "Destination distance.max" }},
{ 0x14, new C{ T="Float", N = "Max offset angle" }},
{ 0x18, new C{ T="Float", N = "Min teleport distance" }},
{ 0x1C, new C{ T="TagRef", N = "Launch effect" }},
{ 0x38, new C{ T="TagRef", N = "Land effect" }},
{ 0x54, new C{ T="mmr3Hash", N = "Effect marker" }},
}, S=88}},
{ 0x7B0, new C{ T="Tagblock", N = "Desperation Rush", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="Properties", STR = new Dictionary<int, string>()
{
{0, "Ignore Cooldown" },
}}},
{ 0x4, new C{ T="Float", N = "Range" }},
}, S=8}},
{ 0x7C4, new C{ T="Tagblock", N = "Proximity Melee", B = new Dictionary<long, C>
{
{ 0x01372, new C{ T="Comment", N = "Proximity Melee Impulse" }},
{ 0x0, new C{ T="Float", N = "Range" }},
{ 0x4, new C{ T="Float", N = "Cooldown" }},
{ 0x8, new C{ T="Float", N = "Outside area range" }},
}, S=12}},
{ 0x7D8, new C{ T="Tagblock", N = "Dive Bomb Kamikaze", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "Ally target chance" }},
{ 0x4, new C{ T="Float", N = "Enemy target chance" }},
{ 0x8, new C{ T="Float", N = "Travel distance.min" }},
{ 0xC, new C{ T="Float", N = "Travel distance.max" }},
{ 0x10, new C{ T="Float", N = "Travel time before exploding" }},
{ 0x14, new C{ T="TagRef", N = "Impact detonation projectile" }},
{ 0x30, new C{ T="Float", N = "Target error range.min" }},
{ 0x34, new C{ T="Float", N = "Target error range.max" }},
{ 0x38, new FlagGroup { A=1, N="Behavior flags", STR = new Dictionary<int, string>()
{
{0, "Enable target leading" },
{1, "Should drop Weapon" },
}}},
{ 0x39, new C{ T="Comment", N = "generated_pad94ce" }},
{ 0x3C, new C{ T="Float", N = "Kamikaze below health percentage" }},
{ 0x40, new C{ T="Float", N = "Chance to kamikaze at low health (per second)" }},
{ 0x44, new C{ T="Float", N = "Chance to kamikaze when last man (per second)" }},
{ 0x48, new C{ T="Float", N = "a Pause between Kamikaze anim and dive bomb action(default 2 seconds)" }},
}, S=76}},
{ 0x7EC, new C{ T="Tagblock", N = "Post Combat", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "Shoot Corpse Chance" }},
{ 0x4, new C{ T="Float", N = "Postcombat Phase 1 Time.min" }},
{ 0x8, new C{ T="Float", N = "Postcombat Phase 1 Time.max" }},
}, S=12}},
{ 0x800, new C{ T="Tagblock", N = "Pack Stalk", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "Min Wander Distance " }},
{ 0x4, new C{ T="Float", N = "Outside Area Border " }},
{ 0x8, new C{ T="Float", N = "Position Update Delay .min" }},
{ 0xC, new C{ T="Float", N = "Position Update Delay .max" }},
{ 0x10, new C{ T="Float", N = "Throttle In Cover " }},
}, S=20}},
{ 0x814, new C{ T="Tagblock", N = "Fight Circle", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "Strafe Time .min" }},
{ 0x4, new C{ T="Float", N = "Strafe Time .max" }},
{ 0x8, new C{ T="Float", N = "Extra Firing Time .min" }},
{ 0xC, new C{ T="Float", N = "Extra Firing Time .max" }},
{ 0x10, new C{ T="Float", N = "Target Patience Time " }},
{ 0x14, new C{ T="Float", N = "Max Angle From ThreatAxis " }},
{ 0x18, new C{ T="Float", N = "Nearby Inner Angle " }},
{ 0x1C, new C{ T="Float", N = "Nearby Outer Angle " }},
{ 0x20, new C{ T="mmr3Hash", N = "strafe throttle style " }},
{ 0x24, new C{ T="mmr3Hash", N = "move throttle style " }},
}, S=40}},
{ 0x828, new C{ T="Tagblock", N = "Hamstring", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "Flank Angle " }},
{ 0x4, new C{ T="Float", N = "Flank Distance " }},
{ 0x8, new C{ T="Float", N = "Outer Engage Distance " }},
{ 0xC, new C{ T="Float", N = "Hamstring Delay " }},
{ 0x10, new C{ T="Float", N = "Initiate chance " }},
{ 0x14, new C{ T="Float", N = "Max Rush Time " }},
{ 0x18, new C{ T="Float", N = "Melee Attack Time Min " }},
{ 0x1C, new C{ T="Float", N = "Melee Attack Time Max " }},
{ 0x20, new C{ T="Float", N = "Max Charge Range" }},
}, S=36}},
{ 0x83C, new C{ T="Tagblock", N = "Forerunner", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="forerunner flags", STR = new Dictionary<int, string>()
{
{0, "charge on command" },
{1, "Teleport to combat pos" },
{2, "Treat as leader" },
}}},
{ 0x4, new C{ T="Float", N = "order minion charge chance " }},
{ 0x8, new C{ T="Float", N = "order minion charge radius " }},
{ 0xC, new C{ T="Float", N = "minion charge min time " }},
{ 0x10, new C{ T="Float", N = "minion charge max time " }},
{ 0x14, new C{ T="Float", N = "Phase To Position distance bounds .min" }},
{ 0x18, new C{ T="Float", N = "Phase To Position distance bounds .max" }},
{ 0x1C, new C{ T="Float", N = "Phase To Position Probability range .min" }},
{ 0x20, new C{ T="Float", N = "Phase To Position Probability range .max" }},
}, S=36}},
{ 0x850, new C{ T="Tagblock", N = "Gravity Jump", B = new Dictionary<long, C>
{
{ 0x01373, new C{ T="Comment", N = "Activation Chance" }},
{ 0x0, new C{ T="Float", N = "Activation Chance (easy)" }},
{ 0x4, new C{ T="Float", N = "Activation Chance (normal)" }},
{ 0x8, new C{ T="Float", N = "Activation Chance (heroic)" }},
{ 0xC, new C{ T="Float", N = "Activation Chance (legendary)" }},
{ 0x101374, new C{ T="Comment", N = "" }},
{ 0x10, new C{ T="Float", N = "Float Time " }},
{ 0x14, new C{ T="Float", N = "Float Gravity Scale" }},
{ 0x181375, new C{ T="Comment", N = "Descent Gravity Scale Function" }},
{ 0x181376, new C{ T="Comment", N = "descendGravityScaleFunction" }},
{ 0x181377, new C{ T="Comment", N = "" }},
{ 0x18, new C{ T="Unmapped", N = "data" }},
{ 0x301378, new C{ T="Comment", N = "" }},
{ 0x30, new C{ T="Float", N = "Slow descend time " }},
{ 0x34, new C{ T="Float", N = "Jump Target Height " }},
{ 0x38, new C{ T="Float", N = "Cooldown " }},
{ 0x3C, new C{ T="Float", N = "Trigger Distance " }},
}, S=64}},
{ 0x864, new C{ T="Tagblock", N = "Co-op Modifiers", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "Body Vitality Scale for 2-3 Players" }},
{ 0x4, new C{ T="Float", N = "Body Vitality Scale for 4 Players" }},
{ 0x8, new C{ T="Float", N = "Shield Vitality Scale for 2-3 Players" }},
{ 0xC, new C{ T="Float", N = "Shield Vitality Scale for 4 Players" }},
}, S=16}},
{ 0x878, new C{ T="Tagblock", N = "Multi Target Tracked Attack", B = new Dictionary<long, C>
{
{ 0x01379, new C{ T="Comment", N = "activation chance" }},
{ 0x0, new C{ T="Float", N = "activation chance (easy)" }},
{ 0x4, new C{ T="Float", N = "activation chance (normal)" }},
{ 0x8, new C{ T="Float", N = "activation chance (heroic)" }},
{ 0xC, new C{ T="Float", N = "activation chance (legendary)" }},
{ 0x101380, new C{ T="Comment", N = "" }},
{ 0x10, new C{ T="Float", N = "targeting angle" }},
{ 0x14, new C{ T="Float", N = "activation range.min" }},
{ 0x18, new C{ T="Float", N = "activation range.max" }},
{ 0x1C, new C{ T="Byte", N = "min targets in range" }},
{ 0x1D, new C{ T="Byte", N = "bursts" }},
{ 0x1E, new EnumGroup { A=1, N="trigger", STR = new Dictionary<int, string>()
{
{0, "primary" },
{1, "secondary" },
}}},
{ 0x1F, new C{ T="Byte", N = "generated_pade74f" }},
{ 0x20, new C{ T="Float", N = "cooldown" }},
}, S=36}},
{ 0x88C, new C{ T="Tagblock", N = "Drop Objects", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="4Byte", N = "Number of Rolls" }},
{ 0x4, new C{ T="Float", N = "Min Item Launch Velocity" }},
{ 0x8, new C{ T="Float", N = "Max Item Launch Velocity" }},
{ 0xC, new C{ T="Float", N = "Max Trajectory Radius" }},
{ 0x10, new C{ T="Tagblock", N = "Drop Objects", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "Easy_Normal Drop Chance" }},
{ 0x4, new C{ T="Float", N = "Heroic Drop Chance" }},
{ 0x8, new C{ T="Float", N = "Legendary Drop Chance" }},
{ 0xC, new C{ T="TagRef", N = "Drop Object" }},
}, S=40}},
}, S=36}},
{ 0x8A0, new C{ T="Tagblock", N = "Custom Scripting", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Tagblock", N = "Scripted Threshold", B = new Dictionary<long, C>
{
{ 0x01381, new C{ T="Comment", N = "Scripted Thresholds" }},
{ 0x0, new FlagGroup { A=4, N="Flags", STR = new Dictionary<int, string>()
{
{0, "Called Only Once" },
}}},
{ 0x4, new EnumGroup { A=2, N="Tracked Attribute", STR = new Dictionary<int, string>()
{
{0, "Danger" },
{1, "Target Distance" },
{2, "Target Perceived Scariness" },
{3, "Target Inherent Scariness" },
{4, "Body Vitality" },
{5, "Shield Vitality" },
}}},
{ 0x6, new EnumGroup { A=2, N="Trigger When", STR = new Dictionary<int, string>()
{
{0, "Greater Than" },
{1, "Less Than" },
}}},
{ 0x8, new C{ T="Float", N = "Threshold Value" }},
{ 0xC, new C{ T="Float", N = "Recheck Buffer" }},
{ 0x10, new C{ T="Float", N = "Recheck Cooldown" }},
{ 0x14, new C{ T="String", N = "Function" }},
}, S=276}},
}, S=20}},
{ 0x8B4, new C{ T="4Byte", N = "generated_pad539d" }},
}},
{ "bipd", new()
{
{ 0x0266, new C{ T="Comment", N = "unit" }},
{ 0x0267, new C{ T="Comment", N = "object" }},
{ 0x0268, new C{ T="Comment", N = "AnyTag" }},
{ 0x0, new C{ T="Pointer", N = "vtable space" }},
{ 0x8269, new C{ T="Comment", N = "internal struct" }},
{ 0x8, new C{ T="4Byte", N = "global tag ID" }},
{ 0xC, new C{ T="4Byte", N = "local tag handle" }},
{ 0x10270, new C{ T="Comment", N = "OBJECT" }},
{ 0x10, new C{ T="2Byte", N = "runtime object type" }},
{ 0x12, new EnumGroup { A=1, N="Nav Mesh Cutting", STR = new Dictionary<int, string>()
{
{0, "Default" },
{1, "Cut" },
{2, "NotCut" },
}}},
{ 0x13, new EnumGroup { A=1, N="Nav Mesh Cutting mode", STR = new Dictionary<int, string>()
{
{0, "Default" },
{1, "Full" },
{2, "Convex" },
{3, "OBB" },
}}},
{ 0x14, new C{ T="Float", N = "Nav Mesh Silhouette Expansion" }},
{ 0x18, new EnumGroup { A=1, N="navmesh collision node opt in", STR = new Dictionary<int, string>()
{
{0, "Default" },
{1, "Yes" },
{2, "No" },
}}},
{ 0x19, new C{ T="Comment", N = "generated_pad19c8" }},
{ 0x1C271, new C{ T="Comment", N = "Nav Dangerous Objects" }},
{ 0x1C272, new C{ T="Comment", N = "Avoidance" }},
{ 0x1C, new C{ T="Float", N = "Avoidance Multiplier" }},
{ 0x20, new C{ T="Float", N = "Avoidance Radius" }},
{ 0x24273, new C{ T="Comment", N = "" }},
{ 0x24, new FlagGroup { A=4, N="object flags", STR = new Dictionary<int, string>()
{
{0, "always render in floating shadow" },
{1, "preserves initial damage owner" },
{2, "not a pathfinding obstacle" },
{3, "extension of parent" },
{4, "does not cause collision damage" },
{5, "early mover" },
{6, "early mover localized physics" },
{7, "object scales attachments" },
{8, "non physical in map editor" },
{9, "effects created by this object do not spawn objects in multiplayer" },
{10, "does not collide with camera" },
{11, "force collide with camera" },
{12, "damage not blocked by obstructions" },
{13, "early mover localize projectiles" },
{14, "grab parent object in forge editing" },
{15, "Hoistable from stand" },
{16, "Destroyable obstacle" },
{17, "vaultable" },
{18, "collides with own projectiles" },
{19, "object rejects dynamic decals" },
{20, "Do not network" },
{21, "Wake when visible to player" },
{22, "Sleep when not visible to player" },
{23, "Does not accept active camouflage" },
{24, "Killed on first contact or damage" },
{25, "Self-destruct timer kills instead of destroying" },
{26, "is permeable to projectiles" },
{27, "Destroy on player contact" },
{28, "Use the new action and animation system" },
{29, "Allow delayed placement and deletion" },
}}},
{ 0x28, new C{ T="Float", N = "bounding radius" }},
{ 0x2C, new C{ T="Float", N = "bounding offset.X" }},
{ 0x30, new C{ T="Float", N = "bounding offset.Y" }},
{ 0x34, new C{ T="Float", N = "bounding offset.Z" }},
{ 0x38, new C{ T="Float", N = "horizontal acceleration scale" }},
{ 0x3C, new C{ T="Float", N = "vertical acceleration scale" }},
{ 0x40, new C{ T="Float", N = "angular acceleration scale" }},
{ 0x44, new EnumGroup { A=1, N="lightmap shadow mode", STR = new Dictionary<int, string>()
{
{0, "default" },
{1, "never" },
{2, "always" },
{3, "blur" },
}}},
{ 0x45, new EnumGroup { A=1, N="multiple airprobe mode", STR = new Dictionary<int, string>()
{
{0, "default" },
{1, "always" },
}}},
{ 0x46, new EnumGroup { A=1, N="water density", STR = new Dictionary<int, string>()
{
{0, "default" },
{1, "super_floater" },
{2, "floater" },
{3, "neutral" },
{4, "sinker" },
{5, "super_sinker" },
{6, "none" },
}}},
{ 0x47274, new C{ T="Comment", N = "Streaming" }},
{ 0x47275, new C{ T="Comment", N = "Streaming" }},
{ 0x47, new FlagGroup { A=1, N="Streaming control flags", STR = new Dictionary<int, string>()
{
{0, "High priority" },
{1, "Apply delay on stream out" },
{2, "Ignore overlapping active objects for collision" },
}}},
{ 0x48276, new C{ T="Comment", N = "" }},
{ 0x48277, new C{ T="Comment", N = "impact audio" }},
{ 0x48278, new C{ T="Comment", N = "IMPACT AUDIO" }},
{ 0x48, new C{ T="Float", N = "small impact minimum speed" }},
{ 0x4C, new C{ T="Float", N = "medium impact minimum speed" }},
{ 0x50, new C{ T="Float", N = "large impact minimum speed" }},
{ 0x54, new C{ T="Float", N = "large impact maximum speed" }},
{ 0x58279, new C{ T="Comment", N = "" }},
{ 0x58, new C{ T="4Byte", N = "runtime flags" }},
{ 0x5C, new C{ T="Tagblock", N = "source sidecar", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="String", N = "sidecar path" }},
}, S=256}},
{ 0x70, new C{ T="mmr3Hash", N = "default model variant" }},
{ 0x74, new C{ T="mmr3Hash", N = "default style id" }},
{ 0x78, new C{ T="TagRef", N = "model" }},
{ 0x94, new C{ T="TagRef", N = "asset" }},
{ 0xB0, new C{ T="TagRef", N = "frame" }},
{ 0xCC, new C{ T="TagRef", N = "crate object" }},
{ 0xE8280, new C{ T="Comment", N = "Damage Source" }},
{ 0xE8281, new C{ T="Comment", N = "damageSource" }},
{ 0xE8, new C{ T="mmr3Hash", N = "Damage Source Name" }},
{ 0xEC, new C{ T="Float", N = "navpoint vertical offset" }},
{ 0xF0282, new C{ T="Comment", N = "only set this tag if you want to override the default collision damage values in globals.globals" }},
{ 0xF0, new C{ T="TagRef", N = "collision damage" }},
{ 0x10C, new C{ T="Tagblock", N = "early mover OBB", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "node name" }},
{ 0x4, new C{ T="4Byte", N = "runtime node index" }},
{ 0x8, new C{ T="Float", N = "x0" }},
{ 0xC, new C{ T="Float", N = "x1" }},
{ 0x10, new C{ T="Float", N = "y0" }},
{ 0x14, new C{ T="Float", N = "y1" }},
{ 0x18, new C{ T="Float", N = "z0" }},
{ 0x1C, new C{ T="Float", N = "z1" }},
{ 0x20, new C{ T="Float", N = "angles.X" }},
{ 0x24, new C{ T="Float", N = "angles.Y" }},
{ 0x28, new C{ T="Float", N = "angles.Z" }},
}, S=44}},
{ 0x120, new C{ T="TagRef", N = "creation effect" }},
{ 0x13C283, new C{ T="Comment", N = "material effect references" }},
{ 0x13C284, new C{ T="Comment", N = "Material Effects Section" }},
{ 0x13C, new C{ T="TagRef", N = "material effects" }},
{ 0x158, new C{ T="TagRef", N = "visual material effects" }},
{ 0x174, new C{ T="TagRef", N = "sound material effects" }},
{ 0x190285, new C{ T="Comment", N = "" }},
{ 0x190, new C{ T="TagRef", N = "melee sound" }},
{ 0x1AC, new C{ T="Float", N = "Damage Shader Min Vitality" }},
{ 0x1B0, new C{ T="Float", N = "Damage Shader Intensity Scalar" }},
{ 0x1B4, new C{ T="Float", N = "kill on first contact or damage after time" }},
{ 0x1B8, new C{ T="Float", N = "self-destruct time" }},
{ 0x1BC, new C{ T="Float", N = "self-destruct time max" }},
{ 0x1C0, new C{ T="Tagblock", N = "ai properties", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="ai flags", STR = new Dictionary<int, string>()
{
{0, "detroyable cover" },
{1, "pathfinding ignore when dead" },
{2, "dynamic cover" },
{3, "non flight-blocking" },
{4, "dynamic cover from centre" },
{5, "has corner markers" },
{6, "idle when flying" },
{7, "consider for interaction" },
{8, "leap on cover target" },
}}},
{ 0x4, new C{ T="mmr3Hash", N = "ai type name" }},
{ 0x8, new C{ T="mmr3Hash", N = "interaction name" }},
{ 0xC, new EnumGroup { A=2, N="ai size", STR = new Dictionary<int, string>()
{
{0, "default" },
{1, "tiny" },
{2, "small" },
{3, "medium" },
{4, "large" },
{5, "immobile" },
}}},
{ 0xE, new EnumGroup { A=2, N="leap jump speed", STR = new Dictionary<int, string>()
{
{0, "NONE" },
{1, "very short" },
{2, "short" },
{3, "medium short" },
{4, "medium long" },
{5, "long" },
{6, "very long" },
{7, "infinite" },
}}},
{ 0x10, new C{ T="Float", N = "unattached damage modifier" }},
{ 0x14, new FlagGroup { A=1, N="Bot markup flags", STR = new Dictionary<int, string>()
{
{0, "Interact object" },
{1, "Objective pickup" },
{2, "Deliver location" },
{3, "Ammo replenisher" },
{4, "Health replenisher" },
}}},
{ 0x15, new C{ T="Comment", N = "generated_pad9518" }},
{ 0x18286, new C{ T="Comment", N = "Heat Override" }},
{ 0x18, new C{ T="Tagblock", N = "override heat generated per round", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "heat generated per round override (easy)" }},
{ 0x4, new C{ T="Float", N = "heat generated per round override (normal)" }},
{ 0x8, new C{ T="Float", N = "heat generated per round override (heroic)" }},
{ 0xC, new C{ T="Float", N = "heat generated per round override (legendary)" }},
}, S=16}},
{ 0x2C, new C{ T="Float", N = "Actor LOD cost" }},
}, S=48}},
{ 0x1D4, new C{ T="Tagblock", N = "functions", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="flags", STR = new Dictionary<int, string>()
{
{0, "invert" },
{1, "mapping does not controls active" },
{2, "always active" },
{3, "random time offset" },
{4, "always exports value" },
{5, "turn off with uses magnitude" },
{6, "cannot be predicted" },
}}},
{ 0x4, new C{ T="mmr3Hash", N = "import name" }},
{ 0x8, new C{ T="Float", N = "no import default" }},
{ 0xC, new C{ T="mmr3Hash", N = "export name" }},
{ 0x10, new C{ T="mmr3Hash", N = "turn off with" }},
{ 0x14, new C{ T="mmr3Hash", N = "ranged interpolation name" }},
{ 0x18, new C{ T="Float", N = "min value" }},
{ 0x1C287, new C{ T="Comment", N = "default function" }},
{ 0x1C288, new C{ T="Comment", N = "default function" }},
{ 0x1C289, new C{ T="Comment", N = "" }},
{ 0x1C, new C{ T="Unmapped", N = "data" }},
{ 0x34290, new C{ T="Comment", N = "" }},
{ 0x34, new C{ T="mmr3Hash", N = "scale by" }},
{ 0x38, new EnumGroup { A=1, N="interpolation point of view", STR = new Dictionary<int, string>()
{
{0, "any" },
{1, "first person" },
{2, "third person" },
}}},
{ 0x39, new C{ T="Comment", N = "generated_pad73a4" }},
{ 0x3C, new C{ T="Tagblock", N = "interpolation", B = new Dictionary<long, C>
{
{ 0x0, new EnumGroup { A=4, N="interpolation mode", STR = new Dictionary<int, string>()
{
{0, "constant velocity" },
{1, "linear acceleration" },
{2, "damped spring" },
{3, "fractional" },
}}},
{ 0x4, new C{ T="Float", N = "linear travel time" }},
{ 0x8, new C{ T="Float", N = "acceleration" }},
{ 0xC291, new C{ T="Comment", N = "springs" }},
{ 0xC, new C{ T="Float", N = "spring k" }},
{ 0x10, new C{ T="Float", N = "spring c" }},
{ 0x14, new C{ T="Float", N = "fraction" }},
}, S=24}},
{ 0x50, new C{ T="4Byte", N = "runtime interpolator index" }},
}, S=84}},
{ 0x1E8, new C{ T="4Byte", N = "num predicted runtime interpolator functions" }},
{ 0x1EC, new C{ T="Tagblock", N = "runtime interpolator functions", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="4Byte", N = "runtime interpolator to object function mapping" }},
}, S=4}},
{ 0x200, new C{ T="Tagblock", N = "function switches", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "switch function name" }},
{ 0x4, new C{ T="mmr3Hash", N = "export name" }},
{ 0x8, new C{ T="Tagblock", N = "switched functions", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "selection bounds.min" }},
{ 0x4, new C{ T="Float", N = "selection bounds.max" }},
{ 0x8, new C{ T="mmr3Hash", N = "function name" }},
}, S=12}},
}, S=28}},
{ 0x214, new C{ T="Tagblock", N = "functions forwarded to parent", B = new Dictionary<long, C>
{
{ 0x0292, new C{ T="Comment", N = "Object Function Forwarding" }},
{ 0x0, new C{ T="mmr3Hash", N = "function to forward" }},
}, S=4}},
{ 0x228, new FlagGroup { A=2, N="Ammo Refill Flags", STR = new Dictionary<int, string>()
{
{0, "None" },
{1, "Kinetic" },
{2, "Plasma" },
{3, "Hard light" },
{4, "Shock" },
{5, "Power weapon" },
}}},
{ 0x22A, new FlagGroup { A=1, N="Ammo Refill Behavior Flags", STR = new Dictionary<int, string>()
{
{0, "No automatic refill" },
}}},
{ 0x22B, new C{ T="Byte", N = "generated_pad33a9" }},
{ 0x22C, new C{ T="Tagblock", N = "Ammo Refill Variant Flags", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "variant name" }},
{ 0x4, new FlagGroup { A=2, N="Ammo Refill Flags", STR = new Dictionary<int, string>()
{
{0, "None" },
{1, "Kinetic" },
{2, "Plasma" },
{3, "Hard light" },
{4, "Shock" },
{5, "Power weapon" },
}}},
{ 0x6, new FlagGroup { A=1, N="Ammo Refill Behavior Flags", STR = new Dictionary<int, string>()
{
{0, "No automatic refill" },
}}},
{ 0x7, new C{ T="Byte", N = "generated_pad055c" }},
}, S=8}},
{ 0x240, new FlagGroup { A=4, N="object secondary flags", STR = new Dictionary<int, string>()
{
{0, "does not affect projectile aiming" },
{1, "never delete on bsp transition" },
{2, "Aim assist raycast does not ignore parents" },
{3, "Provides an override motion tracker blip sprite" },
{4, "Use the new animation system only" },
{5, "Detach children when the destroyed" },
{6, "Force projectile overpenetration" },
{7, "Create the Object Node Graph Component" },
{8, "Use inertialization" },
{9, "Cannot be grappled" },
{10, "Can be pulled to the player by the grapple hook" },
{11, "Damage Effect Sounds - Play Ineffective Hit" },
{12, "Always forward unhandled object functions to the parent" },
{13, "is valid submunition target" },
{14, "allow repeated bouncing projectile overpenetration" },
{15, "inconsequential target" },
{16, "active camo always on" },
{17, "object is invisible, even attachments" },
{18, "navmesh collision node opt in" },
{19, "Disable CVW Lighting" },
{20, "All Markers Use Unique Acoustic Sound Sources" },
{21, "Damage ignores owning unit" },
{22, "Enable doppler audio" },
{23, "blocks AOE if the AOE's epicenter is blocked" },
{24, "Enable Damage Hit Ticks" },
{25, "Blocks grapple aim assist" },
{26, "Send Damage Aftermath to Parent" },
}}},
{ 0x244293, new C{ T="Comment", N = "Customization" }},
{ 0x244, new C{ T="mmr3Hash", N = "customization set" }},
{ 0x248294, new C{ T="Comment", N = "" }},
{ 0x248, new C{ T="Tagblock", N = "attachments", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "name" }},
{ 0x4, new C{ T="TagRef", N = "type" }},
{ 0x20, new C{ T="TagRef", N = "tag graph output" }},
{ 0x3C, new C{ T="mmr3Hash", N = "output node name" }},
{ 0x40, new C{ T="Tagblock", N = "tag graph float params", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "name" }},
{ 0x4, new C{ T="Float", N = "value" }},
}, S=8}},
{ 0x54, new C{ T="TagRef", N = "override type" }},
{ 0x70295, new C{ T="Comment", N = "variant names" }},
{ 0x70, new C{ T="Tagblock", N = "variant names", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "variant name" }},
}, S=4}},
{ 0x84296, new C{ T="Comment", N = "" }},
{ 0x84, new C{ T="mmr3Hash", N = "marker" }},
{ 0x88, new EnumGroup { A=1, N="change color", STR = new Dictionary<int, string>()
{
{0, "none" },
{1, "primary" },
{2, "secondary" },
{3, "tertiary" },
{4, "quaternary" },
}}},
{ 0x89, new FlagGroup { A=1, N="flags", STR = new Dictionary<int, string>()
{
{0, "always create" },
{1, "effect size scale from object scale" },
{2, "update on create" },
{3, "always update" },
}}},
{ 0x8A, new C{ T="2Byte", N = "generated_padbd3f" }},
{ 0x8C, new C{ T="mmr3Hash", N = "primary scale" }},
{ 0x90, new C{ T="mmr3Hash", N = "secondary scale" }},
}, S=148}},
{ 0x25C, new C{ T="Tagblock", N = "indirect lighting data", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "Name" }},
{ 0x4, new C{ T="Tagblock", N = "Variant names", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "variant name" }},
}, S=4}},
{ 0x18, new C{ T="TagRef", N = "Object Lightmap" }},
{ 0x34, new C{ T="Tagblock", N = "Object Cubemap set", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "Name" }},
{ 0x4, new FlagGroup { A=4, N="Flags", STR = new Dictionary<int, string>()
{
{0, "Enable Intensity Correction" },
{1, "Capture With Effects" },
{2, "Affects Adjacent Bsps" },
{3, "Capture Dynamic Objects" },
}}},
{ 0x8297, new C{ T="Comment", N = "Dumpling" }},
{ 0x8, new C{ T="Tagblock", N = "inner points", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "position.X" }},
{ 0x4, new C{ T="Float", N = "position.Y" }},
{ 0x8, new C{ T="Float", N = "position.Z" }},
}, S=12}},
{ 0x1C, new C{ T="Tagblock", N = "outer points", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "position.X" }},
{ 0x4, new C{ T="Float", N = "position.Y" }},
{ 0x8, new C{ T="Float", N = "position.Z" }},
}, S=12}},
{ 0x30, new C{ T="Float", N = "height" }},
{ 0x34, new C{ T="Float", N = "sink" }},
{ 0x38, new C{ T="Float", N = "inner value" }},
{ 0x3C, new C{ T="Float", N = "outer value" }},
{ 0x40, new C{ T="Float", N = "center point.X" }},
{ 0x44, new C{ T="Float", N = "center point.Y" }},
{ 0x48, new C{ T="Float", N = "center point.Z" }},
{ 0x4C, new C{ T="Float", N = "trivial cull radius squared" }},
{ 0x50, new C{ T="Float", N = "bound volume" }},
{ 0x54, new C{ T="TagRef", N = "Cubemap Bitmap" }},
{ 0x70, new EnumGroup { A=2, N="Enable Parallax Correction", STR = new Dictionary<int, string>()
{
{0, "Off" },
{1, "On" },
}}},
{ 0x72, new C{ T="2Byte", N = "Cubemap Volume Priority" }},
{ 0x74, new C{ T="Float", N = "Cubemap Origin.X" }},
{ 0x78, new C{ T="Float", N = "Cubemap Origin.Y" }},
{ 0x7C, new C{ T="Float", N = "Cubemap Origin.Z" }},
{ 0x80, new C{ T="Float", N = "Depth Positive.X" }},
{ 0x84, new C{ T="Float", N = "Depth Positive.Y" }},
{ 0x88, new C{ T="Float", N = "Depth Positive.Z" }},
{ 0x8C, new C{ T="Float", N = "Depth Negative.X" }},
{ 0x90, new C{ T="Float", N = "Depth Negative.Y" }},
{ 0x94, new C{ T="Float", N = "Depth Negative.Z" }},
{ 0x98, new EnumGroup { A=2, N="Active Volume", STR = new Dictionary<int, string>()
{
{0, "Off" },
{1, "On" },
}}},
{ 0x9A, new EnumGroup { A=2, N="Maximum cubemap size", STR = new Dictionary<int, string>()
{
{0, "128x128" },
{1, "256x256" },
{2, "512x512" },
}}},
{ 0x9C, new C{ T="Float", N = "Intensity.X" }},
{ 0xA0, new C{ T="Float", N = "Intensity.Y" }},
{ 0xA4, new C{ T="Float", N = "Intensity.Z" }},
{ 0xA8, new C{ T="Float", N = "Self-illum Scale Down" }},
{ 0xAC, new C{ T="Tagblock", N = "EditorMetadata", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="String", N = "folder name" }},
{ 0x100, new C{ T="Float", N = "local space pivot point position.X" }},
{ 0x104, new C{ T="Float", N = "local space pivot point position.Y" }},
{ 0x108, new C{ T="Float", N = "local space pivot point position.Z" }},
}, S=268}},
{ 0xC0, new C{ T="TagRef", N = "owner bsp" }},
{ 0xDC, new C{ T="mmr3Hash", N = "owner variant" }},
{ 0xE0, new C{ T="2Byte", N = "runtime bsp index" }},
{ 0xE2, new C{ T="2Byte", N = "runtime variant index" }},
{ 0xE4, new C{ T="Float", N = "Blend Distance" }},
{ 0xE8, new EnumGroup { A=4, N="Cubemap Volume Type", STR = new Dictionary<int, string>()
{
{0, "Prism" },
{1, "Sphere" },
}}},
{ 0xEC, new C{ T="Float", N = "Orientation" }},
{ 0xF0, new C{ T="TagRef", N = "Cubemap Depth Bitmap" }},
{ 0x10C, new C{ T="Float", N = "Depth Blend Range" }},
{ 0x110, new C{ T="Float", N = "Intensity Scale" }},
{ 0x114, new EnumGroup { A=2, N="Tintable", STR = new Dictionary<int, string>()
{
{0, "Off" },
{1, "On" },
}}},
{ 0x116, new C{ T="2Byte", N = "generated_pad93d5" }},
{ 0x118, new C{ T="Float", N = "Relevancy Radius" }},
}, S=284}},
}, S=72}},
{ 0x270, new C{ T="Tagblock", N = "hull surfaces", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=2, N="flags", STR = new Dictionary<int, string>()
{
{0, "works on land" },
{1, "effects only" },
}}},
{ 0x2, new C{ T="2Byte", N = "generated_pad978b" }},
{ 0x4298, new C{ T="Comment", N = "" }},
{ 0x4, new C{ T="mmr3Hash", N = "marker name" }},
{ 0x8, new C{ T="Float", N = "radius" }},
{ 0xC, new C{ T="Tagblock", N = "drag", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "material" }},
{ 0x4299, new C{ T="Comment", N = "drag" }},
{ 0x4300, new C{ T="Comment", N = "Pressure" }},
{ 0x4301, new C{ T="Comment", N = "pressure" }},
{ 0x4302, new C{ T="Comment", N = "velocity to force" }},
{ 0x4303, new C{ T="Comment", N = "velocity to pressure" }},
{ 0x4304, new C{ T="Comment", N = "" }},
{ 0x4, new C{ T="Unmapped", N = "data" }},
{ 0x1C305, new C{ T="Comment", N = "" }},
{ 0x1C, new C{ T="Float", N = "max velocity" }},
{ 0x20306, new C{ T="Comment", N = "" }},
{ 0x20307, new C{ T="Comment", N = "Suction" }},
{ 0x20308, new C{ T="Comment", N = "suction" }},
{ 0x20309, new C{ T="Comment", N = "velocity to force" }},
{ 0x20310, new C{ T="Comment", N = "velocity to pressure" }},
{ 0x20311, new C{ T="Comment", N = "" }},
{ 0x20, new C{ T="Unmapped", N = "data" }},
{ 0x38312, new C{ T="Comment", N = "" }},
{ 0x38, new C{ T="Float", N = "max velocity" }},
{ 0x3C313, new C{ T="Comment", N = "" }},
{ 0x3C, new C{ T="Float", N = "linear damping" }},
{ 0x40, new C{ T="Float", N = "angular damping" }},
}, S=68}},
}, S=32}},
{ 0x284, new C{ T="Tagblock", N = "jetwash", B = new Dictionary<long, C>
{
{ 0x0314, new C{ T="Comment", N = "" }},
{ 0x0, new C{ T="mmr3Hash", N = "marker name" }},
{ 0x4, new C{ T="Float", N = "radius" }},
{ 0x8, new C{ T="4Byte", N = "maximum traces" }},
{ 0xC, new C{ T="Float", N = "maximum emission length" }},
{ 0x10, new C{ T="Float", N = "trace yaw angle.min" }},
{ 0x14, new C{ T="Float", N = "trace yaw angle.max" }},
{ 0x18, new C{ T="Float", N = "trace pitch angle.min" }},
{ 0x1C, new C{ T="Float", N = "trace pitch angle.max" }},
{ 0x20, new C{ T="Float", N = "particle offset" }},
}, S=36}},
{ 0x298, new C{ T="Tagblock", N = "widgets", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "type" }},
}, S=28}},
{ 0x2AC, new C{ T="Tagblock", N = "change colors", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Tagblock", N = "initial permutations", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "weight" }},
{ 0x4, new C{ T="Unmapped", N = "color lower bound" }},
{ 0x10, new C{ T="Unmapped", N = "color upper bound" }},
{ 0x1C, new C{ T="mmr3Hash", N = "variant name" }},
}, S=32}},
{ 0x14, new C{ T="Tagblock", N = "functions", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="scale flags", STR = new Dictionary<int, string>()
{
{0, "blend in hsv" },
{1, "...more colors" },
}}},
{ 0x4, new C{ T="Unmapped", N = "color lower bound" }},
{ 0x10, new C{ T="Unmapped", N = "color upper bound" }},
{ 0x1C, new C{ T="mmr3Hash", N = "darken by" }},
{ 0x20, new C{ T="mmr3Hash", N = "scale by" }},
}, S=36}},
}, S=40}},
{ 0x2C0, new C{ T="Tagblock", N = "multiplayer object", B = new Dictionary<long, C>
{
{ 0x0315, new C{ T="Comment", N = "TYPE AND FLAGS" }},
{ 0x0, new EnumGroup { A=1, N="type", STR = new Dictionary<int, string>()
{
{0, "ordinary" },
{1, "weapon" },
{2, "grenade" },
{3, "projectile" },
{4, "powerup" },
{5, "equipment" },
{6, "ammo pack" },
{7, "light land vehicle" },
{8, "heavy land vehicle" },
{9, "flying vehicle" },
{10, "turret" },
{11, "device" },
{12, "dispenser" },
{13, "teleporter 2way" },
{14, "teleporter sender" },
{15, "teleporter receiver" },
{16, "player spawn location" },
{17, "player respawn zone" },
{18, "named location area" },
{19, "danger zone" },
{20, "safe volume" },
{21, "kill volume" },
{22, "cinematic camera" },
{23, "trait zone" },
{24, "powerup pad - deprecated" },
{25, "weapon pad" },
{26, "light" },
{27, "jumbotron" },
{28, "man cannon" },
{29, "cinematic marker" },
{30, "script brain" },
{31, "static io" },
{32, "fx" },
{33, "bot navigation marker" },
{34, "jump hint volume" },
}}},
{ 0x1, new FlagGroup { A=1, N="teleporter passability", STR = new Dictionary<int, string>()
{
{0, "disallow players" },
{1, "allow light land vehicles" },
{2, "allow heavy land vehicles" },
{3, "allow flying vehicles" },
{4, "allow projectiles" },
}}},
{ 0x2, new EnumGroup { A=1, N="spawn timer type", STR = new Dictionary<int, string>()
{
{0, "starts on death" },
{1, "starts on disturbance" },
}}},
{ 0x3, new C{ T="Byte", N = "generated_padd1ba" }},
{ 0x4, new C{ T="2Byte", N = "number of fx color overrides" }},
{ 0x6, new C{ T="2Byte", N = "generated_pad1e6f" }},
{ 0x8316, new C{ T="Comment", N = "GOAL AND RESPAWN ZONE OBJECT BOUNDARY" }},
{ 0x8, new C{ T="Float", N = "boundary width/radius" }},
{ 0xC, new C{ T="Float", N = "boundary box length" }},
{ 0x10, new C{ T="Float", N = "boundary +height" }},
{ 0x14, new C{ T="Float", N = "boundary -height" }},
{ 0x18, new EnumGroup { A=1, N="boundary shape", STR = new Dictionary<int, string>()
{
{0, "unused" },
{1, "sphere" },
{2, "cylinder" },
{3, "box" },
}}},
{ 0x19, new C{ T="Byte", N = "pad_shape1" }},
{ 0x1A, new C{ T="2Byte", N = "pad_shape2" }},
{ 0x1C317, new C{ T="Comment", N = "SPAWNING DATA" }},
{ 0x1C, new C{ T="2Byte", N = "default spawn time" }},
{ 0x1E, new C{ T="2Byte", N = "default abandonment time" }},
{ 0x20, new FlagGroup { A=4, N="flags", STR = new Dictionary<int, string>()
{
{0, "Only render if editable" },
{1, "DEPRECATED phased physics in forge" },
{2, "valid initial player spawn" },
{3, "fixed boundary orientation" },
{4, "candy monitor should ignore" },
{5, "inherit owning team color" },
{6, "boundary volume doesn't kill immediately" },
{7, "Only collision if editable" },
{8, "Only physics if editable" },
{9, "Force render in Forge" },
{10, "respawn player spawn" },
{11, "fallback player spawn" },
{12, "jump hint volume is one-way" },
}}},
{ 0x24318, new C{ T="Comment", N = "RESPAWN ZONE DATA" }},
{ 0x24, new C{ T="Float", N = "normal weight" }},
{ 0x28, new C{ T="Tagblock", N = "falloff function", B = new Dictionary<long, C>
{
{ 0x0319, new C{ T="Comment", N = "function" }},
{ 0x0320, new C{ T="Comment", N = "function" }},
{ 0x0321, new C{ T="Comment", N = "function" }},
{ 0x0322, new C{ T="Comment", N = "" }},
{ 0x0, new C{ T="Unmapped", N = "data" }},
{ 0x18323, new C{ T="Comment", N = "" }},
}, S=24}},
{ 0x3C324, new C{ T="Comment", N = "MARKER DATA" }},
{ 0x3C325, new C{ T="Comment", N = "" }},
{ 0x3C, new C{ T="mmr3Hash", N = "boundary center marker" }},
{ 0x40326, new C{ T="Comment", N = "" }},
{ 0x40, new C{ T="mmr3Hash", N = "spawned object marker name" }},
{ 0x44327, new C{ T="Comment", N = "SPAWNED OBJECT" }},
{ 0x44, new C{ T="TagRef", N = "spawned object" }},
{ 0x60, new C{ T="mmr3Hash", N = "NYI boundary material" }},
{ 0x64328, new C{ T="Comment", N = "BOUNDARY SHADER - DEFAULT" }},
{ 0x64, new C{ T="TagRef", N = "boundary standard shader" }},
{ 0x80329, new C{ T="Comment", N = "BOUNDARY SHADER - SPHERE" }},
{ 0x80, new C{ T="TagRef", N = "sphere standard shader" }},
{ 0x9C330, new C{ T="Comment", N = "BOUNDARY SHADER - CYLINDER" }},
{ 0x9C, new C{ T="TagRef", N = "cylinder standard shader" }},
{ 0xB8331, new C{ T="Comment", N = "BOUNDARY SHADER - BOX" }},
{ 0xB8, new C{ T="TagRef", N = "box standard shader" }},
{ 0xD4332, new C{ T="Comment", N = "FORGE DATA" }},
{ 0xD4, new FlagGroup { A=2, N="Forge Property Flags", STR = new Dictionary<int, string>()
{
{0, "Disable yaw" },
{1, "Can Only Be Rotated On Yaw" },
{2, "Allow In Game Variant Toggle" },
{3, "Disable primary color change" },
{4, "Disable secondary color change" },
{5, "Disable tertiary color change" },
{6, "Disable normal physics" },
{7, "Disable fixed physics" },
{8, "Disable phased physics" },
}}},
{ 0xD6, new EnumGroup { A=1, N="Default Physics Type", STR = new Dictionary<int, string>()
{
{0, "Normal" },
{1, "Fixed" },
{2, "Phased" },
}}},
{ 0xD7, new C{ T="Byte", N = "generated_pad6b24" }},
{ 0xD8, new C{ T="mmr3Hash", N = "Default Primary Color" }},
{ 0xDC, new C{ T="mmr3Hash", N = "Default Secondary Color" }},
{ 0xE0, new C{ T="mmr3Hash", N = "Default Tertiary Color" }},
{ 0xE4, new C{ T="Byte", N = "Default Primary Glossiness" }},
{ 0xE5, new C{ T="Byte", N = "Default Secondary Glossiness" }},
{ 0xE6, new C{ T="Byte", N = "Default Tertiary Glossiness" }},
{ 0xE7, new C{ T="Byte", N = "generated_padb7d9" }},
{ 0xE8, new C{ T="mmr3Hash", N = "Default Label [1]" }},
{ 0xEC, new C{ T="mmr3Hash", N = "Default Label [2]" }},
{ 0xF0, new C{ T="mmr3Hash", N = "Default Label [3]" }},
{ 0xF4, new C{ T="mmr3Hash", N = "Default Label [4]" }},
{ 0xF8, new C{ T="Pointer", N = "m_defaultBoundaryPipelineState" }},
{ 0x100, new C{ T="Pointer", N = "m_sphereBoundaryPipelineStates" }},
{ 0x108, new C{ T="Pointer", N = "m_cylinderBoundaryPipelineStates" }},
{ 0x110, new C{ T="Pointer", N = "m_boxBoundaryPipelineStates" }},
{ 0x118, new C{ T="Float", N = "Callout Radius" }},
{ 0x11C, new C{ T="4Byte", N = "generated_pad048e" }},
}, S=288}},
{ 0x2D4, new C{ T="Tagblock", N = "Forge data", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "Palette" }},
{ 0x1C, new C{ T="mmr3Hash", N = "Name" }},
{ 0x20, new C{ T="mmr3Hash", N = "Description" }},
{ 0x24, new C{ T="Float", N = "Placement Priority" }},
{ 0x28, new C{ T="mmr3Hash", N = "Variant Name" }},
{ 0x2C, new C{ T="TagRef", N = "Configuration" }},
{ 0x48, new C{ T="Float", N = "Starting yaw/pitch/roll.X" }},
{ 0x4C, new C{ T="Float", N = "Starting yaw/pitch/roll.Y" }},
{ 0x50, new C{ T="Float", N = "Starting yaw/pitch/roll.Z" }},
}, S=84}},
{ 0x2E8, new C{ T="TagRef", N = "simulation_interpolation" }},
{ 0x304, new C{ T="TagRef", N = "authority trust settings" }},
{ 0x320, new C{ T="Tagblock", N = "spawn effects", B = new Dictionary<long, C>
{
{ 0x0333, new C{ T="Comment", N = "Spawn Effects" }},
{ 0x0, new C{ T="TagRef", N = "multiplayer spawn effect" }},
{ 0x1C, new C{ T="TagRef", N = "campaign spawn effect" }},
}, S=56}},
{ 0x334, new C{ T="Tagblock", N = "model dissolve data", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "model dissolve data" }},
}, S=28}},
{ 0x348, new C{ T="String", N = "class name" }},
{ 0x448, new C{ T="Tagblock", N = "script tagalongs", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "reference" }},
}, S=28}},
{ 0x45C, new C{ T="TagRef", N = "prototype script" }},
{ 0x478334, new C{ T="Comment", N = "Object Abandoment" }},
{ 0x478335, new C{ T="Comment", N = "object abandonment" }},
{ 0x478, new C{ T="Float", N = "Vitality Limit To Start Countdown" }},
{ 0x47C, new C{ T="Float", N = "Countdown Time In Seconds" }},
{ 0x480, new FlagGroup { A=1, N="flags", STR = new Dictionary<int, string>()
{
{0, "Enable In Multiplayer" },
{1, "Enable In Single Player" },
}}},
{ 0x481, new C{ T="Comment", N = "generated_pade8bf" }},
{ 0x484, new C{ T="Tagblock", N = "Designer Metadata", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "meta label" }},
}, S=4}},
{ 0x498336, new C{ T="Comment", N = "Object Function Smoothing" }},
{ 0x498, new C{ T="Tagblock", N = "Object Sound RTPCs", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="4Byte", N = "Attachment Index" }},
{ 0x4, new C{ T="mmr3Hash", N = "Function" }},
{ 0x8, new C{ T="mmr3Hash", N = "RTPC Name" }},
{ 0xC, new C{ T="4Byte", N = "RTPC name hash value" }},
}, S=16}},
{ 0x4AC, new C{ T="Tagblock", N = "Object Sound Sweeteners", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "Function" }},
{ 0x4, new C{ T="TagRef", N = "sound" }},
{ 0x20, new C{ T="Float", N = "Switch point" }},
{ 0x24, new C{ T="4Byte", N = "Mode" }},
}, S=40}},
{ 0x4C0, new C{ T="mmr3Hash", N = "Audio acoustics root marker override" }},
{ 0x4C4, new C{ T="Float", N = "Audio Acoustics Transparency" }},
{ 0x4C8, new C{ T="Tagblock", N = "Object function smoothing", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "id" }},
{ 0x4, new C{ T="mmr3Hash", N = "alias of" }},
{ 0x8, new C{ T="Float", N = "smoothing factor" }},
}, S=12}},
{ 0x4DC, new EnumGroup { A=1, N="Animated mesh animation type", STR = new Dictionary<int, string>()
{
{0, "None" },
{1, "One Time" },
{2, "Looping" },
}}},
{ 0x4DD, new C{ T="Comment", N = "generated_pad805e" }},
{ 0x4E0, new C{ T="Float", N = "Placement cost multiplier" }},
{ 0x4E4, new C{ T="TagRef", N = "Trigger volume component info" }},
{ 0x500, new C{ T="Tagblock", N = "Tracking Info", B = new Dictionary<long, C>
{
{ 0x0337, new C{ T="Comment", N = "Map these settings to a ping type" }},
{ 0x0, new FlagGroup { A=1, N="flags", STR = new Dictionary<int, string>()
{
{0, "trackable" },
{1, "enabled by default" },
{2, "outline" },
{3, "immediate response" },
{4, "follow offscreen" },
{5, "do not track children" },
{6, "do not outline children" },
}}},
{ 0x1, new EnumGroup { A=1, N="ping type", STR = new Dictionary<int, string>()
{
{0, "active" },
{1, "passive" },
{2, "custom active" },
{3, "target marking" },
}}},
{ 0x2, new EnumGroup { A=1, N="team visibility", STR = new Dictionary<int, string>()
{
{0, "visible to everyone" },
{1, "hidden from enemies" },
{2, "hidden from friends" },
}}},
{ 0x3338, new C{ T="Comment", N = "Misc" }},
{ 0x3, new EnumGroup { A=1, N="priority", STR = new Dictionary<int, string>()
{
{0, "critical" },
{1, "high" },
{2, "normal" },
{3, "low" },
}}},
{ 0x4339, new C{ T="Comment", N = "" }},
{ 0x4, new C{ T="mmr3Hash", N = "ping group" }},
{ 0x8340, new C{ T="Comment", N = "Nav Point" }},
{ 0x8, new C{ T="mmr3Hash", N = "nav point screen" }},
{ 0xC, new C{ T="mmr3Hash", N = "nav point label" }},
{ 0x10, new C{ T="Float", N = "nav point vertical offset" }},
{ 0x14341, new C{ T="Comment", N = "" }},
{ 0x14342, new C{ T="Comment", N = "Range Override" }},
{ 0x14, new C{ T="Float", N = "range" }},
{ 0x18343, new C{ T="Comment", N = "Effects" }},
{ 0x18, new C{ T="TagRef", N = "ping hit instigator effect" }},
{ 0x34, new C{ T="TagRef", N = "ping hit effect" }},
{ 0x50, new C{ T="TagRef", N = "outline override" }},
{ 0x6C344, new C{ T="Comment", N = "" }},
}, S=108}},
{ 0x514, new C{ T="TagRef", N = "Property Based Effects" }},
{ 0x530, new C{ T="Tagblock", N = "Interactions", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "Marker" }},
{ 0x4, new C{ T="Tagblock", N = "Ambient Info", B = new Dictionary<long, C>
{
{ 0x0, new EnumGroup { A=1, N="desire type", STR = new Dictionary<int, string>()
{
{0, "Scripted" },
{1, "Health" },
{2, "Defense" },
{3, "Attack Enemy" },
{4, "Weapon" },
{5, "Vehicle" },
}}},
{ 0x1, new C{ T="Comment", N = "generated_pad5f2a" }},
{ 0x4, new EnumGroup { A=4, N="action", STR = new Dictionary<int, string>()
{
{0, "Base (Do not use)" },
{1, "Ground" },
{2, "Crouch" },
{3, "Melee" },
{4, "Turn" },
{5, "Shoot" },
{6, "Airborne" },
{7, "Jump" },
{8, "WeaponReady" },
{9, "WeaponSwitch" },
{10, "WeaponPickup" },
{11, "WeaponDrop" },
{12, "Grenade" },
{13, "Dead" },
{14, "AnimatedMove" },
{15, "InteractWeaponPickup" },
{16, "InteractDevice" },
{17, "InteractLaunchObject" },
{18, "HardPing" },
{19, "Align" },
{20, "ShieldRaise" },
{21, "ActivateEquipment" },
{22, "PhysicsImpulse" },
{23, "DeathPing" },
{24, "MediumPing" },
{25, "SoftPing" },
{26, "ScriptedSequence" },
{27, "CustomAnimation" },
{28, "DeflectProjectile" },
{29, "VehicleEnter" },
{30, "VehicleExit" },
{31, "Vehicle" },
{32, "Brace" },
{33, "WeaponDraw" },
{34, "WeaponStow" },
{35, "HardStop" },
{36, "Hoist" },
{37, "PreCombatPointActivity" },
{38, "Stunned" },
{39, "ObstacleSmash" },
{40, "WeaponVent" },
{41, "SoftPingDefenseScreen" },
{42, "ThrowEquipment" },
{43, "Hijack" },
{44, "Kamikaze" },
{45, "CloseQuartersDefenseBlast" },
{46, "Search" },
{47, "SearchFound" },
{48, "Surprise" },
{49, "Hover" },
{50, "Alert" },
{51, "AlertCallout" },
{52, "WeaponFidget" },
{53, "WeaponReload" },
{54, "FullbodyAnimation" },
{55, "ActivateCamo" },
{56, "TradeWeapon" },
{57, "Flying" },
{58, "MultiTargetTrackedAttack" },
{59, "Berserk" },
{60, "LeapWindup" },
{61, "AnimatedTell" },
{62, "TeleportArrive" },
{63, "JinkFire" },
{64, "DialogueAnimation" },
{65, "Swoop" },
{66, "AirborneMelee" },
{67, "Land" },
{68, "Hunker" },
{69, "Launching" },
{70, "PreAndPostFire" },
{71, "AnimatedPosture" },
{72, "Boarding" },
}}},
{ 0x8, new C{ T="mmr3Hash", N = "Animation Token Override" }},
{ 0xC, new C{ T="Float", N = "Time playing animation" }},
{ 0x10, new C{ T="Float", N = "Cooldown time" }},
{ 0x14, new C{ T="mmr3Hash", N = "composition name" }},
{ 0x18, new C{ T="TagRef", N = "composition definition" }},
{ 0x34, new C{ T="Float", N = "Max distance agents will consider this opp from" }},
{ 0x38, new C{ T="Tagblock", N = "Ambient meta labels", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "meta label" }},
}, S=4}},
{ 0x4C, new C{ T="Tagblock", N = "Exclusion meta labels", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "meta label" }},
}, S=4}},
{ 0x60, new C{ T="Float", N = "Min Danger to Activate" }},
{ 0x64, new C{ T="Float", N = "Max Danger to Activate" }},
{ 0x68, new C{ T="Float", N = "Abort Danger Level" }},
{ 0x6C, new C{ T="Float", N = "Chance Per Second" }},
{ 0x70, new C{ T="Float", N = "Min Enemy Target Distance" }},
{ 0x74, new C{ T="Float", N = "Max Enemy Target Distance" }},
{ 0x78, new C{ T="Float", N = "Max Height Difference" }},
}, S=124}},
}, S=24}},
{ 0x544345, new C{ T="Comment", N = "Motion tracker blips" }},
{ 0x544, new EnumGroup { A=1, N="blip sprite index override", STR = new Dictionary<int, string>()
{
{0, "Self" },
{1, "Vehicle Ally" },
{2, "Vehicle Enemy" },
{3, "Vehicle Ally Gutter" },
{4, "Vehicle Enemy Gutter" },
{5, "Vehicle Ally Vertical" },
{6, "Vehicle Enemy Vertical" },
{7, "Vehicle Ally Gutter Vertical" },
{8, "Vehicle Enemy Gutter Vertical" },
{9, "Human Ally" },
{10, "Human Enemy" },
{11, "Human Ally Gutter" },
{12, "Human Enemy Gutter" },
{13, "Human Ally Vertical" },
{14, "Human Enemy Vertical" },
{15, "Human Ally Gutter Vertical" },
{16, "Human Enemy Gutter Vertical" },
{17, "Major AI Ally" },
{18, "Major AI Enemy" },
{19, "Major AI Ally Gutter" },
{20, "Major AI Enemy Gutter" },
{21, "Major AI Ally Vertical" },
{22, "Major AI Enemy Vertical" },
{23, "Major AI Ally Gutter Vertical" },
{24, "Major AI Enemy Gutter Vertical" },
{25, "Minor AI Ally" },
{26, "Minor AI Enemy" },
{27, "Minor AI Ally Vertical" },
{28, "Minor AI Enemy Vertical" },
{29, "Unnamed sprite index29" },
{30, "Unnamed sprite index30" },
{31, "Unnamed sprite index31" },
}}},
{ 0x545, new C{ T="Comment", N = "generated_pad9a3f" }},
{ 0x548346, new C{ T="Comment", N = "" }},
{ 0x548, new C{ T="Tagblock", N = "data driven scripted sequence actions definitions.", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="String", N = "Prototype trigger lua function name" }},
{ 0x20, new C{ T="Tagblock", N = "Component Actions", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="String", N = "Request action lua function name" }},
{ 0x20, new C{ T="String", N = "Go to next action condition lua function name" }},
}, S=64}},
}, S=52}},
{ 0x55C, new C{ T="TagRef", N = "Animation Node Graph" }},
{ 0x578347, new C{ T="Comment", N = "Anim Set Table" }},
{ 0x578, new C{ T="Tagblock", N = "channels", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "channel" }},
}, S=4}},
{ 0x58C, new C{ T="Tagblock", N = "table entries", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "token" }},
{ 0x4, new C{ T="TagRef", N = "animset" }},
{ 0x20, new C{ T="TagRef", N = "Runtime animset (used by code only)" }},
{ 0x3C, new C{ T="Byte", N = "is default" }},
{ 0x3D, new C{ T="Byte", N = "generated_padca09" }},
{ 0x3E, new FlagGroup { A=2, N="flags", STR = new Dictionary<int, string>()
{
{0, "is default" },
}}},
{ 0x40, new C{ T="Tagblock", N = "Variants", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "Variant" }},
}, S=4}},
}, S=84}},
{ 0x5A0, new C{ T="Float", N = "Inertialization Duration" }},
{ 0x5A4, new C{ T="Float", N = "Pill Offset Blend Rate For Ground IK" }},
{ 0x5A8, new C{ T="Float", N = "Stationary Root Offset Limit.min" }},
{ 0x5AC, new C{ T="Float", N = "Stationary Root Offset Limit.max" }},
{ 0x5B0, new C{ T="Float", N = "Moving Root Offset Limit.min" }},
{ 0x5B4, new C{ T="Float", N = "Moving Root Offset Limit.max" }},
{ 0x5B8, new C{ T="Float", N = "Ground IK marker above ground tolerance" }},
{ 0x5BC, new C{ T="Float", N = "Ground Probe Start Position Height Scale for Ground IK" }},
{ 0x5C0, new C{ T="Float", N = "Ground Probe Additional Height Distance" }},
{ 0x5C4, new C{ T="Unmapped", N = "Anim Set Nodegraph Metadata" }},
{ 0x5DC348, new C{ T="Comment", N = "Root Bone Correction Settings" }},
{ 0x5DC349, new C{ T="Comment", N = "RootBoneCorrectionSettings" }},
{ 0x5DC, new FlagGroup { A=1, N="flags", STR = new Dictionary<int, string>()
{
{0, "AnimEventFunctionOverrideCorrectionType" },
}}},
{ 0x5DD, new EnumGroup { A=1, N="Root Bone Correction Type", STR = new Dictionary<int, string>()
{
{0, "Off" },
{1, "FractionOfAnimationDuration" },
{2, "StaticDuration" },
}}},
{ 0x5DE, new C{ T="2Byte", N = "generated_pad0a63" }},
{ 0x5E0, new C{ T="Float", N = "Root Bone Correction Duration" }},
{ 0x5E4, new EnumGroup { A=1, N="Root Bone Correction Bone Index", STR = new Dictionary<int, string>()
{
{0, "RootBone" },
{1, "Pelvis" },
}}},
{ 0x5E5, new C{ T="Comment", N = "generated_padbdae" }},
{ 0x5E8350, new C{ T="Comment", N = "" }},
{ 0x5E8, new C{ T="Tagblock", N = "Leg Grounding Settings", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "Marker" }},
{ 0x4, new C{ T="Float", N = "Planted Threshold" }},
{ 0x8, new C{ T="Float", N = "Lifted Threshold" }},
{ 0xC, new C{ T="Float", N = "Lifted Minimum Time" }},
{ 0x10, new EnumGroup { A=2, N="Event", STR = new Dictionary<int, string>()
{
{0, "none" },
{1, "primary_keyframe" },
{2, "secondary_keyframe" },
{3, "tertiary_keyframe" },
{4, "left_foot" },
{5, "right_foot" },
{6, "allow_interruption" },
{7, "do_not_allow_interruption" },
{8, "both_feet_shuffle" },
{9, "body_impact" },
{10, "left_foot_lock" },
{11, "left_foot_unlock" },
{12, "right_foot_lock" },
{13, "right_foot_unlock" },
{14, "blend_range_marker" },
{15, "stride_expansion" },
{16, "stride_contraction" },
{17, "ragdoll_keyframe" },
{18, "drop_weapon_keyframe" },
{19, "match_a" },
{20, "match_b" },
{21, "match_c" },
{22, "match_d" },
{23, "jetpack_closed" },
{24, "jetpack_open" },
{25, "sound_event" },
{26, "effect_event" },
{27, "left_hand" },
{28, "right_hand" },
{29, "grenade" },
{30, "melee" },
{31, "interact_device" },
{32, "shield_raise" },
{33, "activate_equipment" },
{34, "aoe_attack" },
{35, "equipment" },
{36, "jink_fire" },
{37, "align_to_target" },
{38, "block_exiting" },
{39, "set_interruptable" },
{40, "disable_shooting" },
{41, "re_enable_shooting" },
{42, "skip_crouch_transition" },
{43, "start_bamf" },
{44, "end_bamf" },
{45, "hide" },
{46, "frame_attachment_objects_show" },
{47, "frame_attachment_objects_hide" },
{48, "creature_physics_mode_change" },
{49, "melee_range" },
{50, "frame_attachment_switch_to_secondary_parent_marker" },
{51, "frame_attachment_switch_to_default_parent_marker" },
{52, "allow_sprint_interrupt" },
}}},
{ 0x12, new C{ T="2Byte", N = "generated_paddc16" }},
}, S=20}},
{ 0x5FC351, new C{ T="Comment", N = "Wrist Break Fixup" }},
{ 0x5FC, new C{ T="Float", N = "Wrist Break Interp Time" }},
{ 0x600, new C{ T="Float", N = "Wrist Break Angle Limit" }},
{ 0x604, new C{ T="Float", N = "Wrist Break Fixup Scale" }},
{ 0x608352, new C{ T="Comment", N = "" }},
{ 0x608, new FlagGroup { A=1, N="Flags", STR = new Dictionary<int, string>()
{
{0, "Use Procedural Footstep Events" },
{1, "Use Wrist Break IK Fixup" },
}}},
{ 0x609, new C{ T="Comment", N = "generated_pad6f99" }},
{ 0x60C353, new C{ T="Comment", N = "Object Node Graph" }},
{ 0x60C, new C{ T="Tagblock", N = "Object Node Graphs", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "Name" }},
{ 0x4, new C{ T="TagRef", N = "Exported Node Graph" }},
{ 0x20, new FlagGroup { A=1, N="Flags", STR = new Dictionary<int, string>()
{
{0, "Runs on Server" },
{1, "Runs on Client" },
{2, "Start updating on the first frame" },
}}},
{ 0x21, new EnumGroup { A=1, N="Enable Node Graph", STR = new Dictionary<int, string>()
{
{0, "Default" },
{1, "Yes" },
{2, "No" },
}}},
{ 0x22, new C{ T="2Byte", N = "generated_pad8671" }},
}, S=36}},
{ 0x620354, new C{ T="Comment", N = "" }},
{ 0x620, new C{ T="Tagblock", N = "parent animation matching", B = new Dictionary<long, C>
{
{ 0x0355, new C{ T="Comment", N = "ANIMATION REMAPPING" }},
{ 0x0, new C{ T="mmr3Hash", N = "animation on parent" }},
{ 0x4, new C{ T="mmr3Hash", N = "animation to play on object" }},
{ 0x8, new C{ T="mmr3Hash", N = "animation set to use with the child object's animation" }},
}, S=12}},
{ 0x634356, new C{ T="Comment", N = "model variant switching" }},
{ 0x634357, new C{ T="Comment", N = "MODEL VARIANT SWITCHING" }},
{ 0x634, new C{ T="mmr3Hash", N = "model variant switching function" }},
{ 0x638, new C{ T="Tagblock", N = "model variant switching table", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "function result range.min" }},
{ 0x4, new C{ T="Float", N = "function result range.max" }},
{ 0x8, new C{ T="mmr3Hash", N = "model variant name" }},
}, S=12}},
{ 0x64C358, new C{ T="Comment", N = "" }},
{ 0x64C359, new C{ T="Comment", N = "knockback" }},
{ 0x64C, new C{ T="Float", N = "knockback impulse scalar" }},
{ 0x650360, new C{ T="Comment", N = "" }},
{ 0x650361, new C{ T="Comment", N = "Ability Components" }},
{ 0x650, new C{ T="Tagblock", N = "location sensor", B = new Dictionary<long, C>
{
{ 0x0362, new C{ T="Comment", N = "Sensor Parameters" }},
{ 0x0, new FlagGroup { A=4, N="sensor flags", STR = new Dictionary<int, string>()
{
{0, "use proximity activation" },
{1, "use reveal duration inside detection radius" },
{2, "use order based reveal delays" },
{3, "don't reveal targets to the motion tracker" },
{4, "only play radius effect for owner" },
{5, "show player name instead of health" },
}}},
{ 0x4, new C{ T="Float", N = "ping frequency" }},
{ 0x8, new C{ T="Float", N = "ping radius" }},
{ 0xC, new C{ T="Float", N = "reveal duration" }},
{ 0x10, new C{ T="Float", N = "scanning duration" }},
{ 0x14, new C{ T="Float", N = "minimum delay between marks" }},
{ 0x18, new C{ T="Float", N = "delay per distance" }},
{ 0x1C363, new C{ T="Comment", N = "" }},
{ 0x1C364, new C{ T="Comment", N = "Sensor Visuals" }},
{ 0x1C, new C{ T="TagRef", N = "sensor radius effect" }},
{ 0x38, new C{ T="mmr3Hash", N = "sensor radius effect marker" }},
{ 0x3C, new C{ T="TagRef", N = "sensor ping effect" }},
{ 0x58365, new C{ T="Comment", N = "" }},
{ 0x58366, new C{ T="Comment", N = "Target Visuals" }},
{ 0x58, new C{ T="TagRef", N = "target outline" }},
{ 0x74, new C{ T="TagRef", N = "target visor ping effect" }},
{ 0x90, new C{ T="mmr3Hash", N = "target visor ping effect marker" }},
{ 0x94367, new C{ T="Comment", N = "" }},
{ 0x94368, new C{ T="Comment", N = "Navpoints" }},
{ 0x94, new C{ T="mmr3Hash", N = "sensor navpoint name" }},
{ 0x98, new C{ T="mmr3Hash", N = "sensor navpoint marker" }},
{ 0x9C, new C{ T="mmr3Hash", N = "target navpoint name" }},
{ 0xA0, new C{ T="mmr3Hash", N = "target navpoint marker" }},
{ 0xA4369, new C{ T="Comment", N = "" }},
}, S=164}},
{ 0x664, new C{ T="Tagblock", N = "shroud generator", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "outer radius" }},
{ 0x4, new C{ T="mmr3Hash", N = "edge effect marker" }},
{ 0x8, new C{ T="TagRef", N = "biped enter effect" }},
{ 0x24, new C{ T="TagRef", N = "biped inside effect" }},
{ 0x40, new C{ T="TagRef", N = "biped leave effect" }},
{ 0x5C370, new C{ T="Comment", N = "Mapping function" }},
{ 0x5C371, new C{ T="Comment", N = "inside shrouded mapping" }},
{ 0x5C372, new C{ T="Comment", N = "" }},
{ 0x5C, new C{ T="Unmapped", N = "data" }},
{ 0x74373, new C{ T="Comment", N = "" }},
{ 0x74, new C{ T="Float", N = "max distance inside for shroud" }},
{ 0x78374, new C{ T="Comment", N = "Mapping function" }},
{ 0x78375, new C{ T="Comment", N = "outside shrouded mapping" }},
{ 0x78376, new C{ T="Comment", N = "" }},
{ 0x78, new C{ T="Unmapped", N = "data" }},
{ 0x90377, new C{ T="Comment", N = "" }},
{ 0x90, new C{ T="Float", N = "max distance outside for shroud" }},
{ 0x94378, new C{ T="Comment", N = "Blocker" }},
{ 0x94, new C{ T="TagRef", N = "blocker object" }},
{ 0xB0, new C{ T="mmr3Hash", N = "blocker attach marker" }},
{ 0xB4, new C{ T="mmr3Hash", N = "blocker attach child marker" }},
{ 0xB8, new C{ T="Float", N = "blocker scale" }},
{ 0xBC379, new C{ T="Comment", N = "" }},
}, S=188}},
{ 0x678380, new C{ T="Comment", N = "" }},
{ 0x678, new C{ T="Tagblock", N = "Power Component", B = new Dictionary<long, C>
{
{ 0x0381, new C{ T="Comment", N = "Power Component System" }},
{ 0x0, new C{ T="Tagblock", N = "power source configurations", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "name" }},
{ 0x4, new C{ T="Float", N = "capacity" }},
}, S=8}},
{ 0x14, new C{ T="Tagblock", N = "power sources", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "region name" }},
{ 0x4, new C{ T="4Byte", N = "runtime region index" }},
{ 0x8382, new C{ T="Comment", N = "Model Region Damage State Configurations" }},
{ 0x8, new C{ T="Tagblock", N = "state configurations", B = new Dictionary<long, C>
{
{ 0x0, new EnumGroup { A=2, N="region state", STR = new Dictionary<int, string>()
{
{0, "default" },
{1, "minor damage" },
{2, "medium damage" },
{3, "major damage" },
{4, "destroyed" },
}}},
{ 0x2, new C{ T="2Byte", N = "configuration" }},
}, S=4}},
}, S=28}},
{ 0x28383, new C{ T="Comment", N = "communication node capacity" }},
{ 0x28, new C{ T="Tagblock", N = "communication node power sources", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="2Byte", N = "component" }},
}, S=2}},
{ 0x3C, new C{ T="mmr3Hash", N = "communication node power modifier id" }},
{ 0x40384, new C{ T="Comment", N = "" }},
{ 0x40385, new C{ T="Comment", N = "locomotion capacity" }},
{ 0x40, new C{ T="Tagblock", N = "locomotion power sources", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="2Byte", N = "component" }},
}, S=2}},
{ 0x54, new C{ T="mmr3Hash", N = "locomotion power modifier id" }},
{ 0x58386, new C{ T="Comment", N = "locomotion power modifier" }},
{ 0x58387, new C{ T="Comment", N = "locomotion power modifier" }},
{ 0x58, new C{ T="Float", N = "Base Value" }},
{ 0x5C, new C{ T="Float", N = "Value Bounds.min" }},
{ 0x60, new C{ T="Float", N = "Value Bounds.max" }},
{ 0x64388, new C{ T="Comment", N = "" }},
{ 0x64389, new C{ T="Comment", N = "weapon capacity" }},
{ 0x64, new C{ T="Tagblock", N = "weapon power sources", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="2Byte", N = "component" }},
}, S=2}},
{ 0x78, new C{ T="mmr3Hash", N = "weapon power modifier id" }},
{ 0x7C390, new C{ T="Comment", N = "" }},
}, S=124}},
{ 0x68C, new C{ T="Tagblock", N = "self destruct handler", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Tagblock", N = "Self destruct sounds", B = new Dictionary<long, C>
{
{ 0x0391, new C{ T="Comment", N = "SELF DESTRUCTION SOUNDS" }},
{ 0x0, new C{ T="4Byte", N = "active damage section count" }},
{ 0x4, new C{ T="TagRef", N = "sound to play" }},
}, S=32}},
}, S=20}},
{ 0x6A0, new C{ T="Tagblock", N = "Indirect Lighting Component", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "Lightmap attachment bone" }},
}, S=4}},
{ 0x6B4392, new C{ T="Comment", N = "" }},
{ 0x6B4, new C{ T="4Byte", N = "generated_paddd0c" }},
{ 0x6B8393, new C{ T="Comment", N = "$$$ UNIT $$$" }},
{ 0x6B8, new FlagGroup { A=4, N="unit flags", STR = new Dictionary<int, string>()
{
{0, "circular aiming" },
{1, "destroyed after dying" },
{2, "half-speed interpolation" },
{3, "fires from camera" },
{4, "entrance inside bounding sphere" },
{5, "doesn't show readied weapon" },
{6, "causes passenger dialogue" },
{7, "resists pings" },
{8, "melee attack is fatal" },
{9, "don't reface during pings" },
{10, "has no aiming" },
{11, "impact melee attaches to unit" },
{12, "impact melee dies on shields" },
{13, "cannot open doors automatically" },
{14, "melee attackers cannot attach" },
{15, "not instantly killed by melee" },
{16, "flashlight power doesnt transfer to weapon" },
{17, "runs around flaming" },
{18, "top level for AOE damage" },
{19, "special cinematic unit" },
{20, "ignored by autoaiming" },
{21, "shields fry infection forms" },
{22, "use velocity as acceleration" },
{23, "can dual wield" },
{24, "acts as gunner for parent" },
{25, "controlled by parent gunner" },
{26, "parent's primary weapon" },
{27, "parent's secondary weapon" },
{28, "unit has vectored thrust" },
{29, "allow aim while opening or closing" },
{30, "compute acceleration from aiming" },
{31, "override all pings" },
}}},
{ 0x6BC, new FlagGroup { A=4, N="flags2", STR = new Dictionary<int, string>()
{
{0, "unit supports bailout" },
{1, "flying_or_vehicle_hard_pings_allowed" },
{2, "attempt to fire from weapon matching camera" },
{3, "treat as vehicle " },
{4, "dropped weapons can dissolve" },
{5, "hard pings not allowed for driver-less vehicle" },
{6, "No friendly bump damage " },
{7, "ignores attachment feedback forced hard pings" },
{8, "unit appears on radar as dot not sprite" },
{9, "suppress radar blip" },
{10, "do not ignore parents for line of sight tests" },
{11, "do not pass attached AOE damage to children" },
{12, "do not generate AI line of fire pill for unit" },
{13, "allows procedural soft pings" },
{14, "allows procedural recoils" },
{15, "hide unreadied weapons" },
{16, "disable collision at death" },
{17, "always hard ping at death" },
{18, "component required - active camo" },
{19, "component required - power up" },
{20, "Preserve controlled aim and look directions, after/while unit is no longer controlled" },
{21, "Disable Damage Effect Sounds on this unit (defer to material effects)" },
{22, "Always play material effect sounds" },
{23, "Bucket unit audio priority based on distance" },
{24, "Play a minor lethal sound upon death" },
{25, "Allow children to play damage effect sounds" },
{26, "Disallow Lunge" },
}}},
{ 0x6C0, new EnumGroup { A=2, N="default team", STR = new Dictionary<int, string>()
{
{0, "default" },
{1, "player" },
{2, "human" },
{3, "covenant" },
{4, "brute" },
{5, "mule" },
{6, "wild_captive" },
{7, "wild_free" },
{8, "spare" },
{9, "covenant_player" },
{10, "forerunner" },
{11, "neutral" },
}}},
{ 0x6C2, new EnumGroup { A=2, N="constant sound volume", STR = new Dictionary<int, string>()
{
{0, "silent" },
{1, "quiet" },
{2, "medium" },
{3, "shout" },
{4, "loud" },
}}},
{ 0x6C4, new C{ T="TagRef", N = "hologram unit reference" }},
{ 0x6E0, new C{ T="Tagblock", N = "campaign metagame bucket", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=1, N="flags", STR = new Dictionary<int, string>()
{
{0, "only counts with riders" },
}}},
{ 0x1, new EnumGroup { A=1, N="type", STR = new Dictionary<int, string>()
{
{0, "grunt" },
{1, "jackal" },
{2, "skirmisher" },
{3, "marine" },
{4, "spartan" },
{5, "bugger" },
{6, "hunter" },
{7, "flood_infection" },
{8, "flood_carrier" },
{9, "flood_combat" },
{10, "flood_pure" },
{11, "sentinel" },
{12, "elite" },
{13, "engineer" },
{14, "mule" },
{15, "turret" },
{16, "mongoose" },
{17, "warthog" },
{18, "scorpion" },
{19, "hornet" },
{20, "pelican" },
{21, "revenant" },
{22, "seraph" },
{23, "shade" },
{24, "watchtower" },
{25, "ghost" },
{26, "chopper" },
{27, "mauler" },
{28, "wraith" },
{29, "banshee" },
{30, "phantom" },
{31, "scarab" },
{32, "guntower" },
{33, "tuning_fork" },
{34, "broadsword" },
{35, "mammoth" },
{36, "lich" },
{37, "mantis" },
{38, "wasp" },
{39, "phaeton" },
{40, "bishop" },
{41, "knight" },
{42, "pawn" },
{43, "soldier" },
{44, "packmaster" },
{45, "cavalier" },
{46, "brute" },
{47, "hoverer" },
{48, "crusher" },
}}},
{ 0x2, new EnumGroup { A=1, N="class", STR = new Dictionary<int, string>()
{
{0, "infantry" },
{1, "leader" },
{2, "hero" },
{3, "specialist" },
{4, "light vehicle" },
{5, "heavy vehicle" },
{6, "giant vehicle" },
{7, "standard vehicle" },
}}},
{ 0x3, new C{ T="Byte", N = "generated_pad6695" }},
{ 0x4, new C{ T="2Byte", N = "point count" }},
}, S=6}},
{ 0x6F4, new C{ T="Tagblock", N = "screen effects", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "screen effect" }},
}, S=28}},
{ 0x708, new C{ T="Float", N = "camera stiffness" }},
{ 0x70C394, new C{ T="Comment", N = "unit camera" }},
{ 0x70C395, new C{ T="Comment", N = "Unit Camera" }},
{ 0x70C, new FlagGroup { A=2, N="flags", STR = new Dictionary<int, string>()
{
{0, "pitch bounds absolute space" },
{1, "only collides with environment" },
{2, "hides player-unit from camera" },
{3, "use aiming vector instead of marker forward" },
}}},
{ 0x70E, new C{ T="2Byte", N = "generated_padc79e" }},
{ 0x710396, new C{ T="Comment", N = "" }},
{ 0x710, new C{ T="mmr3Hash", N = "camera marker name" }},
{ 0x714, new C{ T="Float", N = "pitch auto-level" }},
{ 0x718, new C{ T="Float", N = "pitch range.min" }},
{ 0x71C, new C{ T="Float", N = "pitch range.max" }},
{ 0x720, new C{ T="Tagblock", N = "camera tracks", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "track" }},
{ 0x1C, new C{ T="TagRef", N = "screen effect" }},
{ 0x38, new C{ T="Float", N = "transition time in" }},
{ 0x3C, new C{ T="Float", N = "transition time out" }},
}, S=64}},
{ 0x734, new C{ T="Float", N = "pitch minimum spring" }},
{ 0x738, new C{ T="Float", N = "pitch mmaximum spring" }},
{ 0x73C, new C{ T="Float", N = "spring velocity" }},
{ 0x740, new C{ T="Float", N = "look acceleration" }},
{ 0x744, new C{ T="Float", N = "look deceleration" }},
{ 0x748, new C{ T="Float", N = "look acc smoothing fraction" }},
{ 0x74C, new C{ T="Float", N = "field of view bias" }},
{ 0x750397, new C{ T="Comment", N = "camera obstruction" }},
{ 0x750, new C{ T="Float", N = "cylinder fraction" }},
{ 0x754, new C{ T="Float", N = "obstruction test angle" }},
{ 0x758, new C{ T="Float", N = "obstruction max inward accel" }},
{ 0x75C, new C{ T="Float", N = "obstruction max outward accel" }},
{ 0x760, new C{ T="Float", N = "obstruction max velocity" }},
{ 0x764, new C{ T="Float", N = "obstruction return delay" }},
{ 0x768, new C{ T="Tagblock", N = "camera acceleration", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "maximum camera velocity" }},
{ 0x4398, new C{ T="Comment", N = "" }},
{ 0x4399, new C{ T="Comment", N = "forward/back" }},
{ 0x4, new EnumGroup { A=1, N="Input Variable", STR = new Dictionary<int, string>()
{
{0, "linear velocity" },
{1, "linear acceleration" },
{2, "yaw" },
{3, "pitch" },
{4, "roll" },
}}},
{ 0x5, new C{ T="Comment", N = "generated_padd066" }},
{ 0x8400, new C{ T="Comment", N = "mapping" }},
{ 0x8401, new C{ T="Comment", N = "mapping" }},
{ 0x8402, new C{ T="Comment", N = "" }},
{ 0x8, new C{ T="Unmapped", N = "data" }},
{ 0x20403, new C{ T="Comment", N = "" }},
{ 0x20, new C{ T="Float", N = "maximum value" }},
{ 0x24, new C{ T="Float", N = "camera scale (axial)" }},
{ 0x28, new C{ T="Float", N = "camera scale (perpendicular)" }},
{ 0x2C404, new C{ T="Comment", N = "left/right" }},
{ 0x2C, new EnumGroup { A=1, N="Input Variable", STR = new Dictionary<int, string>()
{
{0, "linear velocity" },
{1, "linear acceleration" },
{2, "yaw" },
{3, "pitch" },
{4, "roll" },
}}},
{ 0x2D, new C{ T="Comment", N = "generated_padd066" }},
{ 0x30405, new C{ T="Comment", N = "mapping" }},
{ 0x30406, new C{ T="Comment", N = "mapping" }},
{ 0x30407, new C{ T="Comment", N = "" }},
{ 0x30, new C{ T="Unmapped", N = "data" }},
{ 0x48408, new C{ T="Comment", N = "" }},
{ 0x48, new C{ T="Float", N = "maximum value" }},
{ 0x4C, new C{ T="Float", N = "camera scale (axial)" }},
{ 0x50, new C{ T="Float", N = "camera scale (perpendicular)" }},
{ 0x54409, new C{ T="Comment", N = "up/down" }},
{ 0x54, new EnumGroup { A=1, N="Input Variable", STR = new Dictionary<int, string>()
{
{0, "linear velocity" },
{1, "linear acceleration" },
{2, "yaw" },
{3, "pitch" },
{4, "roll" },
}}},
{ 0x55, new C{ T="Comment", N = "generated_padd066" }},
{ 0x58410, new C{ T="Comment", N = "mapping" }},
{ 0x58411, new C{ T="Comment", N = "mapping" }},
{ 0x58412, new C{ T="Comment", N = "" }},
{ 0x58, new C{ T="Unmapped", N = "data" }},
{ 0x70413, new C{ T="Comment", N = "" }},
{ 0x70, new C{ T="Float", N = "maximum value" }},
{ 0x74, new C{ T="Float", N = "camera scale (axial)" }},
{ 0x78, new C{ T="Float", N = "camera scale (perpendicular)" }},
}, S=124}},
{ 0x77C414, new C{ T="Comment", N = "" }},
{ 0x77C415, new C{ T="Comment", N = "sync action camera fields" }},
{ 0x77C416, new C{ T="Comment", N = "sync action camera" }},
{ 0x77C417, new C{ T="Comment", N = "Unit Camera" }},
{ 0x77C, new FlagGroup { A=2, N="flags", STR = new Dictionary<int, string>()
{
{0, "pitch bounds absolute space" },
{1, "only collides with environment" },
{2, "hides player-unit from camera" },
{3, "use aiming vector instead of marker forward" },
}}},
{ 0x77E, new C{ T="2Byte", N = "generated_padc79e" }},
{ 0x780418, new C{ T="Comment", N = "" }},
{ 0x780, new C{ T="mmr3Hash", N = "camera marker name" }},
{ 0x784, new C{ T="Float", N = "pitch auto-level" }},
{ 0x788, new C{ T="Float", N = "pitch range.min" }},
{ 0x78C, new C{ T="Float", N = "pitch range.max" }},
{ 0x790, new C{ T="Tagblock", N = "camera tracks", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "track" }},
{ 0x1C, new C{ T="TagRef", N = "screen effect" }},
{ 0x38, new C{ T="Float", N = "transition time in" }},
{ 0x3C, new C{ T="Float", N = "transition time out" }},
}, S=64}},
{ 0x7A4, new C{ T="Float", N = "pitch minimum spring" }},
{ 0x7A8, new C{ T="Float", N = "pitch mmaximum spring" }},
{ 0x7AC, new C{ T="Float", N = "spring velocity" }},
{ 0x7B0, new C{ T="Float", N = "look acceleration" }},
{ 0x7B4, new C{ T="Float", N = "look deceleration" }},
{ 0x7B8, new C{ T="Float", N = "look acc smoothing fraction" }},
{ 0x7BC, new C{ T="Float", N = "field of view bias" }},
{ 0x7C0419, new C{ T="Comment", N = "camera obstruction" }},
{ 0x7C0, new C{ T="Float", N = "cylinder fraction" }},
{ 0x7C4, new C{ T="Float", N = "obstruction test angle" }},
{ 0x7C8, new C{ T="Float", N = "obstruction max inward accel" }},
{ 0x7CC, new C{ T="Float", N = "obstruction max outward accel" }},
{ 0x7D0, new C{ T="Float", N = "obstruction max velocity" }},
{ 0x7D4, new C{ T="Float", N = "obstruction return delay" }},
{ 0x7D8, new C{ T="Tagblock", N = "camera acceleration", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "maximum camera velocity" }},
{ 0x4420, new C{ T="Comment", N = "" }},
{ 0x4421, new C{ T="Comment", N = "forward/back" }},
{ 0x4, new EnumGroup { A=1, N="Input Variable", STR = new Dictionary<int, string>()
{
{0, "linear velocity" },
{1, "linear acceleration" },
{2, "yaw" },
{3, "pitch" },
{4, "roll" },
}}},
{ 0x5, new C{ T="Comment", N = "generated_padd066" }},
{ 0x8422, new C{ T="Comment", N = "mapping" }},
{ 0x8423, new C{ T="Comment", N = "mapping" }},
{ 0x8424, new C{ T="Comment", N = "" }},
{ 0x8, new C{ T="Unmapped", N = "data" }},
{ 0x20425, new C{ T="Comment", N = "" }},
{ 0x20, new C{ T="Float", N = "maximum value" }},
{ 0x24, new C{ T="Float", N = "camera scale (axial)" }},
{ 0x28, new C{ T="Float", N = "camera scale (perpendicular)" }},
{ 0x2C426, new C{ T="Comment", N = "left/right" }},
{ 0x2C, new EnumGroup { A=1, N="Input Variable", STR = new Dictionary<int, string>()
{
{0, "linear velocity" },
{1, "linear acceleration" },
{2, "yaw" },
{3, "pitch" },
{4, "roll" },
}}},
{ 0x2D, new C{ T="Comment", N = "generated_padd066" }},
{ 0x30427, new C{ T="Comment", N = "mapping" }},
{ 0x30428, new C{ T="Comment", N = "mapping" }},
{ 0x30429, new C{ T="Comment", N = "" }},
{ 0x30, new C{ T="Unmapped", N = "data" }},
{ 0x48430, new C{ T="Comment", N = "" }},
{ 0x48, new C{ T="Float", N = "maximum value" }},
{ 0x4C, new C{ T="Float", N = "camera scale (axial)" }},
{ 0x50, new C{ T="Float", N = "camera scale (perpendicular)" }},
{ 0x54431, new C{ T="Comment", N = "up/down" }},
{ 0x54, new EnumGroup { A=1, N="Input Variable", STR = new Dictionary<int, string>()
{
{0, "linear velocity" },
{1, "linear acceleration" },
{2, "yaw" },
{3, "pitch" },
{4, "roll" },
}}},
{ 0x55, new C{ T="Comment", N = "generated_padd066" }},
{ 0x58432, new C{ T="Comment", N = "mapping" }},
{ 0x58433, new C{ T="Comment", N = "mapping" }},
{ 0x58434, new C{ T="Comment", N = "" }},
{ 0x58, new C{ T="Unmapped", N = "data" }},
{ 0x70435, new C{ T="Comment", N = "" }},
{ 0x70, new C{ T="Float", N = "maximum value" }},
{ 0x74, new C{ T="Float", N = "camera scale (axial)" }},
{ 0x78, new C{ T="Float", N = "camera scale (perpendicular)" }},
}, S=124}},
{ 0x7EC436, new C{ T="Comment", N = "" }},
{ 0x7EC, new C{ T="mmr3Hash", N = "unit markup name for weapon class override" }},
{ 0x7F0, new C{ T="TagRef", N = "seat acceleration" }},
{ 0x80C, new C{ T="Float", N = "pain major total damage threshold" }},
{ 0x810437, new C{ T="Comment", N = "pings" }},
{ 0x810, new C{ T="Float", N = "soft ping threshold" }},
{ 0x814, new C{ T="Float", N = "soft ping interrupt time" }},
{ 0x818, new C{ T="Float", N = "hard ping threshold" }},
{ 0x81C, new C{ T="Float", N = "hard ping interrupt time" }},
{ 0x820, new C{ T="Float", N = "soft death direction speed threshold" }},
{ 0x824, new C{ T="Float", N = "hard death threshold" }},
{ 0x828, new C{ T="Float", N = "feign death threshold" }},
{ 0x82C, new C{ T="Float", N = "feign death time" }},
{ 0x830, new C{ T="Float", N = "pain screen duration" }},
{ 0x834, new C{ T="Float", N = "pain screen region fade out duration" }},
{ 0x838, new C{ T="Float", N = "pain screen region fade out weight threshold" }},
{ 0x83C, new C{ T="Float", N = "pain screen angle tolerance" }},
{ 0x840, new C{ T="Float", N = "pain screen angle randomness" }},
{ 0x844, new C{ T="Float", N = "defensive screen duration" }},
{ 0x848, new C{ T="Float", N = "defensive screen scrub fallback fraction" }},
{ 0x84C438, new C{ T="Comment", N = "" }},
{ 0x84C, new C{ T="Float", N = "distance of dive anim" }},
{ 0x850, new C{ T="Float", N = "terminal velocity fall ratio" }},
{ 0x854439, new C{ T="Comment", N = "stun" }},
{ 0x854, new C{ T="Float", N = "stun movement penalty" }},
{ 0x858, new C{ T="Float", N = "stun turning penalty" }},
{ 0x85C, new C{ T="Float", N = "stun jumping penalty" }},
{ 0x860, new C{ T="Float", N = "minimum stun time" }},
{ 0x864, new C{ T="Float", N = "maximum stun time" }},
{ 0x868440, new C{ T="Comment", N = "" }},
{ 0x868, new C{ T="Float", N = "feign death chance" }},
{ 0x86C, new C{ T="Float", N = "feign repeat chance" }},
{ 0x870, new C{ T="TagRef", N = "spawned turret character" }},
{ 0x88C441, new C{ T="Comment", N = "aiming/looking" }},
{ 0x88C, new C{ T="mmr3Hash", N = "target aiming pivot marker name" }},
{ 0x890, new C{ T="Float", N = "aiming velocity maximum" }},
{ 0x894, new C{ T="Float", N = "aiming acceleration maximum" }},
{ 0x898, new C{ T="Float", N = "casual aiming modifier" }},
{ 0x89C, new C{ T="Float", N = "looking velocity maximum" }},
{ 0x8A0, new C{ T="Float", N = "looking acceleration maximum" }},
{ 0x8A4, new C{ T="Float", N = "Dropped ability object velocity" }},
{ 0x8A8442, new C{ T="Comment", N = "" }},
{ 0x8A8, new C{ T="Float", N = "object velocity maximum" }},
{ 0x8AC, new C{ T="mmr3Hash", N = "right_hand_node" }},
{ 0x8B0, new C{ T="mmr3Hash", N = "left_hand_node" }},
{ 0x8B4443, new C{ T="Comment", N = "more damn nodes" }},
{ 0x8B4, new C{ T="mmr3Hash", N = "preferred_gun_node" }},
{ 0x8B8444, new C{ T="Comment", N = "" }},
{ 0x8B8, new C{ T="mmr3Hash", N = "preferred_grenade_marker" }},
{ 0x8BC445, new C{ T="Comment", N = "Weapon Specific Markers" }},
{ 0x8BC, new C{ T="Tagblock", N = "weapon specific markers", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "complete weapon name" }},
{ 0x4, new C{ T="mmr3Hash", N = "weapon class" }},
{ 0x8, new C{ T="mmr3Hash", N = "weapon name" }},
{ 0xC446, new C{ T="Comment", N = "" }},
{ 0xC, new C{ T="mmr3Hash", N = "right hand marker" }},
{ 0x10447, new C{ T="Comment", N = "" }},
{ 0x10, new C{ T="mmr3Hash", N = "left hand marker" }},
}, S=20}},
{ 0x8D0448, new C{ T="Comment", N = "melee damage" }},
{ 0x8D0, new C{ T="TagRef", N = "melee damage" }},
{ 0x8EC, new C{ T="TagRef", N = "native melee override" }},
{ 0x908449, new C{ T="Comment", N = "your momma" }},
{ 0x908, new C{ T="TagRef", N = "boarding melee damage" }},
{ 0x924, new C{ T="TagRef", N = "boarding melee response" }},
{ 0x940, new C{ T="TagRef", N = "eviction melee damage" }},
{ 0x95C, new C{ T="TagRef", N = "eviction melee response" }},
{ 0x978, new C{ T="TagRef", N = "landing melee damage" }},
{ 0x994, new C{ T="TagRef", N = "flurry melee damage" }},
{ 0x9B0, new C{ T="TagRef", N = "obstacle smash damage" }},
{ 0x9CC450, new C{ T="Comment", N = "" }},
{ 0x9CC, new EnumGroup { A=2, N="motion sensor blip style enemy", STR = new Dictionary<int, string>()
{
{0, "major" },
{1, "minor" },
}}},
{ 0x9CE, new EnumGroup { A=2, N="motion sensor blip style friendly", STR = new Dictionary<int, string>()
{
{0, "major" },
{1, "minor" },
}}},
{ 0x9D0, new EnumGroup { A=2, N="item owner size", STR = new Dictionary<int, string>()
{
{0, "small" },
{1, "medium" },
{2, "large" },
{3, "huge" },
}}},
{ 0x9D2, new C{ T="2Byte", N = "generated_pad9055" }},
{ 0x9D4, new C{ T="Float", N = "motion tracker range modifier" }},
{ 0x9D8, new C{ T="mmr3Hash", N = "equipment variant name" }},
{ 0x9DC, new C{ T="mmr3Hash", N = "grounded equipment variant name" }},
{ 0x9E0, new C{ T="Tagblock", N = "Hud audio cues", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Tagblock", N = "Hud audio cues", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "sound" }},
{ 0x1C, new FlagGroup { A=4, N="latched to", STR = new Dictionary<int, string>()
{
{0, "health recharging" },
{1, "health recharging - from healing" },
{2, "health minor damaged" },
{3, "health major damaged" },
{4, "health critical damaged" },
{5, "health minor" },
{6, "health major" },
{7, "health critical" },
{8, "shield recharging" },
{9, "shield recharging - from healing" },
{10, "shield minor damaged" },
{11, "shield major damaged" },
{12, "shield critical damaged" },
{13, "shield minor" },
{14, "shield major" },
{15, "shield critical" },
{16, "player tracked" },
{17, "player locked" },
{18, "player downed" },
}}},
{ 0x20, new C{ T="Float", N = "scale" }},
}, S=36}},
{ 0x14451, new C{ T="Comment", N = "health thresholds" }},
{ 0x14, new C{ T="Float", N = "health minor" }},
{ 0x18, new C{ T="Float", N = "health major" }},
{ 0x1C, new C{ T="Float", N = "health critical" }},
{ 0x20452, new C{ T="Comment", N = "" }},
{ 0x20453, new C{ T="Comment", N = "shield thresholds" }},
{ 0x20, new C{ T="Float", N = "shield minor" }},
{ 0x24, new C{ T="Float", N = "shield major" }},
{ 0x28, new C{ T="Float", N = "shield critical" }},
{ 0x2C454, new C{ T="Comment", N = "" }},
}, S=44}},
{ 0x9F4, new C{ T="Tagblock", N = "dialogue variants", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="2Byte", N = "variant number" }},
{ 0x2, new C{ T="2Byte", N = "generated_padef78" }},
{ 0x4, new C{ T="TagRef", N = "dialogue" }},
}, S=32}},
{ 0xA08455, new C{ T="Comment", N = "standard grenade throw" }},
{ 0xA08, new C{ T="Float", N = "grenade angle" }},
{ 0xA0C, new C{ T="Float", N = "grenade angle max elevation" }},
{ 0xA10, new C{ T="Float", N = "grenade angle min elevation" }},
{ 0xA14, new C{ T="Float", N = "grenade velocity" }},
{ 0xA18, new C{ T="Float", N = "grenade rotational velocity min.X" }},
{ 0xA1C, new C{ T="Float", N = "grenade rotational velocity min.Y" }},
{ 0xA20, new C{ T="Float", N = "grenade rotational velocity min.Z" }},
{ 0xA24, new C{ T="Float", N = "greande rotational velocity max.X" }},
{ 0xA28, new C{ T="Float", N = "greande rotational velocity max.Y" }},
{ 0xA2C, new C{ T="Float", N = "greande rotational velocity max.Z" }},
{ 0xA30456, new C{ T="Comment", N = "grenade throw speed scalar" }},
{ 0xA30457, new C{ T="Comment", N = "grenade throw speed scalar" }},
{ 0xA30, new C{ T="Float", N = "Base Value" }},
{ 0xA34, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xA38, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xA3C458, new C{ T="Comment", N = "" }},
{ 0xA3C459, new C{ T="Comment", N = "primary weapon toss" }},
{ 0xA3C, new C{ T="Float", N = "weapon angle" }},
{ 0xA40, new C{ T="Float", N = "weapon angle max elevation" }},
{ 0xA44, new C{ T="Float", N = "weapon angle min elevation" }},
{ 0xA48, new C{ T="Float", N = "weapon velocity" }},
{ 0xA4C, new C{ T="Float", N = "weapon rotational velocity min.X" }},
{ 0xA50, new C{ T="Float", N = "weapon rotational velocity min.Y" }},
{ 0xA54, new C{ T="Float", N = "weapon rotational velocity min.Z" }},
{ 0xA58, new C{ T="Float", N = "weapon rotational velocity max.X" }},
{ 0xA5C, new C{ T="Float", N = "weapon rotational velocity max.Y" }},
{ 0xA60, new C{ T="Float", N = "weapon rotational velocity max.Z" }},
{ 0xA64460, new C{ T="Comment", N = "" }},
{ 0xA64, new C{ T="Tagblock", N = "powered seats", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "driver powerup time" }},
{ 0x4, new C{ T="Float", N = "driver powerdown time" }},
}, S=8}},
{ 0xA78, new C{ T="Tagblock", N = "weapons", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "weapon" }},
{ 0x1C, new C{ T="mmr3Hash", N = "weapon name" }},
{ 0x20, new C{ T="mmr3Hash", N = "variant name" }},
{ 0x24, new EnumGroup { A=4, N="position", STR = new Dictionary<int, string>()
{
{0, "primary or backpack" },
{1, "secondary" },
}}},
{ 0x28, new FlagGroup { A=1, N="weapon flags", STR = new Dictionary<int, string>()
{
{0, "Cannot fire any weapon while boosting" },
}}},
{ 0x29, new C{ T="Comment", N = "generated_paddad2" }},
{ 0x2C, new C{ T="Float", N = "maximum firing cone angle" }},
{ 0x30, new C{ T="Float", N = "max firing cone angle cosine" }},
{ 0x34, new C{ T="Float", N = "minimum retarget time" }},
{ 0x38, new C{ T="Float", N = "blind fire time" }},
{ 0x3C, new C{ T="Float", N = "lead fraction" }},
{ 0x40, new C{ T="Float", N = "engagement range.min" }},
{ 0x44, new C{ T="Float", N = "engagement range.max" }},
{ 0x48, new C{ T="Float", N = "proximity score multiplier" }},
{ 0x4C, new C{ T="Float", N = "direction score multiplier" }},
{ 0x50, new C{ T="Float", N = "attacker score multiplier" }},
{ 0x54, new C{ T="Float", N = "targeting weight hologram" }},
{ 0x58, new C{ T="Float", N = "targeting weight auto turret" }},
{ 0x5C, new C{ T="Float", N = "primary fire delay from idle" }},
{ 0x60, new C{ T="Float", N = "secondary fire delay from idle" }},
{ 0x64, new C{ T="Float", N = "caution duration" }},
{ 0x68, new C{ T="Float", N = "alert angular speed max" }},
{ 0x6C, new C{ T="Float", N = "idle angular speed max" }},
{ 0x70, new C{ T="Float", N = "targeting yaw min" }},
{ 0x74, new C{ T="Float", N = "targeting yaw max" }},
{ 0x78, new C{ T="Float", N = "targeting pitch min" }},
{ 0x7C, new C{ T="Float", N = "targeting pitch max" }},
{ 0x80, new C{ T="Float", N = "idle scanning yaw min" }},
{ 0x84, new C{ T="Float", N = "idle scanning yaw max" }},
{ 0x88, new C{ T="Float", N = "idle scanning pitch min" }},
{ 0x8C, new C{ T="Float", N = "idle scanning pitch max" }},
{ 0x90, new C{ T="Float", N = "idle scanning min interest distance" }},
{ 0x94, new C{ T="TagRef", N = "alert mode effect" }},
{ 0xB0461, new C{ T="Comment", N = "" }},
{ 0xB0, new C{ T="mmr3Hash", N = "alert mode effect marker" }},
{ 0xB4, new C{ T="mmr3Hash", N = "alert mode effect primary scale" }},
{ 0xB8, new C{ T="mmr3Hash", N = "alert mode effect secondary scale" }},
{ 0xBC, new C{ T="Tagblock", N = "sentry properties", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=1, N="behavior", STR = new Dictionary<int, string>()
{
{0, "performs yaw scanning" },
{1, "secondary barrel starts enabled" },
{2, "only use vehicle range scale if secondary barrel active" },
{3, "only use vehicle score bonus if secondary barrel active" },
}}},
{ 0x1, new C{ T="Comment", N = "generated_pad4624" }},
{ 0x4, new C{ T="Float", N = "sight cone angle" }},
{ 0x8, new C{ T="Float", N = "sight cone cosine" }},
{ 0xC, new C{ T="Float", N = "alert range" }},
{ 0x10, new C{ T="Float", N = "attack range" }},
{ 0x14, new C{ T="Float", N = "attack range score multiplier" }},
{ 0x18, new C{ T="Float", N = "light vehicle range scale" }},
{ 0x1C, new C{ T="Float", N = "heavy vehicle range scale" }},
{ 0x20, new C{ T="Float", N = "flying vehicle range scale" }},
{ 0x24, new C{ T="Float", N = "light vehicle score bonus" }},
{ 0x28, new C{ T="Float", N = "heavy vehicle score bonus" }},
{ 0x2C, new C{ T="Float", N = "flying vehicle score bonus" }},
{ 0x30, new C{ T="Float", N = "current target score bonus" }},
{ 0x34, new C{ T="Float", N = "startup time" }},
{ 0x38, new C{ T="Float", N = "primary fire time" }},
{ 0x3C, new C{ T="Float", N = "secondary fire time" }},
{ 0x40, new C{ T="TagRef", N = "player entered alert range sound" }},
{ 0x5C, new C{ T="TagRef", N = "player exited alert range sound" }},
{ 0x78462, new C{ T="Comment", N = "Node graph events" }},
{ 0x78463, new C{ T="Comment", N = "Events to fire on state transitions" }},
{ 0x78, new C{ T="Tagblock", N = "Transition Events", B = new Dictionary<long, C>
{
{ 0x0, new EnumGroup { A=4, N="From state", STR = new Dictionary<int, string>()
{
{0, "Startup" },
{1, "Idle" },
{2, "Alert" },
{3, "Attack" },
{4, "Inactive" },
{5, "Any state" },
}}},
{ 0x4, new EnumGroup { A=4, N="To state", STR = new Dictionary<int, string>()
{
{0, "Startup" },
{1, "Idle" },
{2, "Alert" },
{3, "Attack" },
{4, "Inactive" },
{5, "Any state" },
}}},
{ 0x8, new C{ T="mmr3Hash", N = "Event" }},
}, S=12}},
{ 0x8C464, new C{ T="Comment", N = "" }},
}, S=140}},
{ 0xD0, new C{ T="Float", N = "target camouflage threshold" }},
}, S=212}},
{ 0xA8C, new C{ T="Tagblock", N = "target tracking", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=1, N="target tracking flags", STR = new Dictionary<int, string>()
{
{0, "only enable when aimed down sight" },
{1, "never lose target lock" },
{2, "only enable when in alt fire" },
}}},
{ 0x1, new C{ T="Comment", N = "generated_pada390" }},
{ 0x4, new C{ T="Tagblock", N = "tracking types", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "tracking type" }},
}, S=4}},
{ 0x18, new C{ T="Float", N = "acquire time" }},
{ 0x1C, new C{ T="Float", N = "grace time" }},
{ 0x20, new C{ T="Float", N = "decay time" }},
{ 0x24, new C{ T="Byte", N = "max target locks" }},
{ 0x25, new C{ T="Comment", N = "generated_padbd71" }},
{ 0x28, new C{ T="TagRef", N = "tracking sound" }},
{ 0x44, new C{ T="TagRef", N = "locked sound" }},
}, S=96}},
{ 0xAA0, new C{ T="Tagblock", N = "seats", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=4, N="flags", STR = new Dictionary<int, string>()
{
{0, "invisible" },
{1, "locked" },
{2, "driver" },
{3, "gunner" },
{4, "third person camera" },
{5, "allows weapons" },
{6, "third person on enter" },
{7, "first person camera slaved to gun." },
{8, "not valid without driver" },
{9, "allow AI noncombatants" },
{10, "boarding seat" },
{11, "ai firing disabled by max acceleration" },
{12, "boarding enters seat" },
{13, "boarding need any passenger" },
{14, "invalid for player" },
{15, "invalid for non-player" },
{16, "invalid for hero" },
{17, "gunner (player only)" },
{18, "invisible under major damage" },
{19, "melee instant killable" },
{20, "leader preference" },
{21, "allows exit and detach" },
{22, "blocks headshots" },
{23, "exits to ground" },
{24, "forward from attachment" },
{25, "disallow AI shooting" },
{26, "prevents weapon stowing" },
{27, "takes top level aoe damage" },
{28, "disallow exit" },
{29, "local aiming" },
{30, "pelvis relative attachment" },
{31, "apply velocity on death exit" },
}}},
{ 0x4, new FlagGroup { A=4, N="secondary flags", STR = new Dictionary<int, string>()
{
{0, "skip obstacle check" },
{1, "search parent for entry marker" },
{2, "gunner release aim on exit" },
{3, "fully open before allowing exit" },
{4, "finish melee before allowing exit" },
{5, "kill parent if unit in seat dies" },
{6, "co-pilot" },
{7, "ejectable seat" },
{8, "kill on ejection" },
{9, "use head marker for navpoint" },
{10, "allows equipment and grenade switching" },
}}},
{ 0x8, new EnumGroup { A=4, N="passenger seat designator", STR = new Dictionary<int, string>()
{
{0, "MidCenter" },
{1, "LeftBack" },
{2, "LeftFront" },
{3, "MidLeftBack" },
{4, "MidLeft" },
{5, "MidLeftFront" },
{6, "RightBack" },
{7, "RightFront" },
{8, "MidRightBack" },
{9, "MidRight" },
{10, "MidRightFront" },
{11, "LeftFrontRow1" },
{12, "LeftFrontRow2" },
{13, "LeftFrontRow3" },
{14, "LeftFrontRow4" },
{15, "LeftBackRow1" },
{16, "LeftBackRow2" },
{17, "LeftBackRow3" },
{18, "LeftBackRow4" },
{19, "RightFrontRow1" },
{20, "RightFrontRow2" },
{21, "RightFrontRow3" },
{22, "RightFrontRow4" },
{23, "RightBackRow1" },
{24, "RightBackRow2" },
{25, "RightBackRow3" },
{26, "RightBackRow4" },
}}},
{ 0xC, new EnumGroup { A=1, N="seat has infinite grenades of type", STR = new Dictionary<int, string>()
{
{0, "none" },
{1, "fragmentation grenade" },
{2, "plasma grenade" },
{3, "lightning grenade" },
{4, "spike grenade" },
{5, "sapper grenade" },
{6, "stasis grenade" },
}}},
{ 0xD, new EnumGroup { A=1, N="seat selection priority", STR = new Dictionary<int, string>()
{
{0, "normal" },
{1, "high" },
}}},
{ 0xE, new C{ T="2Byte", N = "generated_pad811e" }},
{ 0x10, new C{ T="mmr3Hash", N = "label text" }},
{ 0x14, new C{ T="String", N = "label" }},
{ 0x34465, new C{ T="Comment", N = "" }},
{ 0x34, new C{ T="mmr3Hash", N = "marker name" }},
{ 0x38466, new C{ T="Comment", N = "" }},
{ 0x38, new C{ T="mmr3Hash", N = "entry marker(s) name" }},
{ 0x3C467, new C{ T="Comment", N = "" }},
{ 0x3C, new C{ T="mmr3Hash", N = "exit marker name" }},
{ 0x40468, new C{ T="Comment", N = "" }},
{ 0x40, new C{ T="mmr3Hash", N = "ui marker name" }},
{ 0x44, new C{ T="mmr3Hash", N = "ui navpoint name" }},
{ 0x48469, new C{ T="Comment", N = "" }},
{ 0x48, new C{ T="mmr3Hash", N = "boarding grenade marker" }},
{ 0x4C, new C{ T="mmr3Hash", N = "boarding grenade string" }},
{ 0x50, new C{ T="mmr3Hash", N = "boarding melee string" }},
{ 0x54, new C{ T="mmr3Hash", N = "in-seat string" }},
{ 0x58, new C{ T="Tagblock", N = "ai model targets", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "model target name" }},
}, S=4}},
{ 0x6C, new C{ T="Float", N = "ping scale" }},
{ 0x70, new C{ T="Float", N = "turnover time" }},
{ 0x74470, new C{ T="Comment", N = "seat acceleration spring" }},
{ 0x74, new C{ T="TagRef", N = "seat acceleration" }},
{ 0x90, new C{ T="Float", N = "AI scariness" }},
{ 0x94, new EnumGroup { A=2, N="ai seat type", STR = new Dictionary<int, string>()
{
{0, "NONE" },
{1, "passenger" },
{2, "gunner" },
{3, "small cargo" },
{4, "large cargo" },
{5, "driver" },
}}},
{ 0x96, new C{ T="2Byte", N = "boarding seat" }},
{ 0x98, new C{ T="Tagblock", N = "additional boarding seats", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="2Byte", N = "seat" }},
}, S=2}},
{ 0xAC471, new C{ T="Comment", N = "seat switching" }},
{ 0xAC472, new C{ T="Comment", N = "explanation" }},
{ 0xAC473, new C{ T="Comment", N = "seat switching" }},
{ 0xAC474, new C{ T="Comment", N = "up" }},
{ 0xAC475, new C{ T="Comment", N = "up" }},
{ 0xAC, new C{ T="mmr3Hash", N = "destinationSeat" }},
{ 0xB0, new C{ T="mmr3Hash", N = "animation" }},
{ 0xB4, new C{ T="Float", N = "seat switch cooldown time" }},
{ 0xB8476, new C{ T="Comment", N = "" }},
{ 0xB8477, new C{ T="Comment", N = "down" }},
{ 0xB8478, new C{ T="Comment", N = "down" }},
{ 0xB8, new C{ T="mmr3Hash", N = "destinationSeat" }},
{ 0xBC, new C{ T="mmr3Hash", N = "animation" }},
{ 0xC0, new C{ T="Float", N = "seat switch cooldown time" }},
{ 0xC4479, new C{ T="Comment", N = "" }},
{ 0xC4480, new C{ T="Comment", N = "left" }},
{ 0xC4481, new C{ T="Comment", N = "left" }},
{ 0xC4, new C{ T="mmr3Hash", N = "destinationSeat" }},
{ 0xC8, new C{ T="mmr3Hash", N = "animation" }},
{ 0xCC, new C{ T="Float", N = "seat switch cooldown time" }},
{ 0xD0482, new C{ T="Comment", N = "" }},
{ 0xD0483, new C{ T="Comment", N = "right" }},
{ 0xD0484, new C{ T="Comment", N = "right" }},
{ 0xD0, new C{ T="mmr3Hash", N = "destinationSeat" }},
{ 0xD4, new C{ T="mmr3Hash", N = "animation" }},
{ 0xD8, new C{ T="Float", N = "seat switch cooldown time" }},
{ 0xDC485, new C{ T="Comment", N = "" }},
{ 0xDC486, new C{ T="Comment", N = "" }},
{ 0xDC, new C{ T="Float", N = "listener interpolation factor" }},
{ 0xE0, new C{ T="Float", N = "listener orientation interpolation" }},
{ 0xE4, new C{ T="Float", N = "listener blend towards locked axis" }},
{ 0xE8487, new C{ T="Comment", N = "speed dependent turn rates" }},
{ 0xE8, new C{ T="Float", N = "yaw rate bounds.min" }},
{ 0xEC, new C{ T="Float", N = "yaw rate bounds.max" }},
{ 0xF0, new C{ T="Float", N = "pitch rate bounds.min" }},
{ 0xF4, new C{ T="Float", N = "pitch rate bounds.max" }},
{ 0xF8, new C{ T="Float", N = "pitch interpolation time" }},
{ 0xFC, new C{ T="Float", N = "min speed reference" }},
{ 0x100, new C{ T="Float", N = "max speed reference" }},
{ 0x104, new C{ T="Float", N = "speed exponent" }},
{ 0x108488, new C{ T="Comment", N = "camera fields" }},
{ 0x108489, new C{ T="Comment", N = "unit camera" }},
{ 0x108490, new C{ T="Comment", N = "Unit Camera" }},
{ 0x108, new FlagGroup { A=2, N="flags", STR = new Dictionary<int, string>()
{
{0, "pitch bounds absolute space" },
{1, "only collides with environment" },
{2, "hides player-unit from camera" },
{3, "use aiming vector instead of marker forward" },
}}},
{ 0x10A, new C{ T="2Byte", N = "generated_padc79e" }},
{ 0x10C491, new C{ T="Comment", N = "" }},
{ 0x10C, new C{ T="mmr3Hash", N = "camera marker name" }},
{ 0x110, new C{ T="Float", N = "pitch auto-level" }},
{ 0x114, new C{ T="Float", N = "pitch range.min" }},
{ 0x118, new C{ T="Float", N = "pitch range.max" }},
{ 0x11C, new C{ T="Tagblock", N = "camera tracks", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "track" }},
{ 0x1C, new C{ T="TagRef", N = "screen effect" }},
{ 0x38, new C{ T="Float", N = "transition time in" }},
{ 0x3C, new C{ T="Float", N = "transition time out" }},
}, S=64}},
{ 0x130, new C{ T="Float", N = "pitch minimum spring" }},
{ 0x134, new C{ T="Float", N = "pitch mmaximum spring" }},
{ 0x138, new C{ T="Float", N = "spring velocity" }},
{ 0x13C, new C{ T="Float", N = "look acceleration" }},
{ 0x140, new C{ T="Float", N = "look deceleration" }},
{ 0x144, new C{ T="Float", N = "look acc smoothing fraction" }},
{ 0x148, new C{ T="Float", N = "field of view bias" }},
{ 0x14C492, new C{ T="Comment", N = "camera obstruction" }},
{ 0x14C, new C{ T="Float", N = "cylinder fraction" }},
{ 0x150, new C{ T="Float", N = "obstruction test angle" }},
{ 0x154, new C{ T="Float", N = "obstruction max inward accel" }},
{ 0x158, new C{ T="Float", N = "obstruction max outward accel" }},
{ 0x15C, new C{ T="Float", N = "obstruction max velocity" }},
{ 0x160, new C{ T="Float", N = "obstruction return delay" }},
{ 0x164, new C{ T="Tagblock", N = "camera acceleration", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "maximum camera velocity" }},
{ 0x4493, new C{ T="Comment", N = "" }},
{ 0x4494, new C{ T="Comment", N = "forward/back" }},
{ 0x4, new EnumGroup { A=1, N="Input Variable", STR = new Dictionary<int, string>()
{
{0, "linear velocity" },
{1, "linear acceleration" },
{2, "yaw" },
{3, "pitch" },
{4, "roll" },
}}},
{ 0x5, new C{ T="Comment", N = "generated_padd066" }},
{ 0x8495, new C{ T="Comment", N = "mapping" }},
{ 0x8496, new C{ T="Comment", N = "mapping" }},
{ 0x8497, new C{ T="Comment", N = "" }},
{ 0x8, new C{ T="Unmapped", N = "data" }},
{ 0x20498, new C{ T="Comment", N = "" }},
{ 0x20, new C{ T="Float", N = "maximum value" }},
{ 0x24, new C{ T="Float", N = "camera scale (axial)" }},
{ 0x28, new C{ T="Float", N = "camera scale (perpendicular)" }},
{ 0x2C499, new C{ T="Comment", N = "left/right" }},
{ 0x2C, new EnumGroup { A=1, N="Input Variable", STR = new Dictionary<int, string>()
{
{0, "linear velocity" },
{1, "linear acceleration" },
{2, "yaw" },
{3, "pitch" },
{4, "roll" },
}}},
{ 0x2D, new C{ T="Comment", N = "generated_padd066" }},
{ 0x30500, new C{ T="Comment", N = "mapping" }},
{ 0x30501, new C{ T="Comment", N = "mapping" }},
{ 0x30502, new C{ T="Comment", N = "" }},
{ 0x30, new C{ T="Unmapped", N = "data" }},
{ 0x48503, new C{ T="Comment", N = "" }},
{ 0x48, new C{ T="Float", N = "maximum value" }},
{ 0x4C, new C{ T="Float", N = "camera scale (axial)" }},
{ 0x50, new C{ T="Float", N = "camera scale (perpendicular)" }},
{ 0x54504, new C{ T="Comment", N = "up/down" }},
{ 0x54, new EnumGroup { A=1, N="Input Variable", STR = new Dictionary<int, string>()
{
{0, "linear velocity" },
{1, "linear acceleration" },
{2, "yaw" },
{3, "pitch" },
{4, "roll" },
}}},
{ 0x55, new C{ T="Comment", N = "generated_padd066" }},
{ 0x58505, new C{ T="Comment", N = "mapping" }},
{ 0x58506, new C{ T="Comment", N = "mapping" }},
{ 0x58507, new C{ T="Comment", N = "" }},
{ 0x58, new C{ T="Unmapped", N = "data" }},
{ 0x70508, new C{ T="Comment", N = "" }},
{ 0x70, new C{ T="Float", N = "maximum value" }},
{ 0x74, new C{ T="Float", N = "camera scale (axial)" }},
{ 0x78, new C{ T="Float", N = "camera scale (perpendicular)" }},
}, S=124}},
{ 0x178509, new C{ T="Comment", N = "" }},
{ 0x178, new C{ T="TagRef", N = "hud screen reference" }},
{ 0x194, new C{ T="TagRef", N = "alt hud screen reference" }},
{ 0x1B0, new C{ T="mmr3Hash", N = "enter seat string" }},
{ 0x1B4, new C{ T="Tagblock", N = "button callouts", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "text" }},
}, S=4}},
{ 0x1C8, new C{ T="Float", N = "pitch minimum" }},
{ 0x1CC, new C{ T="Float", N = "pitch maximum" }},
{ 0x1D0, new C{ T="Float", N = "pitch minimum for AI operator" }},
{ 0x1D4, new C{ T="Float", N = "pitch maximum for AI operator" }},
{ 0x1D8, new C{ T="Float", N = "yaw minimum" }},
{ 0x1DC, new C{ T="Float", N = "yaw maximum" }},
{ 0x1E0, new C{ T="Float", N = "yaw minimum for AI operator" }},
{ 0x1E4, new C{ T="Float", N = "yaw maximum for AI operator" }},
{ 0x1E8, new C{ T="TagRef", N = "built-in gunner" }},
{ 0x204510, new C{ T="Comment", N = "entry fields" }},
{ 0x204, new C{ T="Float", N = "entry radius" }},
{ 0x208, new C{ T="Float", N = "entry marker cone angle" }},
{ 0x20C, new C{ T="Float", N = "entry marker facing angle" }},
{ 0x210, new C{ T="Float", N = "maximum relative velocity" }},
{ 0x214, new C{ T="TagRef", N = "equipment" }},
{ 0x230, new C{ T="Float", N = "open time" }},
{ 0x234, new C{ T="Float", N = "close time" }},
{ 0x238, new C{ T="mmr3Hash", N = "open function name" }},
{ 0x23C, new C{ T="mmr3Hash", N = "opening function name" }},
{ 0x240, new C{ T="mmr3Hash", N = "closing function name" }},
{ 0x244, new C{ T="mmr3Hash", N = "invisible seat region" }},
{ 0x248, new C{ T="4Byte", N = "runtime invisible seat region index" }},
{ 0x24C511, new C{ T="Comment", N = "seat death grab crate" }},
{ 0x24C, new C{ T="TagRef", N = "seat death grab crate" }},
{ 0x268, new C{ T="mmr3Hash", N = "Seat Selection String" }},
{ 0x26C, new C{ T="Float", N = "bailout velocity" }},
{ 0x270512, new C{ T="Comment", N = "Seat Ejection Fields" }},
{ 0x270, new C{ T="Float", N = "maximum acceleration" }},
{ 0x274, new C{ T="Float", N = "maximum centrifugal force" }},
}, S=632}},
{ 0xAB4, new C{ T="Float", N = "maximum seat switch linear velocity" }},
{ 0xAB8, new C{ T="Float", N = "maximum seat switch angular velocity" }},
{ 0xABC, new EnumGroup { A=2, N="empty mount behavior", STR = new Dictionary<int, string>()
{
{0, "Reset Team when empty and parentless" },
{1, "Keep last team when empty and parentless" },
}}},
{ 0xABE, new C{ T="2Byte", N = "generated_pad7674" }},
{ 0xAC0513, new C{ T="Comment", N = "open/close" }},
{ 0xAC0, new C{ T="Float", N = "opening time" }},
{ 0xAC4, new C{ T="Float", N = "closing time" }},
{ 0xAC8514, new C{ T="Comment", N = "" }},
{ 0xAC8, new C{ T="TagRef", N = "docking site" }},
{ 0xAE4515, new C{ T="Comment", N = "Deprecated Unit Power Component settings.  Please use the new settings in the OBJECT section above." }},
{ 0xAE4, new C{ T="Tagblock", N = "power component", B = new Dictionary<long, C>
{
{ 0x0516, new C{ T="Comment", N = "Power Component System" }},
{ 0x0, new C{ T="Tagblock", N = "power source configurations", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "name" }},
{ 0x4, new C{ T="Float", N = "capacity" }},
}, S=8}},
{ 0x14, new C{ T="Tagblock", N = "power sources", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "region name" }},
{ 0x4, new C{ T="4Byte", N = "runtime region index" }},
{ 0x8517, new C{ T="Comment", N = "Model Region Damage State Configurations" }},
{ 0x8, new C{ T="Tagblock", N = "state configurations", B = new Dictionary<long, C>
{
{ 0x0, new EnumGroup { A=2, N="region state", STR = new Dictionary<int, string>()
{
{0, "default" },
{1, "minor damage" },
{2, "medium damage" },
{3, "major damage" },
{4, "destroyed" },
}}},
{ 0x2, new C{ T="2Byte", N = "configuration" }},
}, S=4}},
}, S=28}},
{ 0x28518, new C{ T="Comment", N = "communication node capacity" }},
{ 0x28, new C{ T="Tagblock", N = "communication node power sources", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="2Byte", N = "component" }},
}, S=2}},
{ 0x3C, new C{ T="mmr3Hash", N = "communication node power modifier id" }},
{ 0x40519, new C{ T="Comment", N = "" }},
{ 0x40520, new C{ T="Comment", N = "locomotion capacity" }},
{ 0x40, new C{ T="Tagblock", N = "locomotion power sources", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="2Byte", N = "component" }},
}, S=2}},
{ 0x54, new C{ T="mmr3Hash", N = "locomotion power modifier id" }},
{ 0x58521, new C{ T="Comment", N = "locomotion power modifier" }},
{ 0x58522, new C{ T="Comment", N = "locomotion power modifier" }},
{ 0x58, new C{ T="Float", N = "Base Value" }},
{ 0x5C, new C{ T="Float", N = "Value Bounds.min" }},
{ 0x60, new C{ T="Float", N = "Value Bounds.max" }},
{ 0x64523, new C{ T="Comment", N = "" }},
{ 0x64524, new C{ T="Comment", N = "weapon capacity" }},
{ 0x64, new C{ T="Tagblock", N = "weapon power sources", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="2Byte", N = "component" }},
}, S=2}},
{ 0x78, new C{ T="mmr3Hash", N = "weapon power modifier id" }},
{ 0x7C525, new C{ T="Comment", N = "" }},
}, S=124}},
{ 0xAF8526, new C{ T="Comment", N = "Boost" }},
{ 0xAF8, new C{ T="TagRef", N = "boost definition" }},
{ 0xB14527, new C{ T="Comment", N = "Deprecated Boost Fields.  Please use the Boost Definition field above." }},
{ 0xB14528, new C{ T="Comment", N = "boost" }},
{ 0xB14, new C{ T="TagRef", N = "boost collision damage" }},
{ 0xB30, new FlagGroup { A=4, N="flags", STR = new Dictionary<int, string>()
{
{0, "pegs throttle" },
}}},
{ 0xB34, new C{ T="Float", N = "boost peak power" }},
{ 0xB38, new C{ T="Float", N = "boost rise time" }},
{ 0xB3C, new C{ T="Float", N = "boost fall time" }},
{ 0xB40, new C{ T="Float", N = "boost power per second" }},
{ 0xB44, new C{ T="Float", N = "boost low warning threshold" }},
{ 0xB48, new C{ T="Float", N = "recharge rate" }},
{ 0xB4C, new C{ T="Float", N = "recharge delay" }},
{ 0xB50, new C{ T="Float", N = "post boost weapon delay" }},
{ 0xB54529, new C{ T="Comment", N = "trigger to boost" }},
{ 0xB54530, new C{ T="Comment", N = "trigger to boost" }},
{ 0xB54531, new C{ T="Comment", N = "" }},
{ 0xB54, new C{ T="Unmapped", N = "data" }},
{ 0xB6C532, new C{ T="Comment", N = "" }},
{ 0xB6C, new EnumGroup { A=4, N="tutorial id", STR = new Dictionary<int, string>()
{
{0, "None" },
{1, "Assassination" },
{2, "Camera" },
{3, "Crouch" },
{4, "Grenade" },
{5, "Jump" },
{6, "Melee" },
{7, "Movement" },
{8, "Shoot" },
{9, "Tracking" },
{10, "Clamber" },
{11, "Slide" },
{12, "Sprint" },
{13, "Thruster" },
{14, "Zoom" },
{15, "BansheeBoost" },
{16, "BansheeTrick" },
{17, "BansheeSwitchWeapons" },
{18, "GhostBoost" },
{19, "MantisRockets" },
{20, "MantisStomp" },
{21, "VTOLAscend" },
{22, "VTOLDescend" },
{23, "VTOLEvade" },
{24, "VTOLSwitchWeapons" },
{25, "VTOLShoot" },
{26, "JeepDrive" },
{27, "JeepHandbrake" },
{28, "JeepShoot" },
{29, "WraithBoost" },
{30, "SeatSwitch" },
{31, "OrdersGeneral" },
{32, "OrdersClear" },
{33, "OrdersEnemy" },
{34, "OrdersMove" },
{35, "OrdersVehicle" },
{36, "OrdersWeapon" },
}}},
{ 0xB70533, new C{ T="Comment", N = "" }},
{ 0xB70, new EnumGroup { A=4, N="tutorial weapon swap id", STR = new Dictionary<int, string>()
{
{0, "None" },
{1, "Assassination" },
{2, "Camera" },
{3, "Crouch" },
{4, "Grenade" },
{5, "Jump" },
{6, "Melee" },
{7, "Movement" },
{8, "Shoot" },
{9, "Tracking" },
{10, "Clamber" },
{11, "Slide" },
{12, "Sprint" },
{13, "Thruster" },
{14, "Zoom" },
{15, "BansheeBoost" },
{16, "BansheeTrick" },
{17, "BansheeSwitchWeapons" },
{18, "GhostBoost" },
{19, "MantisRockets" },
{20, "MantisStomp" },
{21, "VTOLAscend" },
{22, "VTOLDescend" },
{23, "VTOLEvade" },
{24, "VTOLSwitchWeapons" },
{25, "VTOLShoot" },
{26, "JeepDrive" },
{27, "JeepHandbrake" },
{28, "JeepShoot" },
{29, "WraithBoost" },
{30, "SeatSwitch" },
{31, "OrdersGeneral" },
{32, "OrdersClear" },
{33, "OrdersEnemy" },
{34, "OrdersMove" },
{35, "OrdersVehicle" },
{36, "OrdersWeapon" },
}}},
{ 0xB74534, new C{ T="Comment", N = "Lipsync" }},
{ 0xB74535, new C{ T="Comment", N = "lipsync" }},
{ 0xB74, new C{ T="Float", N = "attack weight" }},
{ 0xB78, new C{ T="Float", N = "decay weight" }},
{ 0xB7C536, new C{ T="Comment", N = "Exit and Detach" }},
{ 0xB7C, new C{ T="TagRef", N = "exit and detach damage" }},
{ 0xB98, new C{ T="TagRef", N = "exit and detach weapon" }},
{ 0xBB4, new C{ T="Tagblock", N = "exit and detach variants", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "variant name" }},
{ 0x4, new C{ T="TagRef", N = "exit and detach weapon" }},
{ 0x20, new C{ T="TagRef", N = "exit and detach damage" }},
}, S=60}},
{ 0xBC8537, new C{ T="Comment", N = "Vehicle Death Telemetry Rule" }},
{ 0xBC8, new EnumGroup { A=1, N="Death Telemetry Rule", STR = new Dictionary<int, string>()
{
{0, "Default" },
{1, "Always Send Event" },
{2, "Never Send Event" },
}}},
{ 0xBC9, new C{ T="Byte", N = "generated_pad29bf" }},
{ 0xBCA538, new C{ T="Comment", N = "Experience" }},
{ 0xBCA, new C{ T="2Byte", N = "experience for kill" }},
{ 0xBCC, new C{ T="2Byte", N = "experience for assist" }},
{ 0xBCE, new C{ T="2Byte", N = "generated_pad0fde" }},
{ 0xBD0, new C{ T="Float", N = "bailout threshold" }},
{ 0xBD4, new C{ T="Float", N = "iron sight weapon dampening" }},
{ 0xBD8539, new C{ T="Comment", N = "Birthing" }},
{ 0xBD8540, new C{ T="Comment", N = "birth" }},
{ 0xBD8, new C{ T="2Byte", N = "seat" }},
{ 0xBDA, new C{ T="2Byte", N = "generated_pada2d2" }},
{ 0xBDC, new C{ T="mmr3Hash", N = "birthing region" }},
{ 0xBE0541, new C{ T="Comment", N = "" }},
{ 0xBE0, new C{ T="Float", N = "procedural recoil scaler" }},
{ 0xBE4, new C{ T="TagRef", N = "flinch system" }},
{ 0xC00542, new C{ T="Comment", N = "Active Camouflage Malleable Properties" }},
{ 0xC00543, new C{ T="Comment", N = "active camouflage properties" }},
{ 0xC00, new EnumGroup { A=1, N="camo level", STR = new Dictionary<int, string>()
{
{0, "poor" },
{1, "good" },
{2, "excellent" },
{3, "invisible" },
{4, "ai" },
}}},
{ 0xC01, new FlagGroup { A=1, N="flags", STR = new Dictionary<int, string>()
{
{0, "No speed scaling" },
}}},
{ 0xC02, new C{ T="2Byte", N = "generated_pad06e4" }},
{ 0xC04544, new C{ T="Comment", N = "grenade throw penalty" }},
{ 0xC04545, new C{ T="Comment", N = "grenade throw penalty" }},
{ 0xC04, new C{ T="Float", N = "Base Value" }},
{ 0xC08, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xC0C, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xC10546, new C{ T="Comment", N = "interpolation time" }},
{ 0xC10547, new C{ T="Comment", N = "interpolation time" }},
{ 0xC10, new C{ T="Float", N = "Base Value" }},
{ 0xC14, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xC18, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xC1C548, new C{ T="Comment", N = "melee penalty" }},
{ 0xC1C549, new C{ T="Comment", N = "melee penalty" }},
{ 0xC1C, new C{ T="Float", N = "Base Value" }},
{ 0xC20, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xC24, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xC28550, new C{ T="Comment", N = "minimum dinged amount" }},
{ 0xC28551, new C{ T="Comment", N = "minimum dinged amount" }},
{ 0xC28, new C{ T="Float", N = "Base Value" }},
{ 0xC2C, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xC30, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xC34552, new C{ T="Comment", N = "maximum duration" }},
{ 0xC34553, new C{ T="Comment", N = "maximum duration" }},
{ 0xC34, new C{ T="Float", N = "Base Value" }},
{ 0xC38, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xC3C, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xC40, new C{ T="TagRef", N = "active camouflage energy gain effect" }},
{ 0xC5C554, new C{ T="Comment", N = "damage properties" }},
{ 0xC5C555, new C{ T="Comment", N = "Damage scaling malleable properties" }},
{ 0xC5C556, new C{ T="Comment", N = "Weapon damage scalar" }},
{ 0xC5C557, new C{ T="Comment", N = "Weapon damage scalar" }},
{ 0xC5C, new C{ T="Float", N = "Base Value" }},
{ 0xC60, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xC64, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xC68558, new C{ T="Comment", N = "Melee damage scalar" }},
{ 0xC68559, new C{ T="Comment", N = "Melee damage scalar" }},
{ 0xC68, new C{ T="Float", N = "Base Value" }},
{ 0xC6C, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xC70, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xC74560, new C{ T="Comment", N = "Melee knockback scalar" }},
{ 0xC74561, new C{ T="Comment", N = "Melee knockback scalar" }},
{ 0xC74, new C{ T="Float", N = "Base Value" }},
{ 0xC78, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xC7C, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xC80562, new C{ T="Comment", N = "Melee recovery speed scalar" }},
{ 0xC80563, new C{ T="Comment", N = "Melee recovery speed scalar" }},
{ 0xC80, new C{ T="Float", N = "Base Value" }},
{ 0xC84, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xC88, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xC8C564, new C{ T="Comment", N = "Grenade damage scalar" }},
{ 0xC8C565, new C{ T="Comment", N = "Grenade damage scalar" }},
{ 0xC8C, new C{ T="Float", N = "Base Value" }},
{ 0xC90, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xC94, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xC98566, new C{ T="Comment", N = "Grenade knockback scalar" }},
{ 0xC98567, new C{ T="Comment", N = "Grenade knockback scalar" }},
{ 0xC98, new C{ T="Float", N = "Base Value" }},
{ 0xC9C, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xCA0, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xCA4568, new C{ T="Comment", N = "Body vampirism scalar" }},
{ 0xCA4569, new C{ T="Comment", N = "Body vampirism scalar" }},
{ 0xCA4, new C{ T="Float", N = "Base Value" }},
{ 0xCA8, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xCAC, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xCB0570, new C{ T="Comment", N = "Shield vampirism scalar" }},
{ 0xCB0571, new C{ T="Comment", N = "Shield vampirism scalar" }},
{ 0xCB0, new C{ T="Float", N = "Base Value" }},
{ 0xCB4, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xCB8, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xCBC572, new C{ T="Comment", N = "Area of effect radius scalar" }},
{ 0xCBC573, new C{ T="Comment", N = "Area of effect radius scalar" }},
{ 0xCBC, new C{ T="Float", N = "Base Value" }},
{ 0xCC0, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xCC4, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xCC8574, new C{ T="Comment", N = "weapon properties" }},
{ 0xCC8575, new C{ T="Comment", N = "Weapon trait malleable properties" }},
{ 0xCC8576, new C{ T="Comment", N = "weapon switch speed scalar" }},
{ 0xCC8577, new C{ T="Comment", N = "weapon switch speed scalar" }},
{ 0xCC8, new C{ T="Float", N = "Base Value" }},
{ 0xCCC, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xCD0, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xCD4578, new C{ T="Comment", N = "weapon empty reload speed scalar" }},
{ 0xCD4579, new C{ T="Comment", N = "weapon empty reload speed scalar" }},
{ 0xCD4, new C{ T="Float", N = "Base Value" }},
{ 0xCD8, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xCDC, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xCE0580, new C{ T="Comment", N = "weapon overheat loss scalar" }},
{ 0xCE0581, new C{ T="Comment", N = "weapon overheat loss scalar" }},
{ 0xCE0, new C{ T="Float", N = "Base Value" }},
{ 0xCE4, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xCE8, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xCEC582, new C{ T="Comment", N = "weapon tactical reload speed scalar" }},
{ 0xCEC583, new C{ T="Comment", N = "weapon tactical reload speed scalar" }},
{ 0xCEC, new C{ T="Float", N = "Base Value" }},
{ 0xCF0, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xCF4, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xCF8584, new C{ T="Comment", N = "weapon tactical cooling scalar" }},
{ 0xCF8585, new C{ T="Comment", N = "weapon tactical cooling scalar" }},
{ 0xCF8, new C{ T="Float", N = "Base Value" }},
{ 0xCFC, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xD00, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xD04586, new C{ T="Comment", N = "movement speed (with turret) scalar" }},
{ 0xD04587, new C{ T="Comment", N = "movement speed (with turret) scalar" }},
{ 0xD04, new C{ T="Float", N = "Base Value" }},
{ 0xD08, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xD0C, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xD10588, new C{ T="Comment", N = "emp properties" }},
{ 0xD10589, new C{ T="Comment", N = "EMP malleable properties" }},
{ 0xD10590, new C{ T="Comment", N = "EMP disable duration scalar " }},
{ 0xD10591, new C{ T="Comment", N = "EMP disable duration scalar " }},
{ 0xD10, new C{ T="Float", N = "Base Value" }},
{ 0xD14, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xD18, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xD1C592, new C{ T="Comment", N = "EMP disable duration MP scalar " }},
{ 0xD1C593, new C{ T="Comment", N = "EMP disable duration MP scalar " }},
{ 0xD1C, new C{ T="Float", N = "Base Value" }},
{ 0xD20, new C{ T="Float", N = "Value Bounds.min" }},
{ 0xD24, new C{ T="Float", N = "Value Bounds.max" }},
{ 0xD28, new C{ T="TagRef", N = "EMP unit modifiers" }},
{ 0xD44, new C{ T="TagRef", N = "emp disabled effect" }},
{ 0xD60, new C{ T="mmr3Hash", N = "recording unit type" }},
{ 0xD64594, new C{ T="Comment", N = "" }},
{ 0xD64, new C{ T="TagRef", N = "knockback collision damage override" }},
{ 0xD80595, new C{ T="Comment", N = "$$$ BIPED $$$" }},
{ 0xD80, new C{ T="TagRef", N = "parent" }},
{ 0xD9C, new C{ T="Float", N = "moving turning speed" }},
{ 0xDA0, new FlagGroup { A=4, N="flags", STR = new Dictionary<int, string>()
{
{0, "turns without animating" },
{1, "has physical rigid bodies when alive" },
{2, "immune to falling damage" },
{3, "spawn death children on destroy" },
{4, "stunned by emp damage" },
{5, "dead physics when stunned" },
{6, "always ragdoll when dead" },
{7, "snaps turns" },
{8, "sync action always projects on ground" },
{9, "orient facing to movement (Mantis)" },
{10, "aim driven orientation in stationary turns" },
{11, "use predictive stationary turns" },
{12, "never ragdoll" },
{13, "conservatively ragdoll as fallback" },
{14, "Disallow Airborne Action" },
{15, "Don't align on medium ping" },
{16, "Don't align on hard ping" },
{17, "Don't track for combat music intensity" },
}}},
{ 0xDA4, new C{ T="Float", N = "stationary turning threshold" }},
{ 0xDA8, new C{ T="Float", N = "stationary turn fixup speed" }},
{ 0xDAC, new C{ T="TagRef", N = "death program selector" }},
{ 0xDC8, new C{ T="mmr3Hash", N = "ragdoll region name" }},
{ 0xDCC, new C{ T="mmr3Hash", N = "assassination chud text" }},
{ 0xDD0596, new C{ T="Comment", N = "jumping and landing" }},
{ 0xDD0, new C{ T="Float", N = "jump velocity" }},
{ 0xDD4, new C{ T="Tagblock", N = "tricks", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "animation name" }},
{ 0x4, new EnumGroup { A=1, N="activation type", STR = new Dictionary<int, string>()
{
{0, "trick button + left" },
{1, "trick button + right" },
{2, "trick button + up" },
{3, "trick button + down" },
{4, "peg-flick-jump left" },
{5, "peg-flick-jump right" },
{6, "peg-flick-jump up" },
{7, "peg-flick-jump down" },
{8, "double-jump left" },
{9, "double-jump right" },
{10, "double-jump up" },
{11, "double-jump down" },
}}},
{ 0x5, new EnumGroup { A=1, N="velocity preservation", STR = new Dictionary<int, string>()
{
{0, "none" },
{1, "trick relative" },
{2, "world relative" },
}}},
{ 0x6, new FlagGroup { A=1, N="flags", STR = new Dictionary<int, string>()
{
{0, "use following camera" },
{1, "do not slam player control" },
}}},
{ 0x7, new C{ T="Byte", N = "generated_pad983c" }},
{ 0x8, new C{ T="Float", N = "camera interpolation time" }},
{ 0xC, new C{ T="Float", N = "trick exit time" }},
{ 0x10, new C{ T="Float", N = "trick exit camera interpolation time.min" }},
{ 0x14, new C{ T="Float", N = "trick exit camera interpolation time.max" }},
{ 0x18, new C{ T="Float", N = "trick exit displacement reference" }},
{ 0x1C, new C{ T="Float", N = "cooldown time" }},
{ 0x20, new EnumGroup { A=4, N="tutorial id", STR = new Dictionary<int, string>()
{
{0, "None" },
{1, "Assassination" },
{2, "Camera" },
{3, "Crouch" },
{4, "Grenade" },
{5, "Jump" },
{6, "Melee" },
{7, "Movement" },
{8, "Shoot" },
{9, "Tracking" },
{10, "Clamber" },
{11, "Slide" },
{12, "Sprint" },
{13, "Thruster" },
{14, "Zoom" },
{15, "BansheeBoost" },
{16, "BansheeTrick" },
{17, "BansheeSwitchWeapons" },
{18, "GhostBoost" },
{19, "MantisRockets" },
{20, "MantisStomp" },
{21, "VTOLAscend" },
{22, "VTOLDescend" },
{23, "VTOLEvade" },
{24, "VTOLSwitchWeapons" },
{25, "VTOLShoot" },
{26, "JeepDrive" },
{27, "JeepHandbrake" },
{28, "JeepShoot" },
{29, "WraithBoost" },
{30, "SeatSwitch" },
{31, "OrdersGeneral" },
{32, "OrdersClear" },
{33, "OrdersEnemy" },
{34, "OrdersMove" },
{35, "OrdersVehicle" },
{36, "OrdersWeapon" },
}}},
}, S=36}},
{ 0xDE8, new C{ T="Float", N = "maximum soft landing time" }},
{ 0xDEC, new C{ T="Float", N = "maximum hard landing time" }},
{ 0xDF0, new C{ T="Float", N = "minimum soft landing velocity" }},
{ 0xDF4, new C{ T="Float", N = "minimum hard landing velocity" }},
{ 0xDF8, new C{ T="Float", N = "maximum hard landing velocity" }},
{ 0xDFC, new C{ T="Float", N = "stun duration" }},
{ 0xE00597, new C{ T="Comment", N = "camera, collision, and autoaim" }},
{ 0xE00, new C{ T="Float", N = "standing camera height" }},
{ 0xE04, new C{ T="Float", N = "running camera height" }},
{ 0xE08, new C{ T="Float", N = "crouching camera height" }},
{ 0xE0C, new C{ T="Float", N = "crouch walking camera height" }},
{ 0xE10, new C{ T="Float", N = "crouch transition time" }},
{ 0xE14, new C{ T="Float", N = "Bunker Forward Offset" }},
{ 0xE18, new C{ T="Float", N = "Bunker Side Offset" }},
{ 0xE1C, new C{ T="Float", N = "slide camera height minimum" }},
{ 0xE20598, new C{ T="Comment", N = "slide camera height function" }},
{ 0xE20599, new C{ T="Comment", N = "slide camera height function" }},
{ 0xE20600, new C{ T="Comment", N = "slide camera height function" }},
{ 0xE20601, new C{ T="Comment", N = "" }},
{ 0xE20, new C{ T="Unmapped", N = "data" }},
{ 0xE38602, new C{ T="Comment", N = "" }},
{ 0xE38, new C{ T="Float", N = "slide rumble low frequency" }},
{ 0xE3C, new C{ T="Float", N = "slide rumble high frequency" }},
{ 0xE40, new C{ T="Float", N = "slide rumble left trigger" }},
{ 0xE44, new C{ T="Float", N = "slide rumble right trigger" }},
{ 0xE48, new C{ T="Float", N = "slide firing delay" }},
{ 0xE4C603, new C{ T="Comment", N = "camera height velocity function" }},
{ 0xE4C604, new C{ T="Comment", N = "camera height velocity function" }},
{ 0xE4C605, new C{ T="Comment", N = "" }},
{ 0xE4C, new C{ T="Unmapped", N = "data" }},
{ 0xE64606, new C{ T="Comment", N = "" }},
{ 0xE64, new C{ T="Tagblock", N = "camera heights", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "weapon class" }},
{ 0x4, new C{ T="Float", N = "standing height" }},
{ 0x8, new C{ T="Float", N = "crouching height" }},
{ 0xC, new C{ T="Float", N = "sliding camera height min" }},
}, S=16}},
{ 0xE78, new C{ T="Float", N = "camera interpolation start" }},
{ 0xE7C, new C{ T="Float", N = "camera interpolation end" }},
{ 0xE80, new C{ T="Float", N = "camera offset.X" }},
{ 0xE84, new C{ T="Float", N = "camera offset.Y" }},
{ 0xE88, new C{ T="Float", N = "camera offset.Z" }},
{ 0xE8C, new C{ T="Float", N = "root offset camera scale" }},
{ 0xE90, new C{ T="Float", N = "root offset camera dampening" }},
{ 0xE94, new C{ T="Float", N = "autoaim width" }},
{ 0xE98, new C{ T="Float", N = "runtime cosine stationary turning threshold" }},
{ 0xE9C, new C{ T="Float", N = "runtime crouch transition velocity" }},
{ 0xEA0, new C{ T="Float", N = "runtime_camera_height_velocity" }},
{ 0xEA4, new C{ T="TagRef", N = "area damage effect" }},
{ 0xEC0, new C{ T="TagRef", N = "health station recharge effect" }},
{ 0xEDC, new C{ T="Tagblock", N = "movement gates", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "period" }},
{ 0x4, new C{ T="Float", N = "z offset" }},
{ 0x8, new C{ T="Float", N = "constant z offset" }},
{ 0xC, new C{ T="Float", N = "y offset" }},
{ 0x10, new C{ T="Float", N = "speed threshold" }},
{ 0x14607, new C{ T="Comment", N = "default function" }},
{ 0x14608, new C{ T="Comment", N = "default function" }},
{ 0x14609, new C{ T="Comment", N = "" }},
{ 0x14, new C{ T="Unmapped", N = "data" }},
{ 0x2C610, new C{ T="Comment", N = "" }},
}, S=44}},
{ 0xEF0, new C{ T="Tagblock", N = "movement gates crouching", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "period" }},
{ 0x4, new C{ T="Float", N = "z offset" }},
{ 0x8, new C{ T="Float", N = "constant z offset" }},
{ 0xC, new C{ T="Float", N = "y offset" }},
{ 0x10, new C{ T="Float", N = "speed threshold" }},
{ 0x14611, new C{ T="Comment", N = "default function" }},
{ 0x14612, new C{ T="Comment", N = "default function" }},
{ 0x14613, new C{ T="Comment", N = "" }},
{ 0x14, new C{ T="Unmapped", N = "data" }},
{ 0x2C614, new C{ T="Comment", N = "" }},
}, S=44}},
{ 0xF04, new C{ T="Float", N = "jump aim offset distance" }},
{ 0xF08, new C{ T="Float", N = "jump aim offset duration" }},
{ 0xF0C, new C{ T="Float", N = "land aim offset distance" }},
{ 0xF10, new C{ T="Float", N = "land aim offset duration" }},
{ 0xF14615, new C{ T="Comment", N = "Physics" }},
{ 0xF14616, new C{ T="Comment", N = "physics" }},
{ 0xF14, new FlagGroup { A=4, N="flags", STR = new Dictionary<int, string>()
{
{0, "centered_at_origin" },
{1, "shape spherical" },
{2, "use player physics" },
{3, "climb any surface" },
{4, "flying" },
{5, "not physical" },
{6, "dead character collision group" },
{7, "suppress ground planes on bipeds" },
{8, "physical ragdoll" },
{9, "do not resize dead spheres" },
{10, "multiple Mantis shapes" },
{11, "I am an Extreme Slipsurface" },
{12, "slips off movers" },
{13, "aligns with ground" },
{14, "swimming" },
}}},
{ 0xF18, new C{ T="Float", N = "height standing" }},
{ 0xF1C, new C{ T="Float", N = "height crouching" }},
{ 0xF20, new C{ T="Float", N = "radius" }},
{ 0xF24, new C{ T="Float", N = "mass" }},
{ 0xF28, new EnumGroup { A=1, N="maximum rigid body size override", STR = new Dictionary<int, string>()
{
{0, "default" },
{1, "tiny" },
{2, "small" },
{3, "medium" },
{4, "large" },
{5, "huge" },
{6, "extra huge" },
}}},
{ 0xF29, new C{ T="Comment", N = "generated_pad024d" }},
{ 0xF2C, new C{ T="mmr3Hash", N = "living material name" }},
{ 0xF30, new C{ T="mmr3Hash", N = "dead material name" }},
{ 0xF34, new C{ T="2Byte", N = "runtime global material type" }},
{ 0xF36, new C{ T="2Byte", N = "runtime dead global material type" }},
{ 0xF38, new C{ T="Tagblock", N = "dead sphere shapes", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Pointer", N = "field pointer skip" }},
{ 0x8, new C{ T="Tagblock", N = "primitive", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "name" }},
{ 0x4, new C{ T="Float", N = "relative mass scale" }},
{ 0x8, new C{ T="Float", N = "friction" }},
{ 0xC, new C{ T="Float", N = "restitution" }},
{ 0x10, new C{ T="Float", N = "volume " }},
{ 0x14, new C{ T="Float", N = "mass" }},
{ 0x18, new C{ T="4Byte", N = "phantom" }},
{ 0x1C, new C{ T="2Byte", N = "runtime material type" }},
{ 0x1E, new C{ T="Byte", N = "material" }},
{ 0x1F, new FlagGroup { A=1, N="material flags", STR = new Dictionary<int, string>()
{
{0, "supresses effects" },
{1, "force enable collision with player" },
}}},
{ 0x20, new C{ T="2Byte", N = "mass distribution index" }},
{ 0x22, new C{ T="2Byte", N = "should use" }},
{ 0x24617, new C{ T="Comment", N = "collision layer override" }},
{ 0x24, new C{ T="mmr3Hash", N = "collision layer" }},
}, S=40}},
{ 0x1C, new C{ T="Unmapped", N = "Havok Shape Data" }},
{ 0x34, new C{ T="4Byte", N = "generated_pad9227" }},
}, S=56}},
{ 0xF4C, new C{ T="Tagblock", N = "transformed dead sphere shapes", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Pointer", N = "field pointer skip" }},
{ 0x8, new C{ T="Tagblock", N = "primitive", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "name" }},
{ 0x4, new C{ T="Float", N = "relative mass scale" }},
{ 0x8, new C{ T="Float", N = "friction" }},
{ 0xC, new C{ T="Float", N = "restitution" }},
{ 0x10, new C{ T="Float", N = "volume " }},
{ 0x14, new C{ T="Float", N = "mass" }},
{ 0x18, new C{ T="4Byte", N = "phantom" }},
{ 0x1C, new C{ T="2Byte", N = "runtime material type" }},
{ 0x1E, new C{ T="Byte", N = "material" }},
{ 0x1F, new FlagGroup { A=1, N="material flags", STR = new Dictionary<int, string>()
{
{0, "supresses effects" },
{1, "force enable collision with player" },
}}},
{ 0x20, new C{ T="2Byte", N = "mass distribution index" }},
{ 0x22, new C{ T="2Byte", N = "should use" }},
{ 0x24618, new C{ T="Comment", N = "collision layer override" }},
{ 0x24, new C{ T="mmr3Hash", N = "collision layer" }},
}, S=40}},
{ 0x1C, new C{ T="Unmapped", N = "Havok Shape Data" }},
{ 0x34, new C{ T="4Byte", N = "generated_pad9227" }},
}, S=56}},
{ 0xF60, new C{ T="Tagblock", N = "pill shapes", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Pointer", N = "field pointer skip" }},
{ 0x8, new C{ T="Tagblock", N = "primitive", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "name" }},
{ 0x4, new C{ T="Float", N = "relative mass scale" }},
{ 0x8, new C{ T="Float", N = "friction" }},
{ 0xC, new C{ T="Float", N = "restitution" }},
{ 0x10, new C{ T="Float", N = "volume " }},
{ 0x14, new C{ T="Float", N = "mass" }},
{ 0x18, new C{ T="4Byte", N = "phantom" }},
{ 0x1C, new C{ T="2Byte", N = "runtime material type" }},
{ 0x1E, new C{ T="Byte", N = "material" }},
{ 0x1F, new FlagGroup { A=1, N="material flags", STR = new Dictionary<int, string>()
{
{0, "supresses effects" },
{1, "force enable collision with player" },
}}},
{ 0x20, new C{ T="2Byte", N = "mass distribution index" }},
{ 0x22, new C{ T="2Byte", N = "should use" }},
{ 0x24619, new C{ T="Comment", N = "collision layer override" }},
{ 0x24, new C{ T="mmr3Hash", N = "collision layer" }},
}, S=40}},
{ 0x1C, new C{ T="Unmapped", N = "Havok Shape Data" }},
{ 0x34, new C{ T="4Byte", N = "generated_pad9227" }},
}, S=56}},
{ 0xF74, new C{ T="Tagblock", N = "sphere shapes", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Pointer", N = "field pointer skip" }},
{ 0x8, new C{ T="Tagblock", N = "primitive", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "name" }},
{ 0x4, new C{ T="Float", N = "relative mass scale" }},
{ 0x8, new C{ T="Float", N = "friction" }},
{ 0xC, new C{ T="Float", N = "restitution" }},
{ 0x10, new C{ T="Float", N = "volume " }},
{ 0x14, new C{ T="Float", N = "mass" }},
{ 0x18, new C{ T="4Byte", N = "phantom" }},
{ 0x1C, new C{ T="2Byte", N = "runtime material type" }},
{ 0x1E, new C{ T="Byte", N = "material" }},
{ 0x1F, new FlagGroup { A=1, N="material flags", STR = new Dictionary<int, string>()
{
{0, "supresses effects" },
{1, "force enable collision with player" },
}}},
{ 0x20, new C{ T="2Byte", N = "mass distribution index" }},
{ 0x22, new C{ T="2Byte", N = "should use" }},
{ 0x24620, new C{ T="Comment", N = "collision layer override" }},
{ 0x24, new C{ T="mmr3Hash", N = "collision layer" }},
}, S=40}},
{ 0x1C, new C{ T="Unmapped", N = "Havok Shape Data" }},
{ 0x34, new C{ T="4Byte", N = "generated_pad9227" }},
}, S=56}},
{ 0xF88, new C{ T="Tagblock", N = "compund sphere shapes", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Pointer", N = "field pointer skip" }},
{ 0x8, new C{ T="Tagblock", N = "primitive", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "name" }},
{ 0x4, new C{ T="Float", N = "relative mass scale" }},
{ 0x8, new C{ T="Float", N = "friction" }},
{ 0xC, new C{ T="Float", N = "restitution" }},
{ 0x10, new C{ T="Float", N = "volume " }},
{ 0x14, new C{ T="Float", N = "mass" }},
{ 0x18, new C{ T="4Byte", N = "phantom" }},
{ 0x1C, new C{ T="2Byte", N = "runtime material type" }},
{ 0x1E, new C{ T="Byte", N = "material" }},
{ 0x1F, new FlagGroup { A=1, N="material flags", STR = new Dictionary<int, string>()
{
{0, "supresses effects" },
{1, "force enable collision with player" },
}}},
{ 0x20, new C{ T="2Byte", N = "mass distribution index" }},
{ 0x22, new C{ T="2Byte", N = "should use" }},
{ 0x24621, new C{ T="Comment", N = "collision layer override" }},
{ 0x24, new C{ T="mmr3Hash", N = "collision layer" }},
}, S=40}},
{ 0x1C, new C{ T="Unmapped", N = "Havok Shape Data" }},
{ 0x34, new C{ T="4Byte", N = "generated_pad9227" }},
}, S=56}},
{ 0xF9C622, new C{ T="Comment", N = "Physics - ground" }},
{ 0xF9C623, new C{ T="Comment", N = "ground physics" }},
{ 0xF9C, new FlagGroup { A=4, N="flags", STR = new Dictionary<int, string>()
{
{0, "enable slide" },
}}},
{ 0xFA0, new C{ T="Float", N = "Maximum slope angle" }},
{ 0xFA4, new C{ T="Float", N = "Downhill falloff angle" }},
{ 0xFA8, new C{ T="Float", N = "Downhill cutoff angle" }},
{ 0xFAC, new C{ T="Float", N = "Uphill falloff angle" }},
{ 0xFB0, new C{ T="Float", N = "Uphill cutoff angle" }},
{ 0xFB4, new C{ T="Float", N = "Downhill velocity scale" }},
{ 0xFB8, new C{ T="Float", N = "Uphill velocity scale" }},
{ 0xFBC, new C{ T="Float", N = "climb inflection angle" }},
{ 0xFC0624, new C{ T="Comment", N = "Ground to airborne control" }},
{ 0xFC0, new C{ T="Float", N = "airborne reaction time" }},
{ 0xFC4, new C{ T="Float", N = "airborne reaction time (slide)" }},
{ 0xFC8, new C{ T="Float", N = "airborne reaction time (slide off ledge)" }},
{ 0xFCC, new C{ T="Float", N = "airborne reaction time (slide) max height" }},
{ 0xFD0, new C{ T="Float", N = "airborne reaction time (sprint)" }},
{ 0xFD4, new C{ T="Float", N = "airborne reaction time (evade)" }},
{ 0xFD8, new C{ T="Float", N = "scale airborne reaction time" }},
{ 0xFDC, new C{ T="Float", N = "prevent jump from slide time" }},
{ 0xFE0625, new C{ T="Comment", N = "" }},
{ 0xFE0, new C{ T="Float", N = "scale ground adhesion velocity" }},
{ 0xFE4, new C{ T="Float", N = "gravity scale" }},
{ 0xFE8, new C{ T="Float", N = "airborne acceleration scale" }},
{ 0xFEC, new C{ T="Float", N = "successive slide delay" }},
{ 0xFF0, new C{ T="Float", N = "minimum slide trigger sprint fraction" }},
{ 0xFF4, new C{ T="Float", N = "maximum direction change during slide" }},
{ 0xFF8, new C{ T="Float", N = "maximum turn during slide" }},
{ 0xFFC, new C{ T="Float", N = "slide duration" }},
{ 0x1000626, new C{ T="Comment", N = "Slide sprint fraction scaling" }},
{ 0x1000, new C{ T="Float", N = "slide sprint fraction scalar min" }},
{ 0x1004627, new C{ T="Comment", N = "Slide speed function" }},
{ 0x1004628, new C{ T="Comment", N = "Slide speed function" }},
{ 0x1004629, new C{ T="Comment", N = "Slide speed function" }},
{ 0x1004630, new C{ T="Comment", N = "" }},
{ 0x1004, new C{ T="Unmapped", N = "data" }},
{ 0x101C631, new C{ T="Comment", N = "" }},
{ 0x101C, new C{ T="TagRef", N = "low ceiling control" }},
{ 0x1038632, new C{ T="Comment", N = "" }},
{ 0x1038633, new C{ T="Comment", N = "Physics - flying" }},
{ 0x1038634, new C{ T="Comment", N = "flying physics" }},
{ 0x1038, new C{ T="Float", N = "bank angle" }},
{ 0x103C, new C{ T="Float", N = "bank apply time" }},
{ 0x1040, new C{ T="Float", N = "bank decay time" }},
{ 0x1044, new C{ T="Float", N = "pitch ratio" }},
{ 0x1048, new C{ T="Float", N = "max velocity" }},
{ 0x104C, new C{ T="Float", N = "max sidestep velocity" }},
{ 0x1050, new C{ T="Float", N = "acceleration" }},
{ 0x1054, new C{ T="Float", N = "deceleration" }},
{ 0x1058, new C{ T="Float", N = "angular velocity maximum" }},
{ 0x105C, new C{ T="Float", N = "angular acceleration maximum" }},
{ 0x1060, new C{ T="Float", N = "crouch velocity modifier" }},
{ 0x1064, new FlagGroup { A=4, N="flags", STR = new Dictionary<int, string>()
{
{0, "use world up" },
}}},
{ 0x1068635, new C{ T="Comment", N = "" }},
{ 0x1068636, new C{ T="Comment", N = "Physics - clambering" }},
{ 0x1068, new C{ T="TagRef", N = "clambering definition" }},
{ 0x1084637, new C{ T="Comment", N = "" }},
{ 0x1084638, new C{ T="Comment", N = "" }},
{ 0x1084, new C{ T="Tagblock", N = "contact points", B = new Dictionary<long, C>
{
{ 0x0639, new C{ T="Comment", N = "" }},
{ 0x0, new C{ T="mmr3Hash", N = "marker name" }},
}, S=4}},
{ 0x1098, new C{ T="TagRef", N = "reanimation character" }},
{ 0x10B4, new C{ T="TagRef", N = "death spawn character" }},
{ 0x10D0, new C{ T="2Byte", N = "death spawn count" }},
{ 0x10D2, new C{ T="2Byte", N = "generated_pad3e4d" }},
{ 0x10D4640, new C{ T="Comment", N = "leaping data" }},
{ 0x10D4641, new C{ T="Comment", N = "wall-leaping" }},
{ 0x10D4642, new C{ T="Comment", N = "wall-leaping fields" }},
{ 0x10D4, new FlagGroup { A=4, N="leap flags", STR = new Dictionary<int, string>()
{
{0, "force early roll" },
}}},
{ 0x10D8, new C{ T="Float", N = "dampening scale" }},
{ 0x10DC, new C{ T="Float", N = "roll delay" }},
{ 0x10E0, new C{ T="Float", N = "cannonball off-axis scale" }},
{ 0x10E4, new C{ T="Float", N = "cannonball off-track scale" }},
{ 0x10E8, new C{ T="Float", N = "cannonball roll bounds.min" }},
{ 0x10EC, new C{ T="Float", N = "cannonball roll bounds.max" }},
{ 0x10F0, new C{ T="Float", N = "anticipation ratio bounds.min" }},
{ 0x10F4, new C{ T="Float", N = "anticipation ratio bounds.max" }},
{ 0x10F8, new C{ T="Float", N = "reaction force bounds.min" }},
{ 0x10FC, new C{ T="Float", N = "reaction force bounds.max" }},
{ 0x1100, new C{ T="Float", N = "lobbing desire" }},
{ 0x1104643, new C{ T="Comment", N = "" }},
{ 0x1104644, new C{ T="Comment", N = "vaulting data" }},
{ 0x1104645, new C{ T="Comment", N = "vaulting" }},
{ 0x1104646, new C{ T="Comment", N = "vaulting fields" }},
{ 0x1104, new C{ T="Float", N = "vault height bounds.min" }},
{ 0x1108, new C{ T="Float", N = "vault height bounds.max" }},
{ 0x110C, new C{ T="Float", N = "vault max horizontal distance" }},
{ 0x1110, new C{ T="Float", N = "vault arc amount" }},
{ 0x1114, new C{ T="Float", N = "vault min object size" }},
{ 0x1118, new C{ T="Float", N = "search width" }},
{ 0x111C647, new C{ T="Comment", N = "" }},
{ 0x111C648, new C{ T="Comment", N = "ground fitting data" }},
{ 0x111C649, new C{ T="Comment", N = "ground fitting" }},
{ 0x111C650, new C{ T="Comment", N = "ground fitting data" }},
{ 0x111C, new FlagGroup { A=4, N="ground fitting flags", STR = new Dictionary<int, string>()
{
{0, "foot fixup enabled" },
{1, "root offset enabled" },
{2, "free foot enabled" },
{3, "z leg enabled" },
{4, "foot pull pinned" },
{5, "footlock adjusts root" },
{6, "raycast vehicles" },
{7, "foot fixup on composites" },
{8, "allow feet below grade" },
{9, "use biped up direction" },
{10, "snap marker above contact" },
{11, "allow ball-roll on foot when idle" },
}}},
{ 0x1120, new C{ T="Float", N = "ground normal dampening" }},
{ 0x1124, new C{ T="Float", N = "root offset max scale idle" }},
{ 0x1128, new C{ T="Float", N = "root offset max scale moving" }},
{ 0x112C, new C{ T="Float", N = "root offset dampening" }},
{ 0x1130, new C{ T="Float", N = "following cam scale" }},
{ 0x1134, new C{ T="Float", N = "root leaning scale" }},
{ 0x1138, new C{ T="Float", N = "stance width scale" }},
{ 0x113C, new C{ T="Float", N = "foot roll max" }},
{ 0x1140, new C{ T="Float", N = "foot pitch max" }},
{ 0x1144, new C{ T="Float", N = "foot normal dampening" }},
{ 0x1148, new C{ T="Float", N = "foot fitting test distance" }},
{ 0x114C, new C{ T="Float", N = "foot displacement upward dampening" }},
{ 0x1150, new C{ T="Float", N = "foot displacement downward dampening" }},
{ 0x1154, new C{ T="Float", N = "foot pull threshold distance idle" }},
{ 0x1158, new C{ T="Float", N = "foot pull threshold distance moving" }},
{ 0x115C, new C{ T="Float", N = "foot turn minimum radius" }},
{ 0x1160, new C{ T="Float", N = "foot turn maximum radius" }},
{ 0x1164, new C{ T="Float", N = "foot turn threshold radius" }},
{ 0x1168, new C{ T="Float", N = "foot turn rate dampening" }},
{ 0x116C, new C{ T="Float", N = "foot turn weight dampening" }},
{ 0x1170, new C{ T="Float", N = "foot turn blend on time" }},
{ 0x1174, new C{ T="Float", N = "foot turn blend off time" }},
{ 0x1178651, new C{ T="Comment", N = "" }},
{ 0x1178652, new C{ T="Comment", N = "pivot-on-foot" }},
{ 0x1178653, new C{ T="Comment", N = "pivot-on-foot data" }},
{ 0x1178, new C{ T="Float", N = "pivot-on-foot scale" }},
{ 0x117C, new C{ T="Float", N = "pivot min foot delta" }},
{ 0x1180, new C{ T="Float", N = "pivot stride length scale" }},
{ 0x1184, new C{ T="Float", N = "pivot throttle scale" }},
{ 0x1188, new C{ T="Float", N = "pivot offset dampening" }},
{ 0x118C, new C{ T="Float", N = "pivot force turn rate" }},
{ 0x1190654, new C{ T="Comment", N = "" }},
{ 0x1190655, new C{ T="Comment", N = "Ground fitting pelvis elevation settings" }},
{ 0x1190, new C{ T="Float", N = "ideal pelvis over high foot scale" }},
{ 0x1194, new C{ T="Float", N = "ideal pelvis over low foot scale" }},
{ 0x1198656, new C{ T="Comment", N = "" }},
{ 0x1198657, new C{ T="Comment", N = "Ledge Push" }},
{ 0x1198658, new C{ T="Comment", N = "Pushing over Ledges" }},
{ 0x1198, new C{ T="Float", N = "push over mag" }},
{ 0x119C, new C{ T="Float", N = "push back mag" }},
{ 0x11A0, new C{ T="Float", N = "ledgeIKSuccessRange" }},
{ 0x11A4, new C{ T="Float", N = "ledge warning time" }},
{ 0x11A8659, new C{ T="Comment", N = "" }},
{ 0x11A8660, new C{ T="Comment", N = "Foot locking" }},
{ 0x11A8, new C{ T="Float", N = "footlock Scale" }},
{ 0x11AC, new C{ T="Float", N = "footlock Min Throttle" }},
{ 0x11B0, new C{ T="Float", N = "footlock Max Throttle" }},
{ 0x11B4661, new C{ T="Comment", N = "" }},
{ 0x11B4, new C{ T="Float", N = "movement speed scale" }},
{ 0x11B8662, new C{ T="Comment", N = "" }},
{ 0x11B8, new C{ T="TagRef", N = "Player biped sound bank" }},
{ 0x11D4, new C{ T="TagRef", N = "Crouch down sound" }},
{ 0x11F0, new C{ T="TagRef", N = "Crouch up sound" }},
{ 0x120C, new C{ T="TagRef", N = "Shield impact override" }},
{ 0x1228, new C{ T="TagRef", N = "Non shield impact override" }},
{ 0x1244, new C{ T="Float", N = "Sound radius multiplier" }},
{ 0x1248, new C{ T="Tagblock", N = "Sound RTPCs", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="4Byte", N = "Attachment Index" }},
{ 0x4, new C{ T="mmr3Hash", N = "Function" }},
{ 0x8, new C{ T="mmr3Hash", N = "RTPC Name" }},
{ 0xC, new C{ T="4Byte", N = "RTPC name hash value" }},
}, S=16}},
{ 0x125C, new C{ T="Tagblock", N = "Sound Sweeteners", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "Function" }},
{ 0x4, new C{ T="TagRef", N = "sound" }},
{ 0x20, new C{ T="Float", N = "Switch point" }},
{ 0x24, new C{ T="4Byte", N = "Mode" }},
}, S=40}},
{ 0x1270, new C{ T="Tagblock", N = "Aiming Fixup", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "rotation_node" }},
{ 0x4663, new C{ T="Comment", N = "" }},
{ 0x4, new C{ T="mmr3Hash", N = "marker name" }},
{ 0x8, new C{ T="Float", N = "yaw bounds.min" }},
{ 0xC, new C{ T="Float", N = "yaw bounds.max" }},
{ 0x10, new C{ T="Float", N = "pitch bounds.min" }},
{ 0x14, new C{ T="Float", N = "pitch bounds.max" }},
{ 0x18, new C{ T="Float", N = "max yaw velocity" }},
{ 0x1C, new C{ T="Float", N = "max pitch velocity" }},
}, S=32}},
{ 0x1284, new C{ T="TagRef", N = "Self Illumination" }},
{ 0x12A0, new C{ T="TagRef", N = "Spartan Abilities" }},
{ 0x12BC664, new C{ T="Comment", N = "fbik data" }},
{ 0x12BC665, new C{ T="Comment", N = "IK aim and posture adjustment" }},
{ 0x12BC, new FlagGroup { A=4, N="flags", STR = new Dictionary<int, string>()
{
{0, "posture offsets enabled" },
{1, "aim fixup enabled" },
{2, "look fixup enabled" },
}}},
{ 0x12C0666, new C{ T="Comment", N = "posture" }},
{ 0x12C0667, new C{ T="Comment", N = "spine bounds for random posture variation" }},
{ 0x12C0668, new C{ T="Comment", N = "spine" }},
{ 0x12C0, new C{ T="Float", N = "x_bounds.min" }},
{ 0x12C4, new C{ T="Float", N = "x_bounds.max" }},
{ 0x12C8, new C{ T="Float", N = "y_bounds.min" }},
{ 0x12CC, new C{ T="Float", N = "y_bounds.max" }},
{ 0x12D0, new C{ T="Float", N = "z_bounds.min" }},
{ 0x12D4, new C{ T="Float", N = "z_bounds.max" }},
{ 0x12D8669, new C{ T="Comment", N = "hand bounds for random posture variation" }},
{ 0x12D8670, new C{ T="Comment", N = "hands" }},
{ 0x12D8, new C{ T="Float", N = "x_bounds.min" }},
{ 0x12DC, new C{ T="Float", N = "x_bounds.max" }},
{ 0x12E0, new C{ T="Float", N = "y_bounds.min" }},
{ 0x12E4, new C{ T="Float", N = "y_bounds.max" }},
{ 0x12E8, new C{ T="Float", N = "z_bounds.min" }},
{ 0x12EC, new C{ T="Float", N = "z_bounds.max" }},
{ 0x12F0671, new C{ T="Comment", N = "head bounds for random posture variation" }},
{ 0x12F0672, new C{ T="Comment", N = "head" }},
{ 0x12F0, new C{ T="Float", N = "x_bounds.min" }},
{ 0x12F4, new C{ T="Float", N = "x_bounds.max" }},
{ 0x12F8, new C{ T="Float", N = "y_bounds.min" }},
{ 0x12FC, new C{ T="Float", N = "y_bounds.max" }},
{ 0x1300, new C{ T="Float", N = "z_bounds.min" }},
{ 0x1304, new C{ T="Float", N = "z_bounds.max" }},
{ 0x1308673, new C{ T="Comment", N = "aim" }},
{ 0x1308674, new C{ T="Comment", N = "aim refinement settings" }},
{ 0x1308, new C{ T="Float", N = "aim fixup cos" }},
{ 0x130C, new C{ T="Float", N = "aim fixup power" }},
{ 0x1310675, new C{ T="Comment", N = "look" }},
{ 0x1310676, new C{ T="Comment", N = "look refinement settings" }},
{ 0x1310, new C{ T="Float", N = "look yaw scale" }},
{ 0x1314, new C{ T="Float", N = "look non yaw scale" }},
{ 0x1318, new C{ T="Float", N = "look bend scale" }},
{ 0x131C, new C{ T="Float", N = "look spine scale" }},
{ 0x1320, new C{ T="Float", N = "look cone angle" }},
{ 0x1324677, new C{ T="Comment", N = "jumpAntic" }},
{ 0x1324678, new C{ T="Comment", N = "jump antic settings" }},
{ 0x1324, new FlagGroup { A=4, N="flags", STR = new Dictionary<int, string>()
{
{0, "force airborne arc jumps" },
{1, "use leg IK during antic" },
{2, "use hip IK during antic" },
{3, "custom overlay during antic" },
}}},
{ 0x1328, new C{ T="Float", N = "max falloff elevation" }},
{ 0x132C679, new C{ T="Comment", N = "Overlay buildup curve" }},
{ 0x132C680, new C{ T="Comment", N = "Overlay buildup" }},
{ 0x132C681, new C{ T="Comment", N = "Overlay buildup function" }},
{ 0x132C682, new C{ T="Comment", N = "" }},
{ 0x132C, new C{ T="Unmapped", N = "data" }},
{ 0x1344683, new C{ T="Comment", N = "" }},
{ 0x1344684, new C{ T="Comment", N = "Overlay falloff curve" }},
{ 0x1344685, new C{ T="Comment", N = "Overlay falloff" }},
{ 0x1344686, new C{ T="Comment", N = "Overlay falloff function" }},
{ 0x1344687, new C{ T="Comment", N = "" }},
{ 0x1344, new C{ T="Unmapped", N = "data" }},
{ 0x135C688, new C{ T="Comment", N = "" }},
{ 0x135C689, new C{ T="Comment", N = "Hip IK buildup curve" }},
{ 0x135C690, new C{ T="Comment", N = "Hip IK buildup" }},
{ 0x135C691, new C{ T="Comment", N = "Hip IK buildup function" }},
{ 0x135C692, new C{ T="Comment", N = "" }},
{ 0x135C, new C{ T="Unmapped", N = "data" }},
{ 0x1374693, new C{ T="Comment", N = "" }},
{ 0x1374694, new C{ T="Comment", N = "Hip IK falloff curve" }},
{ 0x1374695, new C{ T="Comment", N = "Hip IK falloff" }},
{ 0x1374696, new C{ T="Comment", N = "Hip IK falloff function" }},
{ 0x1374697, new C{ T="Comment", N = "" }},
{ 0x1374, new C{ T="Unmapped", N = "data" }},
{ 0x138C698, new C{ T="Comment", N = "" }},
{ 0x138C699, new C{ T="Comment", N = "Leg IK falloff curve" }},
{ 0x138C700, new C{ T="Comment", N = "leg IK falloff" }},
{ 0x138C701, new C{ T="Comment", N = "leg IK falloff function" }},
{ 0x138C702, new C{ T="Comment", N = "" }},
{ 0x138C, new C{ T="Unmapped", N = "data" }},
{ 0x13A4703, new C{ T="Comment", N = "" }},
{ 0x13A4704, new C{ T="Comment", N = "" }},
{ 0x13A4705, new C{ T="Comment", N = "" }},
{ 0x13A4706, new C{ T="Comment", N = "procedural animation" }},
{ 0x13A4, new C{ T="Float", N = "Head soft ping, magnitude" }},
{ 0x13A8, new C{ T="Float", N = "Chest soft ping, magnitude" }},
{ 0x13AC, new C{ T="Float", N = "Gut soft ping, magnitude" }},
{ 0x13B0, new C{ T="Float", N = "Soft ping recoil, magnitude" }},
{ 0x13B4, new C{ T="Float", N = "Head soft ping, primary response time" }},
{ 0x13B8, new C{ T="Float", N = "Head soft ping, secondary response time" }},
{ 0x13BC, new C{ T="Float", N = "Chest soft ping, primary response time" }},
{ 0x13C0, new C{ T="Float", N = "Chest soft ping, secondary response time" }},
{ 0x13C4, new C{ T="Float", N = "Gut soft ping, primary response time" }},
{ 0x13C8, new C{ T="Float", N = "Gut soft ping, secondary response time" }},
{ 0x13CC, new C{ T="Float", N = "Arms soft ping, primary response time" }},
{ 0x13D0, new C{ T="Float", N = "Arms soft ping, secondary response time" }},
{ 0x13D4, new C{ T="Float", N = "Head soft ping, random twist strength" }},
{ 0x13D8, new C{ T="Float", N = "Chest soft ping, random twist strength" }},
{ 0x13DC, new C{ T="Float", N = "Gut soft ping, random twist strength" }},
{ 0x13E0, new C{ T="Float", N = "Maximum soft ping damage scalar" }},
{ 0x13E4, new C{ T="mmr3Hash", N = "Override object function for the sprint speed fraction" }},
{ 0x13E8707, new C{ T="Comment", N = "properties" }},
{ 0x13E8708, new C{ T="Comment", N = "properties" }},
{ 0x13E8, new C{ T="Tagblock", N = "locomotion properties", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=1, N="Flags", STR = new Dictionary<int, string>()
{
{0, "Disable STAS (Stick-To-Authored-Samples)" },
}}},
{ 0x1, new C{ T="Comment", N = "generated_pad2640" }},
{ 0x4709, new C{ T="Comment", N = "Walk speed properties" }},
{ 0x4, new C{ T="Float", N = "walking speed" }},
{ 0x8710, new C{ T="Comment", N = "AI Sprint speed properties" }},
{ 0x8, new C{ T="Float", N = "AI sprinting speed" }},
{ 0xC711, new C{ T="Comment", N = "Run speed properties" }},
{ 0xC, new C{ T="Float", N = "running forward speed" }},
{ 0x10, new C{ T="Float", N = "running backward speed" }},
{ 0x14, new C{ T="Float", N = "running sideways speed" }},
{ 0x18712, new C{ T="Comment", N = "Crouch speed properties" }},
{ 0x18, new C{ T="Float", N = "crouching forward speed" }},
{ 0x1C, new C{ T="Float", N = "crouching backward speed" }},
{ 0x20, new C{ T="Float", N = "crouching sideways speed" }},
{ 0x24713, new C{ T="Comment", N = "Acceleration/deceleration properties" }},
{ 0x24, new C{ T="Float", N = "maximum run acceleration" }},
{ 0x28, new C{ T="Float", N = "maximum run deceleration" }},
{ 0x2C, new C{ T="Float", N = "maximum crouch acceleration" }},
{ 0x30, new C{ T="Float", N = "maximum crouch deceleration" }},
{ 0x34, new C{ T="Float", N = "minimum slip recovery acceleration" }},
{ 0x38714, new C{ T="Comment", N = "Airborne Acceleration/Deceleration" }},
{ 0x38, new C{ T="Float", N = "maximum airborne acceleration" }},
{ 0x3C, new C{ T="Float", N = "maximum airborne deceleration" }},
{ 0x40715, new C{ T="Comment", N = "Stationary turn properties old action system" }},
{ 0x40, new C{ T="Float", N = "low speed threshold" }},
{ 0x44, new C{ T="Float", N = "high speed threshold" }},
{ 0x48, new C{ T="Float", N = "acceleration" }},
{ 0x4C716, new C{ T="Comment", N = "Stationary turn properties new action system" }},
{ 0x4C, new C{ T="Float", N = "stationary turn trigger range factor" }},
{ 0x50, new C{ T="Float", N = "stationary turn max anim playback speed up factor" }},
{ 0x54717, new C{ T="Comment", N = "Stationary turn properties new action system (DEPRECATED)" }},
{ 0x54, new C{ T="Float", N = "min stationary turn angle" }},
{ 0x58, new C{ T="Float", N = "stationary turn max speed threshold" }},
{ 0x5C, new C{ T="Float", N = "stationary turn min yaw threshold" }},
{ 0x60, new C{ T="Float", N = "stationary turn max speed yaw" }},
{ 0x64, new C{ T="Float", N = "min stationary turn speed" }},
{ 0x68, new C{ T="Float", N = "max stationary turn speed" }},
{ 0x6C, new C{ T="Float", N = "stationary turn acceleration rate" }},
{ 0x70, new C{ T="Float", N = "stationary turn decceleration rate" }},
{ 0x74718, new C{ T="Comment", N = "Non stationary turn properties" }},
{ 0x74, new C{ T="Float", N = "max angular velocity clamp" }},
{ 0x78, new C{ T="Float", N = "turn accel/decel rate" }},
{ 0x7C719, new C{ T="Comment", N = "Speed/acceleration scales based on mode" }},
{ 0x7C, new C{ T="Tagblock", N = "Mode specific scaling", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "mode name" }},
{ 0x4, new C{ T="Float", N = "speed scale" }},
{ 0x8, new C{ T="Float", N = "acceleration scale" }},
{ 0xC, new C{ T="Float", N = "locomotion turn rate scale" }},
}, S=16}},
}, S=144}},
{ 0x13FC720, new C{ T="Comment", N = "walking speed" }},
{ 0x13FC721, new C{ T="Comment", N = "walking speed" }},
{ 0x13FC, new C{ T="Float", N = "Base Value" }},
{ 0x1400, new C{ T="Float", N = "Value Bounds.min" }},
{ 0x1404, new C{ T="Float", N = "Value Bounds.max" }},
{ 0x1408722, new C{ T="Comment", N = "AI sprinting speed" }},
{ 0x1408723, new C{ T="Comment", N = "AI sprinting speed" }},
{ 0x1408, new C{ T="Float", N = "Base Value" }},
{ 0x140C, new C{ T="Float", N = "Value Bounds.min" }},
{ 0x1410, new C{ T="Float", N = "Value Bounds.max" }},
{ 0x1414724, new C{ T="Comment", N = "running forward speed" }},
{ 0x1414725, new C{ T="Comment", N = "running forward speed" }},
{ 0x1414, new C{ T="Float", N = "Base Value" }},
{ 0x1418, new C{ T="Float", N = "Value Bounds.min" }},
{ 0x141C, new C{ T="Float", N = "Value Bounds.max" }},
{ 0x1420726, new C{ T="Comment", N = "running backward speed" }},
{ 0x1420727, new C{ T="Comment", N = "running backward speed" }},
{ 0x1420, new C{ T="Float", N = "Base Value" }},
{ 0x1424, new C{ T="Float", N = "Value Bounds.min" }},
{ 0x1428, new C{ T="Float", N = "Value Bounds.max" }},
{ 0x142C728, new C{ T="Comment", N = "running sideways speed" }},
{ 0x142C729, new C{ T="Comment", N = "running sideways speed" }},
{ 0x142C, new C{ T="Float", N = "Base Value" }},
{ 0x1430, new C{ T="Float", N = "Value Bounds.min" }},
{ 0x1434, new C{ T="Float", N = "Value Bounds.max" }},
{ 0x1438730, new C{ T="Comment", N = "crouching forward speed" }},
{ 0x1438731, new C{ T="Comment", N = "crouching forward speed" }},
{ 0x1438, new C{ T="Float", N = "Base Value" }},
{ 0x143C, new C{ T="Float", N = "Value Bounds.min" }},
{ 0x1440, new C{ T="Float", N = "Value Bounds.max" }},
{ 0x1444732, new C{ T="Comment", N = "crouching backward speed" }},
{ 0x1444733, new C{ T="Comment", N = "crouching backward speed" }},
{ 0x1444, new C{ T="Float", N = "Base Value" }},
{ 0x1448, new C{ T="Float", N = "Value Bounds.min" }},
{ 0x144C, new C{ T="Float", N = "Value Bounds.max" }},
{ 0x1450734, new C{ T="Comment", N = "crouching sideways speed" }},
{ 0x1450735, new C{ T="Comment", N = "crouching sideways speed" }},
{ 0x1450, new C{ T="Float", N = "Base Value" }},
{ 0x1454, new C{ T="Float", N = "Value Bounds.min" }},
{ 0x1458, new C{ T="Float", N = "Value Bounds.max" }},
{ 0x145C736, new C{ T="Comment", N = "maximum run acceleration" }},
{ 0x145C737, new C{ T="Comment", N = "maximum run acceleration" }},
{ 0x145C, new C{ T="Float", N = "Base Value" }},
{ 0x1460, new C{ T="Float", N = "Value Bounds.min" }},
{ 0x1464, new C{ T="Float", N = "Value Bounds.max" }},
{ 0x1468738, new C{ T="Comment", N = "maximum crouch acceleration" }},
{ 0x1468739, new C{ T="Comment", N = "maximum crouch acceleration" }},
{ 0x1468, new C{ T="Float", N = "Base Value" }},
{ 0x146C, new C{ T="Float", N = "Value Bounds.min" }},
{ 0x1470, new C{ T="Float", N = "Value Bounds.max" }},
{ 0x1474740, new C{ T="Comment", N = "maximum airborne acceleration" }},
{ 0x1474741, new C{ T="Comment", N = "maximum airborne acceleration" }},
{ 0x1474, new C{ T="Float", N = "Base Value" }},
{ 0x1478, new C{ T="Float", N = "Value Bounds.min" }},
{ 0x147C, new C{ T="Float", N = "Value Bounds.max" }},
{ 0x1480742, new C{ T="Comment", N = "movement speed scalar" }},
{ 0x1480743, new C{ T="Comment", N = "movement speed scalar" }},
{ 0x1480, new C{ T="Float", N = "Base Value" }},
{ 0x1484, new C{ T="Float", N = "Value Bounds.min" }},
{ 0x1488, new C{ T="Float", N = "Value Bounds.max" }},
{ 0x148C744, new C{ T="Comment", N = "movement gravity scalar" }},
{ 0x148C745, new C{ T="Comment", N = "movement gravity scalar" }},
{ 0x148C, new C{ T="Float", N = "Base Value" }},
{ 0x1490, new C{ T="Float", N = "Value Bounds.min" }},
{ 0x1494, new C{ T="Float", N = "Value Bounds.max" }},
{ 0x1498746, new C{ T="Comment", N = "movement jump scalar" }},
{ 0x1498747, new C{ T="Comment", N = "movement jump scalar" }},
{ 0x1498, new C{ T="Float", N = "Base Value" }},
{ 0x149C, new C{ T="Float", N = "Value Bounds.min" }},
{ 0x14A0, new C{ T="Float", N = "Value Bounds.max" }},
{ 0x14A4748, new C{ T="Comment", N = "movement clamber speed scalar" }},
{ 0x14A4749, new C{ T="Comment", N = "movement clamber speed scalar" }},
{ 0x14A4, new C{ T="Float", N = "Base Value" }},
{ 0x14A8, new C{ T="Float", N = "Value Bounds.min" }},
{ 0x14AC, new C{ T="Float", N = "Value Bounds.max" }},
{ 0x14B0750, new C{ T="Comment", N = "speed forward scalar" }},
{ 0x14B0751, new C{ T="Comment", N = "speed forward scalar" }},
{ 0x14B0, new C{ T="Float", N = "Base Value" }},
{ 0x14B4, new C{ T="Float", N = "Value Bounds.min" }},
{ 0x14B8, new C{ T="Float", N = "Value Bounds.max" }},
{ 0x14BC752, new C{ T="Comment", N = "speed strafe scalar" }},
{ 0x14BC753, new C{ T="Comment", N = "speed strafe scalar" }},
{ 0x14BC, new C{ T="Float", N = "Base Value" }},
{ 0x14C0, new C{ T="Float", N = "Value Bounds.min" }},
{ 0x14C4, new C{ T="Float", N = "Value Bounds.max" }},
{ 0x14C8754, new C{ T="Comment", N = "acceleration forward scalar" }},
{ 0x14C8755, new C{ T="Comment", N = "acceleration forward scalar" }},
{ 0x14C8, new C{ T="Float", N = "Base Value" }},
{ 0x14CC, new C{ T="Float", N = "Value Bounds.min" }},
{ 0x14D0, new C{ T="Float", N = "Value Bounds.max" }},
{ 0x14D4, new C{ T="Float", N = "acceleration opposing forward scalar" }},
{ 0x14D8756, new C{ T="Comment", N = "acceleration strafe scalar" }},
{ 0x14D8757, new C{ T="Comment", N = "acceleration strafe scalar" }},
{ 0x14D8, new C{ T="Float", N = "Base Value" }},
{ 0x14DC, new C{ T="Float", N = "Value Bounds.min" }},
{ 0x14E0, new C{ T="Float", N = "Value Bounds.max" }},
{ 0x14E4, new C{ T="Float", N = "acceleration opposing strafe scalar" }},
{ 0x14E8758, new C{ T="Comment", N = "acceleration airborne scalar" }},
{ 0x14E8759, new C{ T="Comment", N = "acceleration airborne scalar" }},
{ 0x14E8, new C{ T="Float", N = "Base Value" }},
{ 0x14EC, new C{ T="Float", N = "Value Bounds.min" }},
{ 0x14F0, new C{ T="Float", N = "Value Bounds.max" }},
{ 0x14F4760, new C{ T="Comment", N = "slide duration scalar" }},
{ 0x14F4761, new C{ T="Comment", N = "slide duration scalar" }},
{ 0x14F4, new C{ T="Float", N = "Base Value" }},
{ 0x14F8, new C{ T="Float", N = "Value Bounds.min" }},
{ 0x14FC, new C{ T="Float", N = "Value Bounds.max" }},
{ 0x1500762, new C{ T="Comment", N = "slide speed scalar" }},
{ 0x1500763, new C{ T="Comment", N = "slide speed scalar" }},
{ 0x1500, new C{ T="Float", N = "Base Value" }},
{ 0x1504, new C{ T="Float", N = "Value Bounds.min" }},
{ 0x1508, new C{ T="Float", N = "Value Bounds.max" }},
{ 0x150C764, new C{ T="Comment", N = "Biped modifier" }},
{ 0x150C, new C{ T="TagRef", N = "biped modifier set" }},
{ 0x1528, new C{ T="TagRef", N = "Rez Out Effect" }},
{ 0x1544, new C{ T="Float", N = "Rez Out Effect Buffer" }},
{ 0x1548, new C{ T="Tagblock", N = "Hover Properties", B = new Dictionary<long, C>
{
{ 0x0765, new C{ T="Comment", N = "Hover Properties" }},
{ 0x0, new C{ T="Float", N = "Resting Hover Height.min" }},
{ 0x4, new C{ T="Float", N = "Resting Hover Height.max" }},
{ 0x8, new C{ T="Float", N = "Default Height Tolerance" }},
{ 0xC, new C{ T="Float", N = "Spring interpolation time" }},
{ 0x10, new C{ T="Float", N = "Hard Land Start Threshold" }},
{ 0x14, new C{ T="Float", N = "Hard Land Settle Down Threshold" }},
{ 0x18, new C{ T="Float", N = "Hard Land Slow Down Height" }},
{ 0x1C, new C{ T="Float", N = "Hard Land Bottom Height" }},
{ 0x20, new C{ T="Float", N = "Soft Land Start Threshold" }},
{ 0x24, new C{ T="Float", N = "Soft Land Slow Down Threshold" }},
{ 0x28, new C{ T="Float", N = "Soft Land Settle Height" }},
{ 0x2C, new C{ T="Float", N = "Soft Land Bottom Height" }},
{ 0x30766, new C{ T="Comment", N = "Land Interpolation Function" }},
{ 0x30767, new C{ T="Comment", N = "function" }},
{ 0x30768, new C{ T="Comment", N = "function" }},
{ 0x30769, new C{ T="Comment", N = "" }},
{ 0x30, new C{ T="Unmapped", N = "data" }},
{ 0x48770, new C{ T="Comment", N = "" }},
{ 0x48771, new C{ T="Comment", N = "Settle Land Interpolation Function" }},
{ 0x48772, new C{ T="Comment", N = "function" }},
{ 0x48773, new C{ T="Comment", N = "function" }},
{ 0x48774, new C{ T="Comment", N = "" }},
{ 0x48, new C{ T="Unmapped", N = "data" }},
{ 0x60775, new C{ T="Comment", N = "" }},
{ 0x60776, new C{ T="Comment", N = "Reset To Resting Height Interpolation Function" }},
{ 0x60777, new C{ T="Comment", N = "function" }},
{ 0x60778, new C{ T="Comment", N = "function" }},
{ 0x60779, new C{ T="Comment", N = "" }},
{ 0x60, new C{ T="Unmapped", N = "data" }},
{ 0x78780, new C{ T="Comment", N = "" }},
{ 0x78781, new C{ T="Comment", N = "" }},
}, S=120}},
{ 0x155C, new C{ T="4Byte", N = "generated_padc5c1" }},
}},

{ "mode", new()
{
{ 0x010813, new C{ T="Comment", N = "AnyTag" }},
{ 0x0, new C{ T="Pointer", N = "vtable space" }},
{ 0x810814, new C{ T="Comment", N = "internal struct" }},
{ 0x8, new C{ T="4Byte", N = "global tag ID" }},
{ 0xC, new C{ T="4Byte", N = "local tag handle" }},
{ 0x10, new C{ T="mmr3Hash", N = "name" }},
{ 0x14, new FlagGroup { A=2, N="flags", STR = new Dictionary<int, string>()
{
{0, "is hologram" },
{1, "has node maps" },
{2, "LOD regions enabled" },
{3, "has custom shadow meshes" },
{4, "is hologram lofi" },
{5, "has skinned tree parts" },
{6, "Supports Material Coatings" },
{7, "Requires Hologram Prepass" },
}}},
{ 0x16, new C{ T="Unmapped", N = "version" }},
{ 0x18, new EnumGroup { A=4, N="mesh resource packing policy", STR = new Dictionary<int, string>()
{
{0, "Single resource" },
{1, "Resource per mesh permutation" },
}}},
{ 0x1C, new EnumGroup { A=1, N="Default Load Variant Policy", STR = new Dictionary<int, string>()
{
{0, "All Variants" },
{1, "First Variant" },
}}},
{ 0x1D, new C{ T="Comment", N = "generated_padd53e" }},
{ 0x20, new C{ T="4Byte", N = "Number of LODS to make required memory" }},
{ 0x2410815, new C{ T="Comment", N = "" }},
{ 0x24, new C{ T="4Byte", N = "runtime import info checksum" }},
{ 0x2810816, new C{ T="Comment", N = "" }},
{ 0x28, new C{ T="Tagblock", N = "regions", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "name" }},
{ 0x4, new C{ T="Tagblock", N = "permutations", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "name" }},
{ 0x4, new C{ T="2Byte", N = "mesh index" }},
{ 0x6, new C{ T="Unmapped", N = "mesh count" }},
{ 0x8, new C{ T="mmr3Hash", N = "clone name" }},
}, S=12}},
}, S=24}},
{ 0x3C, new C{ T="4Byte", N = "node list checksum" }},
{ 0x40, new C{ T="Tagblock", N = "nodes", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "name" }},
{ 0x4, new C{ T="2Byte", N = "parent node" }},
{ 0x6, new C{ T="2Byte", N = "first child node" }},
{ 0x8, new C{ T="2Byte", N = "next sibling node" }},
{ 0xA, new FlagGroup { A=2, N="flags", STR = new Dictionary<int, string>()
{
{0, "forceDeterministic" },
{1, "forceRenderthread" },
}}},
{ 0xC, new C{ T="Float", N = "default translation.X" }},
{ 0x10, new C{ T="Float", N = "default translation.Y" }},
{ 0x14, new C{ T="Float", N = "default translation.Z" }},
{ 0x18, new C{ T="Unmapped", N = "default rotation" }},
{ 0x24, new C{ T="Float", N = "inverse forward.X" }},
{ 0x28, new C{ T="Float", N = "inverse forward.Y" }},
{ 0x2C, new C{ T="Float", N = "inverse forward.Z" }},
{ 0x30, new C{ T="Float", N = "inverse left.X" }},
{ 0x34, new C{ T="Float", N = "inverse left.Y" }},
{ 0x38, new C{ T="Float", N = "inverse left.Z" }},
{ 0x3C, new C{ T="Float", N = "inverse up.X" }},
{ 0x40, new C{ T="Float", N = "inverse up.Y" }},
{ 0x44, new C{ T="Float", N = "inverse up.Z" }},
{ 0x48, new C{ T="Float", N = "inverse position.X" }},
{ 0x4C, new C{ T="Float", N = "inverse position.Y" }},
{ 0x50, new C{ T="Float", N = "inverse position.Z" }},
{ 0x54, new C{ T="Float", N = "inverse scale" }},
{ 0x58, new C{ T="Float", N = "distance from parent" }},
{ 0x5C10817, new C{ T="Comment", N = "Procedural Joint" }},
{ 0x5C, new EnumGroup { A=1, N="procedure", STR = new Dictionary<int, string>()
{
{0, "NONE" },
{1, "multiply rotation" },
{2, "copy_scaled_twist" },
{3, "look_at" },
{4, "copy_local_orientation" },
{5, "copy_scaled_twist_legacy" },
}}},
{ 0x5D, new EnumGroup { A=1, N="procedure axis", STR = new Dictionary<int, string>()
{
{0, "ALL" },
{1, "Yaw (Maya Y)" },
{2, "Pitch (Maya X)" },
{3, "Roll (Maya Z)" },
}}},
{ 0x5E, new C{ T="Byte", N = "procedure index" }},
{ 0x5F, new C{ T="Byte", N = "generated_pad3a2d" }},
{ 0x60, new C{ T="2Byte", N = "procedure node A" }},
{ 0x62, new C{ T="2Byte", N = "procedure node B" }},
{ 0x64, new C{ T="Float", N = "procedure var 1" }},
{ 0x68, new C{ T="Float", N = "procedure var 2" }},
{ 0x6C, new C{ T="Float", N = "procedure neutral offset.X" }},
{ 0x70, new C{ T="Float", N = "procedure neutral offset.Y" }},
{ 0x74, new C{ T="Float", N = "procedure neutral offset.Z" }},
{ 0x7810818, new C{ T="Comment", N = "" }},
}, S=120}},
{ 0x54, new C{ T="Tagblock", N = "Bone Settings", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="2Byte", N = "Node" }},
{ 0x2, new C{ T="2Byte", N = "generated_pad07da" }},
{ 0x4, new C{ T="Float", N = "Spring Coefficient" }},
{ 0x8, new C{ T="Float", N = "Dampening Fraction[0-1]" }},
{ 0xC, new C{ T="Float", N = "Max Angle" }},
}, S=16}},
{ 0x68, new C{ T="Tagblock", N = "marker groups", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "name" }},
{ 0x4, new C{ T="Tagblock", N = "markers", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Unmapped", N = "region index" }},
{ 0x1, new C{ T="Comment", N = "generated_padb0cb" }},
{ 0x4, new C{ T="4Byte", N = "permutation index" }},
{ 0x8, new C{ T="Unmapped", N = "node index" }},
{ 0xA, new FlagGroup { A=1, N="flags", STR = new Dictionary<int, string>()
{
{0, "has node relative direction" },
}}},
{ 0xB, new C{ T="Byte", N = "generated_pad6416" }},
{ 0xC, new C{ T="Float", N = "translation.X" }},
{ 0x10, new C{ T="Float", N = "translation.Y" }},
{ 0x14, new C{ T="Float", N = "translation.Z" }},
{ 0x18, new C{ T="Unmapped", N = "rotation" }},
{ 0x24, new C{ T="Float", N = "scale" }},
{ 0x28, new C{ T="Float", N = "direction.X" }},
{ 0x2C, new C{ T="Float", N = "direction.Y" }},
{ 0x30, new C{ T="Float", N = "direction.Z" }},
}, S=52}},
}, S=24}},
{ 0x7C, new C{ T="Tagblock", N = "materials", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "material" }},
}, S=28}},
{ 0x90, new C{ T="Tagblock", N = "errors", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="String", N = "name" }},
{ 0x100, new EnumGroup { A=1, N="report type", STR = new Dictionary<int, string>()
{
{0, "silent" },
{1, "comment" },
{2, "warning" },
{3, "error" },
}}},
{ 0x101, new C{ T="Byte", N = "generated_padf276" }},
{ 0x102, new FlagGroup { A=2, N="flags", STR = new Dictionary<int, string>()
{
{0, "rendered" },
{1, "tangent-space" },
{2, "non-critical" },
{3, "lightmap light" },
{4, "report key is valid" },
}}},
{ 0x104, new C{ T="Unmapped", N = "runtime generation flags" }},
{ 0x106, new C{ T="2Byte", N = "generated_pad3f2b" }},
{ 0x108, new C{ T="4Byte", N = "runtime something" }},
{ 0x10C, new C{ T="Tagblock", N = "reports", B = new Dictionary<long, C>
{
{ 0x0, new EnumGroup { A=1, N="type", STR = new Dictionary<int, string>()
{
{0, "silent" },
{1, "comment" },
{2, "warning" },
{3, "error" },
}}},
{ 0x1, new EnumGroup { A=1, N="source", STR = new Dictionary<int, string>()
{
{0, "none" },
{1, "structure" },
{2, "poop" },
{3, "lightmap" },
{4, "pathfinding" },
}}},
{ 0x2, new FlagGroup { A=2, N="flags", STR = new Dictionary<int, string>()
{
{0, "rendered" },
{1, "tangent-space" },
{2, "non-critical" },
{3, "lightmap light" },
{4, "report key is valid" },
}}},
{ 0x4, new C{ T="Unmapped", N = "text" }},
{ 0x1C, new C{ T="4Byte", N = "source identifier" }},
{ 0x20, new C{ T="String", N = "source filename" }},
{ 0x40, new C{ T="4Byte", N = "source line number" }},
{ 0x44, new C{ T="Tagblock", N = "vertices", B = new Dictionary<long, C>
{
{ 0x010819, new C{ T="Comment", N = "point" }},
{ 0x0, new C{ T="Float", N = "position.X" }},
{ 0x4, new C{ T="Float", N = "position.Y" }},
{ 0x8, new C{ T="Float", N = "position.Z" }},
{ 0xC, new C{ T="Unmapped", N = "node indices" }},
{ 0x2C, new C{ T="Unmapped", N = "node weights" }},
{ 0x4C, new C{ T="Unmapped", N = "color" }},
{ 0x50, new C{ T="Float", N = "screen size" }},
}, S=84}},
{ 0x58, new C{ T="Tagblock", N = "vectors", B = new Dictionary<long, C>
{
{ 0x010820, new C{ T="Comment", N = "point" }},
{ 0x0, new C{ T="Float", N = "position.X" }},
{ 0x4, new C{ T="Float", N = "position.Y" }},
{ 0x8, new C{ T="Float", N = "position.Z" }},
{ 0xC, new C{ T="Unmapped", N = "node indices" }},
{ 0x2C, new C{ T="Unmapped", N = "node weights" }},
{ 0x4C, new C{ T="Unmapped", N = "color" }},
{ 0x50, new C{ T="Float", N = "normal.X" }},
{ 0x54, new C{ T="Float", N = "normal.Y" }},
{ 0x58, new C{ T="Float", N = "normal.Z" }},
{ 0x5C, new C{ T="Float", N = "screen length" }},
}, S=96}},
{ 0x6C, new C{ T="Tagblock", N = "lines", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Unmapped", N = "points" }},
{ 0x20, new C{ T="Unmapped", N = "color" }},
}, S=36}},
{ 0x80, new C{ T="Tagblock", N = "triangles", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Unmapped", N = "points" }},
{ 0x20, new C{ T="Unmapped", N = "color" }},
}, S=36}},
{ 0x94, new C{ T="Tagblock", N = "quads", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Unmapped", N = "points" }},
{ 0x20, new C{ T="Unmapped", N = "color" }},
}, S=36}},
{ 0xA8, new C{ T="Tagblock", N = "comments", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Unmapped", N = "text" }},
{ 0x1810821, new C{ T="Comment", N = "point" }},
{ 0x18, new C{ T="Float", N = "position.X" }},
{ 0x1C, new C{ T="Float", N = "position.Y" }},
{ 0x20, new C{ T="Float", N = "position.Z" }},
{ 0x24, new C{ T="Unmapped", N = "node indices" }},
{ 0x44, new C{ T="Unmapped", N = "node weights" }},
{ 0x64, new C{ T="Unmapped", N = "color" }},
}, S=104}},
{ 0xBC, new C{ T="4Byte", N = "report key" }},
{ 0xC0, new C{ T="4Byte", N = "node index" }},
{ 0xC4, new C{ T="Float", N = "bounds x.min" }},
{ 0xC8, new C{ T="Float", N = "bounds x.max" }},
{ 0xCC, new C{ T="Float", N = "bounds y.min" }},
{ 0xD0, new C{ T="Float", N = "bounds y.max" }},
{ 0xD4, new C{ T="Float", N = "bounds z.min" }},
{ 0xD8, new C{ T="Float", N = "bounds z.max" }},
{ 0xDC, new C{ T="Unmapped", N = "color" }},
}, S=224}},
}, S=288}},
{ 0xA4, new C{ T="Float", N = "don't draw over camera cosine angle" }},
{ 0xA810822, new C{ T="Comment", N = "render geometry" }},
{ 0xA8, new FlagGroup { A=4, N="runtime flags", STR = new Dictionary<int, string>()
{
{0, "processed" },
{1, "available" },
{2, "has valid budgets (really)" },
{3, "manual resource creation" },
{4, "keep raw geometry" },
{5, "dont use compressed vertex positions" },
{6, "pca animation table sorted" },
{7, "has dual quat" },
{8, "mesh streaming" },
}}},
{ 0xAC, new C{ T="Tagblock", N = "meshes import info", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="4Byte", N = "CRC" }},
{ 0x4, new C{ T="Float", N = "position bounds 0.X" }},
{ 0x8, new C{ T="Float", N = "position bounds 0.Y" }},
{ 0xC, new C{ T="Float", N = "position bounds 0.Z" }},
{ 0x10, new C{ T="Float", N = "position bounds 1.X" }},
{ 0x14, new C{ T="Float", N = "position bounds 1.Y" }},
{ 0x18, new C{ T="Float", N = "position bounds 1.Z" }},
{ 0x1C, new C{ T="Unmapped", N = "texcoord bounds 0" }},
{ 0x20, new C{ T="Unmapped", N = "texcoord bounds 1" }},
}, S=36}},
{ 0xC0, new C{ T="Tagblock", N = "meshes", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Tagblock", N = "LOD render data", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Tagblock", N = "per mesh temporary", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Tagblock", N = "raw vertices", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "position.X" }},
{ 0x4, new C{ T="Float", N = "position.Y" }},
{ 0x8, new C{ T="Float", N = "position.Z" }},
{ 0xC, new C{ T="Unmapped", N = "texcoord" }},
{ 0x10, new C{ T="Float", N = "normal.X" }},
{ 0x14, new C{ T="Float", N = "normal.Y" }},
{ 0x18, new C{ T="Float", N = "normal.Z" }},
{ 0x1C, new C{ T="Float", N = "binormal.X" }},
{ 0x20, new C{ T="Float", N = "binormal.Y" }},
{ 0x24, new C{ T="Float", N = "binormal.Z" }},
{ 0x28, new C{ T="Float", N = "tangent.X" }},
{ 0x2C, new C{ T="Float", N = "tangent.Y" }},
{ 0x30, new C{ T="Float", N = "tangent.Z" }},
{ 0x34, new C{ T="Unmapped", N = "lightmap texcoord" }},
{ 0x38, new C{ T="Unmapped", N = "node indices" }},
{ 0x58, new C{ T="Unmapped", N = "node weights" }},
{ 0x78, new C{ T="Float", N = "vertex color.X" }},
{ 0x7C, new C{ T="Float", N = "vertex color.Y" }},
{ 0x80, new C{ T="Float", N = "vertex color.Z" }},
{ 0x84, new C{ T="Unmapped", N = "texcoord1" }},
{ 0x88, new C{ T="Float", N = "dual quat weight" }},
{ 0x8C, new C{ T="Float", N = "vertex alpha" }},
{ 0x90, new C{ T="Float", N = "tangent UV2.X" }},
{ 0x94, new C{ T="Float", N = "tangent UV2.Y" }},
{ 0x98, new C{ T="Float", N = "tangent UV2.Z" }},
{ 0x9C, new C{ T="Unmapped", N = "texcoord2" }},
{ 0xA0, new C{ T="Float", N = "tangent UV3.X" }},
{ 0xA4, new C{ T="Float", N = "tangent UV3.Y" }},
{ 0xA8, new C{ T="Float", N = "tangent UV3.Z" }},
}, S=172}},
{ 0x14, new C{ T="Tagblock", N = "raw indices", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Unmapped", N = "word" }},
}, S=2}},
{ 0x28, new C{ T="Tagblock", N = "raw indices32", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="4Byte", N = "dword" }},
}, S=4}},
{ 0x3C, new C{ T="Tagblock", N = "raw water data", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Tagblock", N = "raw water indices", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Unmapped", N = "word" }},
}, S=2}},
{ 0x14, new C{ T="Tagblock", N = "raw water vertices", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Unmapped", N = "base texcoord" }},
}, S=4}},
}, S=40}},
{ 0x50, new C{ T="Tagblock", N = "raw blendshapes", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "position.X" }},
{ 0x4, new C{ T="Float", N = "position.Y" }},
{ 0x8, new C{ T="Float", N = "position.Z" }},
{ 0xC, new C{ T="Float", N = "normal.X" }},
{ 0x10, new C{ T="Float", N = "normal.Y" }},
{ 0x14, new C{ T="Float", N = "normal.Z" }},
{ 0x18, new C{ T="Unmapped", N = "tension and ambient occlusion" }},
{ 0x1C, new C{ T="4Byte", N = "target Id" }},
}, S=32}},
{ 0x64, new C{ T="Tagblock", N = "raw blendshapes indices", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="4Byte", N = "dword" }},
}, S=4}},
{ 0x78, new C{ T="Tagblock", N = "raw tension edges", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="4Byte", N = "start vertex index" }},
{ 0x4, new C{ T="4Byte", N = "end vertex index" }},
{ 0x8, new C{ T="Float", N = "edge rest length" }},
}, S=12}},
{ 0x8C, new C{ T="Tagblock", N = "raw blendshapes triangle and edge Indices", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="4Byte", N = "dword" }},
}, S=4}},
{ 0xA0, new C{ T="Tagblock", N = "raw blendshapes triangle and edge index info", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="4Byte", N = "triangle and edge index pos" }},
{ 0x4, new C{ T="4Byte", N = "encoded triangle and edge size" }},
}, S=8}},
{ 0xB4, new FlagGroup { A=4, N="flags", STR = new Dictionary<int, string>()
{
{0, "indices are triangle strips" },
{1, "indices are triangle lists" },
{2, "indices are quad lists" },
}}},
{ 0xB8, new C{ T="Tagblock", N = "level breakdown data", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "Asset tag" }},
{ 0x1C, new C{ T="mmr3Hash", N = "Default variant name" }},
{ 0x20, new C{ T="TagRef", N = "LOD settings tag" }},
{ 0x3C, new C{ T="mmr3Hash", N = "LOD settings name" }},
{ 0x40, new C{ T="4Byte", N = "Convert Collision to Shadow Geometry" }},
{ 0x44, new C{ T="Tagblock", N = "Asset variants", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "Variant name" }},
{ 0x4, new C{ T="TagRef", N = "Runtime Geo" }},
{ 0x20, new C{ T="TagRef", N = "Static Collision Geo" }},
}, S=60}},
}, S=88}},
}, S=204}},
{ 0x14, new C{ T="Tagblock", N = "part sorting position", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Unmapped", N = "plane" }},
{ 0xC, new C{ T="Float", N = "position.X" }},
{ 0x10, new C{ T="Float", N = "position.Y" }},
{ 0x14, new C{ T="Float", N = "position.Z" }},
{ 0x18, new C{ T="Float", N = "radius" }},
{ 0x1C, new C{ T="Unmapped", N = "node indices" }},
{ 0x3C, new C{ T="Unmapped", N = "node weights" }},
}, S=92}},
{ 0x28, new C{ T="Tagblock", N = "parts", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="2Byte", N = "material index" }},
{ 0x2, new C{ T="2Byte", N = "transparent sorting index" }},
{ 0x4, new C{ T="4Byte", N = "index start" }},
{ 0x8, new C{ T="4Byte", N = "index count" }},
{ 0xC, new C{ T="4Byte", N = "perMeshPartConstantsOffset" }},
{ 0x10, new C{ T="Byte", N = "part type" }},
{ 0x11, new C{ T="Byte", N = "generated_pad5c53" }},
{ 0x12, new FlagGroup { A=2, N="part flags", STR = new Dictionary<int, string>()
{
{0, "draw cull rendering shields" },
{1, "blendshape" },
{2, "colormask Control NormalBlend" },
{3, "draw cull rendering active camo" },
{4, "Don't use virtual texturing" },
{5, "Virtual texturing UV shell skirt" },
}}},
{ 0x14, new C{ T="Unmapped", N = "budget vertex count" }},
{ 0x16, new C{ T="2Byte", N = "generated_pad0f9e" }},
}, S=24}},
{ 0x3C, new C{ T="Tagblock", N = "subparts", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="4Byte", N = "index start" }},
{ 0x4, new C{ T="4Byte", N = "index count" }},
{ 0x8, new C{ T="2Byte", N = "part index" }},
{ 0xA, new C{ T="Unmapped", N = "budget vertex count" }},
}, S=12}},
{ 0x50, new C{ T="Tagblock", N = "material streaming scale", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="4Byte", N = "material index" }},
{ 0x4, new C{ T="Float", N = "material scale" }},
}, S=8}},
{ 0x64, new C{ T="Unmapped", N = "vertex buffer indices" }},
{ 0x84, new C{ T="Unmapped", N = "index buffer index" }},
{ 0x86, new FlagGroup { A=2, N="lod flags", STR = new Dictionary<int, string>()
{
{0, "lod 0" },
{1, "lod 1" },
{2, "lod 2" },
{3, "lod 3" },
{4, "lod 4" },
{5, "lod 5" },
{6, "lod 6" },
{7, "lod 7" },
{8, "lod 8" },
{9, "lod 9" },
{10, "lod 10" },
{11, "lod 11" },
{12, "lod 12" },
{13, "lod 13" },
{14, "lod 14" },
{15, "lod 15" },
}}},
{ 0x88, new FlagGroup { A=2, N="lod render flags", STR = new Dictionary<int, string>()
{
{0, "LOD has shadow proxies" },
}}},
}, S=138}},
{ 0x14, new FlagGroup { A=2, N="mesh flags", STR = new Dictionary<int, string>()
{
{0, "mesh has vertex color" },
{1, "use region index for sorting" },
{2, "can be rendered in draw bundles" },
{3, "mesh is custom shadow caster" },
{4, "mesh is unindexed (do not modify)" },
{5, "mash should render in z prepass" },
{6, "use uncompressed vertex format" },
{7, "mesh is PCA" },
{8, "mesh has a useful set of second texture coords" },
{9, "mesh has a useful set of third texture coords" },
{10, "Use UV3 Tangent Rotation" },
}}},
{ 0x16, new C{ T="Byte", N = "rigid node index" }},
{ 0x17, new EnumGroup { A=1, N="vertex type", STR = new Dictionary<int, string>()
{
{0, "world" },
{1, "rigid" },
{2, "skinned" },
{3, "particle_model" },
{4, "screen" },
{5, "debug" },
{6, "transparent" },
{7, "particle" },
{8, "removed08" },
{9, "removed09" },
{10, "chud_simple" },
{11, "decorator" },
{12, "position only" },
{13, "removed13" },
{14, "ripple" },
{15, "removed15" },
{16, "tessellatedTerrain" },
{17, "empty" },
{18, "decal" },
{19, "removed19" },
{20, "removed20" },
{21, "position_only" },
{22, "tracer" },
{23, "rigid_boned" },
{24, "removed24" },
{25, "CheapParticle" },
{26, "dq_skinned" },
{27, "skinned 8 weights" },
{28, "tessellated vector" },
{29, "interaction" },
{30, "number of standard vertex types" },
}}},
{ 0x18, new C{ T="Unmapped", N = "use dual quat" }},
{ 0x19, new EnumGroup { A=1, N="index buffer type", STR = new Dictionary<int, string>()
{
{0, "DEFAULT" },
{1, "line list" },
{2, "line strip" },
{3, "triangle list" },
{4, "triangle patch" },
{5, "triangle strip" },
{6, "quad list" },
}}},
{ 0x1A, new C{ T="2Byte", N = "pca mesh index" }},
{ 0x1C, new C{ T="Tagblock", N = "vertex keys", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="4Byte", N = "key1" }},
{ 0x4, new C{ T="4Byte", N = "key2" }},
}, S=8}},
{ 0x30, new C{ T="2Byte", N = "clone index" }},
{ 0x32, new C{ T="2Byte", N = "optional LOD volume index" }},
{ 0x34, new C{ T="2Byte", N = "Procedural Deformation Remap Table" }},
{ 0x36, new C{ T="2Byte", N = "generated_pad8fb3" }},
{ 0x38, new C{ T="4Byte", N = "lod state cache slot" }},
}, S=60}},
{ 0xD4, new C{ T="Tagblock", N = "PCA Mesh Indices", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="4Byte", N = "mesh index" }},
}, S=4}},
{ 0xE8, new C{ T="Tagblock", N = "compression info", B = new Dictionary<long, C>
{
{ 0x0, new FlagGroup { A=2, N="compression flags", STR = new Dictionary<int, string>()
{
{0, "compressed position" },
{1, "compressed texcoord" },
{2, "compression optimized" },
}}},
{ 0x2, new C{ T="2Byte", N = "generated_pad1711" }},
{ 0x410823, new C{ T="Comment", N = "WARNING" }},
{ 0x4, new C{ T="Float", N = "position bounds 0.X" }},
{ 0x8, new C{ T="Float", N = "position bounds 0.Y" }},
{ 0xC, new C{ T="Float", N = "position bounds 0.Z" }},
{ 0x10, new C{ T="Float", N = "position bounds 1.X" }},
{ 0x14, new C{ T="Float", N = "position bounds 1.Y" }},
{ 0x18, new C{ T="Float", N = "position bounds 1.Z" }},
{ 0x1C, new C{ T="Unmapped", N = "texcoord bounds 0" }},
{ 0x20, new C{ T="Unmapped", N = "texcoord bounds 1" }},
{ 0x24, new C{ T="Unmapped", N = "texcoord bounds2 0" }},
{ 0x28, new C{ T="Unmapped", N = "texcoord bounds2 1" }},
{ 0x2C, new C{ T="Unmapped", N = "texcoord bounds3 0" }},
{ 0x30, new C{ T="Unmapped", N = "texcoord bounds3 1" }},
{ 0x34, new C{ T="Float", N = "unused0" }},
{ 0x38, new C{ T="Float", N = "unused1" }},
}, S=60}},
{ 0xFC, new C{ T="Tagblock", N = "per mesh node map", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Tagblock", N = "node map", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Unmapped", N = "node index" }},
}, S=2}},
}, S=20}},
{ 0x110, new C{ T="Tagblock", N = "Optional animated mesh tag references", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "Animated mesh tag reference" }},
{ 0x1C, new C{ T="mmr3Hash", N = "Name" }},
}, S=32}},
{ 0x124, new C{ T="Tagblock", N = "Optional LOD volumes data", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "position bounds 0.X" }},
{ 0x4, new C{ T="Float", N = "position bounds 0.Y" }},
{ 0x8, new C{ T="Float", N = "position bounds 0.Z" }},
{ 0xC, new C{ T="Float", N = "position bounds 1.X" }},
{ 0x10, new C{ T="Float", N = "position bounds 1.Y" }},
{ 0x14, new C{ T="Float", N = "position bounds 1.Z" }},
{ 0x18, new C{ T="Tagblock", N = "position data", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Unmapped", N = "plane" }},
{ 0xC, new C{ T="Float", N = "position.X" }},
{ 0x10, new C{ T="Float", N = "position.Y" }},
{ 0x14, new C{ T="Float", N = "position.Z" }},
{ 0x18, new C{ T="Float", N = "radius" }},
{ 0x1C, new C{ T="Unmapped", N = "node indices" }},
{ 0x3C, new C{ T="Unmapped", N = "node weights" }},
}, S=92}},
}, S=44}},
{ 0x13810824, new C{ T="Comment", N = "mesh package" }},
{ 0x138, new C{ T="Unmapped", N = "flags" }},
{ 0x13A, new EnumGroup { A=2, N="mesh resource packing policy", STR = new Dictionary<int, string>()
{
{0, "Single Resource" },
{1, "N Meshes Per Resource" },
}}},
{ 0x13C, new C{ T="Unmapped", N = "total index buffer count" }},
{ 0x13E, new C{ T="Unmapped", N = "total vertex buffer count" }},
{ 0x140, new C{ T="Tagblock", N = "mesh resource groups", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Unmapped", N = "mesh resource" }},
}, S=4}},
{ 0x154, new C{ T="Tagblock", N = "index resource look up", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="2Byte", N = "resource group index" }},
{ 0x2, new C{ T="2Byte", N = "group item index" }},
}, S=4}},
{ 0x168, new C{ T="Tagblock", N = "vertex resource look up", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="2Byte", N = "resource group index" }},
{ 0x2, new C{ T="2Byte", N = "group item index" }},
}, S=4}},
{ 0x17C, new C{ T="Tagblock", N = "blendshape compression info", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Float", N = "position scale.X" }},
{ 0x4, new C{ T="Float", N = "position scale.Y" }},
{ 0x8, new C{ T="Float", N = "position scale.Z" }},
{ 0xC, new C{ T="Float", N = "position offset.X" }},
{ 0x10, new C{ T="Float", N = "position offset.Y" }},
{ 0x14, new C{ T="Float", N = "position offset.Z" }},
{ 0x18, new C{ T="Float", N = "normal scale.X" }},
{ 0x1C, new C{ T="Float", N = "normal scale.Y" }},
{ 0x20, new C{ T="Float", N = "normal scale.Z" }},
{ 0x24, new C{ T="Float", N = "normal offset.X" }},
{ 0x28, new C{ T="Float", N = "normal offset.Y" }},
{ 0x2C, new C{ T="Float", N = "normal offset.Z" }},
{ 0x30, new C{ T="Tagblock", N = "raw target hash name", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="4Byte", N = "dword" }},
}, S=4}},
}, S=68}},
{ 0x190, new C{ T="Tagblock", N = "blendshape Procedural Deformation function list", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Tagblock", N = "parameter list", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "parameter name" }},
{ 0x4, new C{ T="Byte", N = "parameter mode" }},
{ 0x5, new C{ T="Comment", N = "generated_pad8065" }},
{ 0x8, new C{ T="Float", N = "constant input" }},
}, S=12}},
{ 0x14, new C{ T="mmr3Hash", N = "Procedural deformation function name" }},
}, S=24}},
{ 0x1A4, new C{ T="Tagblock", N = "Procedural Deformation function Remap Table List", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Tagblock", N = "Procedural Remap Table", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Unmapped", N = "word" }},
}, S=2}},
}, S=20}},
{ 0x1B8, new C{ T="Tagblock", N = "Deformation parameter default value table from skeleton", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "parameter name" }},
{ 0x4, new C{ T="Float", N = "parameter default value" }},
}, S=8}},
{ 0x1CC, new C{ T="4Byte", N = "generated_paddf2d" }},
{ 0x1D0, new C{ T="Pointer", N = "perMeshPartConstantBuffer" }},
{ 0x1D8, new C{ T="Tagblock", N = "node map mapping", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="2Byte", N = "instance_node map region node index" }},
}, S=2}},
{ 0x1EC, new C{ T="Tagblock", N = "runtime node orientations", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="Unmapped", N = "rotation" }},
{ 0xC, new C{ T="Float", N = "translation.X" }},
{ 0x10, new C{ T="Float", N = "translation.Y" }},
{ 0x14, new C{ T="Float", N = "translation.Z" }},
{ 0x18, new C{ T="Float", N = "scale" }},
}, S=28}},
{ 0x200, new C{ T="Tagblock", N = "bone groups", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="mmr3Hash", N = "name" }},
{ 0x4, new C{ T="Tagblock", N = "bones", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="2Byte", N = "node index" }},
}, S=2}},
}, S=24}},
{ 0x214, new C{ T="Tagblock", N = "cloth meshes", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="4Byte", N = "nameHash" }},
{ 0x4, new C{ T="Tagblock", N = "meshIndex", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="4Byte", N = "index" }},
}, S=4}},
{ 0x18, new C{ T="4Byte", N = "meshLodIndex" }},
{ 0x1C, new FlagGroup { A=2, N="flags", STR = new Dictionary<int, string>()
{
{0, "16 bit indices" },
}}},
{ 0x1E, new C{ T="Unmapped", N = "numVertexComponents" }},
{ 0x20, new C{ T="4Byte", N = "vertexCount" }},
{ 0x24, new C{ T="4Byte", N = "triangleCount" }},
{ 0x28, new C{ T="Unmapped", N = "geometry" }},
}, S=64}},
{ 0x228, new C{ T="Tagblock", N = "cloth datas", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="4Byte", N = "regionIndex" }},
{ 0x4, new C{ T="Tagblock", N = "meshIndex", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="4Byte", N = "index" }},
}, S=4}},
{ 0x18, new C{ T="Unmapped", N = "havokData" }},
}, S=48}},
{ 0x23C, new C{ T="TagRef", N = "parent model" }},
{ 0x258, new C{ T="Tagblock", N = "MaterialPipelineStateInfos", B = new Dictionary<long, C>
{
{ 0x0, new C{ T="TagRef", N = "shader" }},
{ 0x1C, new EnumGroup { A=1, N="alpha blend mode", STR = new Dictionary<int, string>()
{
{0, "opaque" },
{1, "additive" },
{2, "multiply" },
{3, "alpha_blend" },
{4, "double_multiply" },
{5, "pre_multiplied_alpha" },
{6, "maximum" },
{7, "multiply_add" },
{8, "add_src_times_dstalpha" },
{9, "add_src_times_srcalpha" },
{10, "inv_alpha_blend" },
{11, "overdraw_apply" },
{12, "decal" },
{13, "minimum" },
{14, "revsubtract" },
{15, "alpha_blend_max" },
{16, "opaque_alpha_blend" },
{17, "alpha_blend_additive_transparent" },
{18, "floating shadow" },
{19, "decal_alpha_blend" },
{20, "decal_add_src_times_src_alpha" },
{21, "decal_multiply_add" },
{22, "wpf_no_color_blend_mode" },
{23, "decal opaque" },
{24, "accumulate_pre_multiplied_alpha" },
{25, "wpf_blend_mode" },
{26, "accumulate_multiply_add" },
{27, "accumulate_alpha_blend" },
{28, "accumulate_inverse_alpha_blend" },
{29, "accumulate_additive" },
{30, "accumulate_additive_transparent" },
{31, "accumulate_add_src_times_srcalpha" },
{32, "accumulate_multiply" },
{33, "alpha_blend_for_display_planes" },
{34, "texturePainter_SrcAddDestMult" },
{35, "texturePainter_DestMultSubSrc" },
{36, "logical OR" },
{37, "logical AND" },
{38, "decal_multiply" },
{39, "decal_double_multiply" },
{40, "fourChannelAdditive" },
{41, "wpf_additive_blend_mode" },
{42, "cloud apply" },
{43, "subsurfaceScattering_convolution" },
{44, "reflectionOcclusionMask" },
{45, "TAA mask Additive" },
{46, "TAA mask RevSubtract" },
{47, "TAA mask Multiply" },
{48, "TAA mask DoubleMultiply" },
{49, "TAA mask PreMultipliedAlpha" },
{50, "TAA mask MultiplyAdd" },
{51, "TAA mask AlphaBlend" },
{52, "TAA mask AddSrcTimesDstAlpha" },
{53, "TAA mask AddSrcTimesSrcAlpha" },
{54, "TAA mask AdditiveTransparent" },
{55, "TAA mask Alpha Blend for Display Plane" },
{56, "TAA Velocity Additive" },
{57, "TAA Velocity RevSubtract" },
{58, "TAA Velocity Multiply" },
{59, "TAA Velocity DoubleMultiply" },
{60, "TAA Velocity PreMultipliedAlpha" },
{61, "TAA Velocity MultiplyAdd" },
{62, "TAA Velocity AlphaBlend" },
{63, "TAA Velocity AddSrcTimesDstAlpha" },
{64, "TAA Velocity AddSrcTimesSrcAlpha" },
{65, "TAA Velocity AdditiveTransparent" },
{66, "TAA Velocity Alpha Blend for Display Plane" },
{67, "DeferredDecalsResolve" },
{68, "decal_ao_opaque" },
{69, "decal_ao_alpha_blend" },
{70, "decal_sss_blend" },
{71, "Hud Damage Alpha Blend" },
}}},
{ 0x1D, new FlagGroup { A=1, N="flags", STR = new Dictionary<int, string>()
{
{0, "transparent write depth" },
{1, "taa mask" },
{2, "taa write velocity" },
{3, "no fog" },
}}},
{ 0x1E, new C{ T="2Byte", N = "generated_pad67cc" }},
}, S=32}},
{ 0x26C, new C{ T="4Byte", N = "generated_pad21f3" }},
{ 0x270, new C{ T="Pointer", N = "m_instanceGroupPipelineStateCache" }},
}},

{
				"hlmt",
				new() {
					{ 0x10, new C { T = "TagRef", N = "Model" } }, // mode
					{ 0x2C, new C { T = "TagRef", N = "Collision model" } }, // COLL
					{ 0x48, new C { T = "TagRef", N = "Animations" } }, // JMAD
					{ 0x64, new C { T = "TagRef", N = "Physics model" } }, // PHMO

					{ 0xAC, new C { T = "Tagblock" } },
					{0xF4,new C{T = "Tagblock",B = new Dictionary<long, C> // object variant
					{
						{ 0x0, new C { T = "mmr3Hash", N = "Variant Hash" } }, // variant
						{ 0x4, new C { T = "mmr3Hash", N = "Coating Hash" } }, // coating

						{ 0x34, new C{ T="Tagblock", B=new Dictionary<long, C> // region block
						{
							{ 0x0, new C{ T="mmr3Hash"}},
							{ 0x4, new C{ T="Byte", N="Model Region Index"}},
							{ 0x5, new C{ T="Flags"}},
							{ 0x6, new C{ T="2Byte", N="Parent Variant"}},
							{ 0x8, new C{ T="Tagblock", B=new Dictionary<long, C> // permutation block
							{
								{ 0x0, new C{ T="mmr3Hash"}},
								{ 0x4, new C{ T="Byte", N="Model Permutation Index"}},
								{ 0xC, new C{ T="Float",N="Probability"}},
								{ 0x10, new C{ T="Tagblock"}},
							}, S=44}},

						}, S=32}},



						{ 0x48, new C{ T="Tagblock", B=new Dictionary<long, C> // object block
						{
							{ 12, new C{ T="TagRef", N = "Attached Object"}}, //
						    { 40, new C{ T="TagRef"}}, //
						}, S=72}},
						{ 0x5C, new C{ T="Tagblock"}},
						{ 0x70, new C{ T="Tagblock"}},
						{ 0x104, new C{ T="TagRef"}},
						{ 0x120, new C{ T="TagRef"}},
						{ 0x13C, new C{ T="TagRef"}},
						{ 0x158, new C{ T="TagRef"}},
						{ 0x174, new C{ T="Tagblock"}},
					},S = 392}},

					{ 0x108, new C { T = "Tagblock" } },
					{ 0x11C, new C { T = "Tagblock" } },
					{ 0x130, new C { T = "Tagblock" } },
					{ 0x150, new C { T = "TagRef" } },

					{ 0x16C, new C { T = "Tagblock" } },
					{ 0x180, new C { T = "Tagblock" } },
					{ 0x194, new C { T = "Tagblock" } },

					{ 0x1E8, new C { T = "TagRef" } },

					{ 0x204, new C { T = "Tagblock" } },
					{ 0x218, new C { T = "Tagblock" } },
					{ 0x22C, new C { T = "Tagblock" } },
					{ 0x240, new C { T = "Tagblock" } },
					{ 0x258, new C { T = "Tagblock" } },
					{ 0x26C, new C { T = "Tagblock" } },

					{ 0x280, new C { T = "TagRef" } },
					{ 0x29C, new C { T = "TagRef" } },

					{ 0x2B8, new C { T = "Tagblock" } },
					{ 0x2CC, new C { T = "Tagblock" } },
					{ 0x2E0, new C { T = "Tagblock" } },
				}
			}
			,






			{"vcdd",new() // Vehicle Configuration
			{
				{ 0x10, new C { T = "TagRef" } },      // Vehi
				{ 0x34, new C { T = "TagRef" } },      // Sofd
				{ 0x70, new C { T = "Tagblock"} },     // i343::Vehicle::WeaponConfigurationGroup
				{ 0xA8, new C { T = "Float" } },       // No clue What this does
				{ 0xE8, new C { T = "TagRef" } },      // Sbnk


			}},

			{"weat",new() // Weapon Attachment
			{
				{ 0x18, new C { T = "Tagblock"} },     // i343::Weapon::AttachmentRegionPermutationDefinition
				{ 0x58, new C { T = "Tagblock"} },     // i343::Weapon::AccuracyPropertyModifiersDefinition
				{ 0x80, new C { T = "Tagblock"} },	   // i343::Weapon::UnitPropertyModifiersDefinition
				{ 0xD8, new C { T = "Tagblock"} },     // i343::Weapon::RecoilGunkickPropertyModifiersDefinition
				{ 0x100, new C { T = "Tagblock"} },    // i343::Weapon::HeatPropertyModifiersDefinition
				{ 0x128, new C { T = "TagRef"} },	   // Bloc
				{ 0x14C, new C { T = "Float" } },       // No clue What this does
				{ 0x150, new C { T = "Float" } },       // No clue What this does
				{ 0x164, new C { T = "Float" } },       // No clue What this does
				{ 0x168, new C { T = "Float" } },       // No clue What this does
				{ 0x16C, new C { T = "Float" } },       // No clue What this does
				{ 0x170, new C { T = "Float" } },       // No clue What this does

			}},

		};


	}
}